MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:10:40" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 09, 2022
Time:                15:10:40
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1XLSRN1 "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1XLSRN1 new;
MPRINT(EM_DIAGRAM):   run;
175070     %let EMEXCEPTIONSTRING=;
175071     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
175072     * SCORE: Tree;
MPRINT(EM_DIAGRAM):   * SCORE: Tree;
175073     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175074     %let EM_ACTION = SCORE;
175075     %let syscc = 0;
175076     %macro main;
175077     
175078       %if %upcase(&EM_ACTION) = CREATE %then %do;
175079         filename temp catalog 'sashelp.emmodl.tree_create.source';
175080         %include temp;
175081         filename temp;
175082     
175083         %em_tree_create;
175084       %end;
175085     
175086        %else
175087        %if %upcase(&EM_ACTION) = TRAIN %then %do;
175088     
175089            filename temp catalog 'sashelp.emmodl.tree_train.source';
175090            %include temp;
175091            filename temp;
175092            %em_tree_train;
175093        %end;
175094     
175095       %else
175096       %if %upcase(&EM_ACTION) = SCORE %then %do;
175097         filename temp catalog 'sashelp.emmodl.tree_score.source';
175098         %include temp;
175099         filename temp;
175100     
175101         %em_tree_score;
175102     
175103       %end;
175104     
175105       %else
175106       %if %upcase(&EM_ACTION) = REPORT %then %do;
175107     
175108            filename temp catalog 'sashelp.emmodl.tree_report.source';
175109            %include temp;
175110            filename temp;
175111     
175112            %em_tree_report;
175113        %end;
175114     
175115       %else
175116       %if %upcase(&EM_ACTION) = OPENINT %then %do;
175117     
175118            filename temp catalog 'sashelp.emmodl.tree_actions.source';
175119            %include temp;
175120            filename temp;
175121            %EM_TREE_OPENTREEVIEWER;
175122     
175123        %end;
175124     
175125       %else
175126       %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
175127     
175128            filename temp catalog 'sashelp.emmodl.tree_actions.source';
175129            %include temp;
175130            filename temp;
175131            %EM_TREE_CLOSETREEVIEWER;
175132     
175133        %end;
175134     
175135     
175136        %doendm:
175137     %mend main;
175138     
175139     %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
175141    +%macro em_tree_score;
175143    +   /* determine if multiple targets will be processed */
175144    +   %let em_tree_multipleTargets=N;
175145    +   %let em_tree_numTarget=1;
175146    +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
175147    +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
175148    +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
175149    +         %let em_tree_multipleTargets=N;
175150    +      %end;
175151    +      %else %do;
175152    +         /* create macro array of targets  */
175153    +         data _null_;
175154    +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
175155    +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
175156    +           if eof then
175157    +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
175158    +        run;
175160    +        %if &em_tree_numTarget gt 1 %then %do;
175161    +           %let em_tree_multipleTargets=Y;
175162    +        %end;
175163    +      %end;
175164    +   %end;
175166    +   /* build flow and publish scoring code */
175167    +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
175168    +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
175170    +   filename treeflow "&EM_USER_TREEFLOW";
175171    +   filename treepub "&EM_USER_TREEPUBLISH";
175173    +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
175174    +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
175176    +   %em_copyfile(infref=treeflow, outfref=flowref);
175177    +   %em_copyfile(infref=treepub, outfref=pubref);
175179    +   filename treeflow;
175180    +   filename treepub;
175182    +   /* if priors are used, add code to generate unadjusted residuals in export */
175183    +   %let useAdjPriors = N;
175184    +   data _null_;
175185    +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
175186    +     if USE="Y" then call symput('useAdjPriors', 'Y');
175187    +   run;
175188    +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
175189    +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
175190    +      %include temp;
175191    +      filename temp;
175193    +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
175194    +      filename adjref "&EM_USER_adjResidualCode";
175195    +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
175197    +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
175199    +      filename adjref;
175200    +   %end;
175202    +   /* LEAF */
175203    +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
175204    +      data _null_;
175205    +        file flowref mod;
175206    +        put 'drop _LEAF_;';
175207    +      run;
175209    +      data _null_;
175210    +        file pubref mod;
175211    +        put 'drop _LEAF_;';
175212    +      run;
175214    +   %end;
175216    +   filename flowref;
175217    +   filename pubref;
175219    +   /* em_metachange code */
175220    +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
175221    +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
175222    +   %end;
175224    +   /* variable selection based on importance stat    */
175225    +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
175226    +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
175227    +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
175228    +     %let varnum = %sysfunc(varnum(&dsid, NAME));
175229    +     %let obs = %sysfunc(fetch(&dsid));
175230    +     %do %while(&obs=0);
175231    +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
175232    +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
175233    +       %EM_METACHANGE(name=&varname, role=REJECTED);
175234    +       %let obs = %sysfunc(fetch(&dsid));
175235    +     %end;
175236    +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
175237    +   %end;
175239    +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
175240    +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
175241    +    %let tree_pred_vars = ;
175242    +    %let tree_pred_lvl =;
175243    +    %let numpred= 0;
175245    +    data _null_;
175246    +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
175247    +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
175248    +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
175249    +     if eof then
175250    +       call symput('numpred', strip(put(_N_, BEST.)));
175251    +    run;
175252    +   %end;
175254    +   %if &numpred ne 0 %then %do;
175255    +    %do i=1 %to &numpred;
175256    +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
175257    +      %EM_METACHANGE(name=&qpred, role=ASSESS);
175258    +    %end;
175259    +   %end;
175261    +   /* determine if multiple targets will be processed */
175262    +   %let em_tree_multipleTargets=N;
175263    +   %let em_tree_numTarget=1;
175264    +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
175265    +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
175266    +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
175267    +         %let em_tree_multipleTargets=N;
175268    +      %end;
175269    +      %else %do;
175270    +        data _null_;
175271    +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
175272    +          if eof then
175273    +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
175274    +        run;
175276    +        %if &em_tree_numTarget gt 1 %then %do;
175277    +           %let em_tree_multipleTargets=Y;
175278    +        %end;
175279    +     %end;
175280    +   %end;
175282    +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
175283    +   %if "&em_tree_multipleTargets" eq "N" %then %do;
175285    +      /* variable importance */
175286    +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
175287    +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
175289    +         %let validexist=0;
175290    +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
175291    +           %let validexist=1;
175292    +         %end;
175294    +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
175295    +         /* and the columns may not be generated                                                                                 */
175296    +         %let em_tree_cvexists=;
175297    +         %let em_tree_surrexists=.;
175298    +         data _null_;
175299    +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
175300    +            if eof then do ;
175301    +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
175302    +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
175303    +            end;
175304    +         run;
175306    +         data &EM_USER_OUTIMPORT;
175307    +            set &EM_USER_OUTIMPORT;
175309    +            /* format columns based on Precison value specified */
175310    +            format importance 15.&EM_PROPERTY_PRECISION
175311    +                 %if &validexist %then %do;
175312    +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
175313    +                 %end;
175314    +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
175315    +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
175316    +                 %end;
175317    +            ;
175318    +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
175319    +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
175320    +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
175321    +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
175322    +                 %if "&em_tree_surrexists" ne "" %then %do;
175323    +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
175324    +                 %end;
175325    +                 %if &validexist %then %do;
175326    +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
175327    +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
175328    +                 %end;
175329    +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
175330    +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
175331    +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
175332    +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
175333    +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
175334    +                 %end;
175335    +            ;
175336    +         run;
175338    +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
175339    +      %end;
175340    +   %end;
175342    +   %doendm:
175343    +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Apr2022:15:10:40,
      Create Time=09Apr2022:15:10:40

NOTE: 424 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Apr2022:15:10:40,
      Create Time=09Apr2022:15:10:40

NOTE: 402 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17844,
      Last Modified=09Apr2022:15:10:40,
      Create Time=09Apr2022:15:10:40

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17060,
      Last Modified=09Apr2022:15:10:40,
      Create Time=09Apr2022:15:10:40

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("G_Contacts_Count_12_mon         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("G_Months_on_book                ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RANGE_SQRT_Avg_Utilization_Ratio");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Attrition_Flag1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Attrition_Flag0");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 11 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: The data set EMWS1.TREE_OUTIMPORT has 11 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.85161836484988;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175344     
175345     *------------------------------------------------------------*;
175346     * End SCORE: Tree;
175347     *------------------------------------------------------------*;

175348     proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
175349     by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
175350     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

175351     filename x "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
175352     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
175353     file x;
MPRINT(EM_DIAGRAM):   file x;
175354     put 'if upcase(NAME) = "G_CONTACTS_COUNT_12_MON" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "G_CONTACTS_COUNT_12_MON" then do;';
175355     put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
175356     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
175357     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
175358     put 'if upcase(NAME) = "G_MONTHS_ON_BOOK" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "G_MONTHS_ON_BOOK" then do;';
175359     put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
175360     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
175361     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
175362     put 'if upcase(NAME) = "Q_ATTRITION_FLAG0" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_ATTRITION_FLAG0" then do;';
175363     put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
175364     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
175365     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
175366     put 'if upcase(NAME) = "Q_ATTRITION_FLAG1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_ATTRITION_FLAG1" then do;';
175367     put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
175368     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
175369     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
175370     put 'if upcase(NAME) = "RANGE_SQRT_AVG_UTILIZATION_RATIO" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RANGE_SQRT_AVG_UTILIZATION_RATIO" then do;';
175371     put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
175372     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
175373     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
175374     put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
175375     put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
175376     put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
175377     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
175378     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=09Apr2022:15:10:41,
      Create Time=29Mar2022:21:42:21

NOTE: 24 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

175379     filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
175380     filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175381     *------------------------------------------------------------*;
175382     * Tree: Scoring DATA data;
175383     *------------------------------------------------------------*;
175384     data EMWS1.Tree_TRAIN
175385     / view=EMWS1.Tree_TRAIN
175386     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_TRAIN / view=EMWS1.Tree_TRAIN ;
175387     set EMWS1.Part2_TRAIN
175388     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN ;
175389     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
175390    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
175391    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
175392    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
175393    +
175394    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
175395    +LENGTH F_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH F_Attrition_Flag $ 17;
175396    +LENGTH I_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH I_Attrition_Flag $ 17;
175397    +LENGTH U_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH U_Attrition_Flag $ 17;
175398    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
175399    +
175400    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
175401    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
175402    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
175403    +label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
175404    +label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
175405    +label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
175406    +label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
175407    +label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
175408    +label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
175409    +label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
175410    +label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
175411    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
175412    +label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
175413    +label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
175414    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
175415    +
175416    +
175417    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
175418    +LENGTH _ARBFMT_17 $     17; DROP _ARBFMT_17;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_17 $ 17;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_17;
175419    +_ARBFMT_17 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = ' ';
175420    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
175421    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
175422    +
175423    +
175424    +_ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
175425    + %DMNORMCP( _ARBFMT_17, F_Attrition_Flag );
MPRINT(DMNORMCP):   F_Attrition_Flag=dmnorm(_ARBFMT_17,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
175426    +
175427    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
175428    +_ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
175429    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175430    +IF _ARBFMT_12 IN ('1' ,'3' ,'4' ,'2' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'3' ,'4' ,'2' ,'0' ) THEN DO;
175431    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
175432    +    RANGE_Total_Revolving_Bal  <     0.24215335717123 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.24215335717123 THEN DO;
175433    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
175434    +          0.45221286754555 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.45221286754555 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
175435    +      _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
175436    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175437    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
175438    +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
175439    +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
175440    +        P_Attrition_Flag0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05555555555555;
175441    +        P_Attrition_Flag1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94444444444444;
175442    +        Q_Attrition_Flag0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05555555555555;
175443    +        Q_Attrition_Flag1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94444444444444;
175444    +        V_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.11111111111111;
175445    +        V_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.88888888888888;
175446    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175447    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175448    +        END;
MPRINT(EM_DIAGRAM):   END;
175449    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175450    +        IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
175451    +          RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.43199033198472 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.43199033198472 THEN DO;
175452    +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
175453    +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
175454    +          P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
175455    +          P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
175456    +          Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
175457    +          Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
175458    +          V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
175459    +          V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
175460    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175461    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175462    +          END;
MPRINT(EM_DIAGRAM):   END;
175463    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175464    +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
175465    +          _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
175466    +          P_Attrition_Flag0  =               0.8125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8125;
175467    +          P_Attrition_Flag1  =               0.1875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1875;
175468    +          Q_Attrition_Flag0  =               0.8125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8125;
175469    +          Q_Attrition_Flag1  =               0.1875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.1875;
175470    +          V_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8;
175471    +          V_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.2;
175472    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175473    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175474    +          END;
MPRINT(EM_DIAGRAM):   END;
175475    +        END;
MPRINT(EM_DIAGRAM):   END;
175476    +      END;
MPRINT(EM_DIAGRAM):   END;
175477    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175478    +      _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
175479    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175480    +      IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ) THEN DO;
175481    +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
175482    +        _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
175483    +        P_Attrition_Flag0  =                 0.54;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.54;
175484    +        P_Attrition_Flag1  =                 0.46;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.46;
175485    +        Q_Attrition_Flag0  =                 0.54;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.54;
175486    +        Q_Attrition_Flag1  =                 0.46;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.46;
175487    +        V_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.83333333333333;
175488    +        V_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.16666666666666;
175489    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175490    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175491    +        END;
MPRINT(EM_DIAGRAM):   END;
175492    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175493    +        _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
175494    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175495    +        IF _ARBFMT_12 IN ('9' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ) THEN DO;
175496    +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
175497    +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
175498    +          P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
175499    +          P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
175500    +          Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
175501    +          Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
175502    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
175503    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
175504    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175505    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175506    +          END;
MPRINT(EM_DIAGRAM):   END;
175507    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175508    +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
175509    +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
175510    +          P_Attrition_Flag0  =     0.08902691511387;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.08902691511387;
175511    +          P_Attrition_Flag1  =     0.91097308488612;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.91097308488612;
175512    +          Q_Attrition_Flag0  =     0.08902691511387;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.08902691511387;
175513    +          Q_Attrition_Flag1  =     0.91097308488612;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.91097308488612;
175514    +          V_Attrition_Flag0  =      0.1418439716312;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.1418439716312;
175515    +          V_Attrition_Flag1  =     0.85815602836879;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85815602836879;
175516    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175517    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175518    +          END;
MPRINT(EM_DIAGRAM):   END;
175519    +        END;
MPRINT(EM_DIAGRAM):   END;
175520    +      END;
MPRINT(EM_DIAGRAM):   END;
175521    +    END;
MPRINT(EM_DIAGRAM):   END;
175522    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175523    +    _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
175524    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175525    +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
175526    +      _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
175527    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175528    +      IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ) THEN DO;
175529    +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
175530    +        _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
175531    +        P_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.66666666666666;
175532    +        P_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.33333333333333;
175533    +        Q_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.66666666666666;
175534    +        Q_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.33333333333333;
175535    +        V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
175536    +        V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
175537    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175538    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175539    +        END;
MPRINT(EM_DIAGRAM):   END;
175540    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175541    +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
175542    +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
175543    +        P_Attrition_Flag0  =     0.12222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.12222222222222;
175544    +        P_Attrition_Flag1  =     0.87777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.87777777777777;
175545    +        Q_Attrition_Flag0  =     0.12222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.12222222222222;
175546    +        Q_Attrition_Flag1  =     0.87777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.87777777777777;
175547    +        V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
175548    +        V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
175549    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175550    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175551    +        END;
MPRINT(EM_DIAGRAM):   END;
175552    +      END;
MPRINT(EM_DIAGRAM):   END;
175553    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175554    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
175555    +            0.11922630474959 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.11922630474959 <= RANGE_LOG_Total_Trans_Amt THEN DO;
175556    +        IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
175557    +          RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.41234945173394 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.41234945173394 THEN DO;
175558    +          _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
175559    +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175560    +          IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
175561    +            _NODE_  =                   72;
MPRINT(EM_DIAGRAM):   _NODE_ = 72;
175562    +            _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
175563    +            P_Attrition_Flag0  =                 0.85;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85;
175564    +            P_Attrition_Flag1  =                 0.15;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.15;
175565    +            Q_Attrition_Flag0  =                 0.85;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85;
175566    +            Q_Attrition_Flag1  =                 0.15;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.15;
175567    +            V_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.75;
175568    +            V_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.25;
175569    +            I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175570    +            U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175571    +            END;
MPRINT(EM_DIAGRAM):   END;
175572    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175573    +            _NODE_  =                   73;
MPRINT(EM_DIAGRAM):   _NODE_ = 73;
175574    +            _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
175575    +            P_Attrition_Flag0  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2265625;
175576    +            P_Attrition_Flag1  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7734375;
175577    +            Q_Attrition_Flag0  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2265625;
175578    +            Q_Attrition_Flag1  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7734375;
175579    +            V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
175580    +            V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
175581    +            I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175582    +            U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175583    +            END;
MPRINT(EM_DIAGRAM):   END;
175584    +          END;
MPRINT(EM_DIAGRAM):   END;
175585    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175586    +          _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
175587    +          _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
175588    +          P_Attrition_Flag0  =     0.83957219251336;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83957219251336;
175589    +          P_Attrition_Flag1  =     0.16042780748663;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16042780748663;
175590    +          Q_Attrition_Flag0  =     0.83957219251336;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83957219251336;
175591    +          Q_Attrition_Flag1  =     0.16042780748663;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16042780748663;
175592    +          V_Attrition_Flag0  =     0.84482758620689;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.84482758620689;
175593    +          V_Attrition_Flag1  =      0.1551724137931;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.1551724137931;
175594    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175595    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175596    +          END;
MPRINT(EM_DIAGRAM):   END;
175597    +        END;
MPRINT(EM_DIAGRAM):   END;
175598    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175599    +        IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
175600    +          RANGE_LOG_Total_Trans_Amt  <     0.03539998717758 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03539998717758 THEN DO;
175601    +          _NODE_  =                   48;
MPRINT(EM_DIAGRAM):   _NODE_ = 48;
175602    +          _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
175603    +          P_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09090909090909;
175604    +          P_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9090909090909;
175605    +          Q_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09090909090909;
175606    +          Q_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9090909090909;
175607    +          V_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.2;
175608    +          V_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8;
175609    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175610    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175611    +          END;
MPRINT(EM_DIAGRAM):   END;
175612    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175613    +          _NODE_  =                   49;
MPRINT(EM_DIAGRAM):   _NODE_ = 49;
175614    +          _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
175615    +          P_Attrition_Flag0  =     0.93779160186625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93779160186625;
175616    +          P_Attrition_Flag1  =     0.06220839813374;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06220839813374;
175617    +          Q_Attrition_Flag0  =     0.93779160186625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93779160186625;
175618    +          Q_Attrition_Flag1  =     0.06220839813374;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06220839813374;
175619    +          V_Attrition_Flag0  =     0.95555555555555;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.95555555555555;
175620    +          V_Attrition_Flag1  =     0.04444444444444;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.04444444444444;
175621    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175622    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175623    +          END;
MPRINT(EM_DIAGRAM):   END;
175624    +        END;
MPRINT(EM_DIAGRAM):   END;
175625    +      END;
MPRINT(EM_DIAGRAM):   END;
175626    +    END;
MPRINT(EM_DIAGRAM):   END;
175627    +  END;
MPRINT(EM_DIAGRAM):   END;
175628    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175629    +  IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
175630    +    RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <      0.3183909236815 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.3183909236815 THEN DO;
175631    +    _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
175632    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175633    +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
175634    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
175635    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
175636    +      P_Attrition_Flag0  =                 0.04;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.04;
175637    +      P_Attrition_Flag1  =                 0.96;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.96;
175638    +      Q_Attrition_Flag0  =                 0.04;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.04;
175639    +      Q_Attrition_Flag1  =                 0.96;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.96;
175640    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
175641    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
175642    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175643    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175644    +      END;
MPRINT(EM_DIAGRAM):   END;
175645    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175646    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
175647    +            0.08300830873515 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08300830873515 <= RANGE_LOG_Total_Trans_Amt THEN DO;
175648    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
175649    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175650    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
175651    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
175652    +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
175653    +          P_Attrition_Flag0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.22857142857142;
175654    +          P_Attrition_Flag1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.77142857142857;
175655    +          Q_Attrition_Flag0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.22857142857142;
175656    +          Q_Attrition_Flag1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.77142857142857;
175657    +          V_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.22222222222222;
175658    +          V_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.77777777777777;
175659    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175660    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175661    +          END;
MPRINT(EM_DIAGRAM):   END;
175662    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175663    +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
175664    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
175665    +          P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
175666    +          P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
175667    +          Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
175668    +          Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
175669    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
175670    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
175671    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175672    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175673    +          END;
MPRINT(EM_DIAGRAM):   END;
175674    +        END;
MPRINT(EM_DIAGRAM):   END;
175675    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175676    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
175677    +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
175678    +        P_Attrition_Flag0  =     0.76388888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.76388888888888;
175679    +        P_Attrition_Flag1  =     0.23611111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.23611111111111;
175680    +        Q_Attrition_Flag0  =     0.76388888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.76388888888888;
175681    +        Q_Attrition_Flag1  =     0.23611111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.23611111111111;
175682    +        V_Attrition_Flag0  =     0.73333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.73333333333333;
175683    +        V_Attrition_Flag1  =     0.26666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.26666666666666;
175684    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175685    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175686    +        END;
MPRINT(EM_DIAGRAM):   END;
175687    +      END;
MPRINT(EM_DIAGRAM):   END;
175688    +    END;
MPRINT(EM_DIAGRAM):   END;
175689    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175690    +    IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
175691    +      RANGE_Total_Revolving_Bal  <     0.22804926499801 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.22804926499801 THEN DO;
175692    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
175693    +            0.34801787120737 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.34801787120737 <= RANGE_LOG_Total_Trans_Amt THEN DO;
175694    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
175695    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175696    +        IF _ARBFMT_12 IN ('5' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ) THEN DO;
175697    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
175698    +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
175699    +          P_Attrition_Flag0  =     0.01492537313432;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.01492537313432;
175700    +          P_Attrition_Flag1  =     0.98507462686567;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.98507462686567;
175701    +          Q_Attrition_Flag0  =     0.01492537313432;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.01492537313432;
175702    +          Q_Attrition_Flag1  =     0.98507462686567;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.98507462686567;
175703    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
175704    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
175705    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175706    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175707    +          END;
MPRINT(EM_DIAGRAM):   END;
175708    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175709    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
175710    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
175711    +          P_Attrition_Flag0  =     0.75776397515527;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75776397515527;
175712    +          P_Attrition_Flag1  =     0.24223602484472;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.24223602484472;
175713    +          Q_Attrition_Flag0  =     0.75776397515527;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75776397515527;
175714    +          Q_Attrition_Flag1  =     0.24223602484472;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.24223602484472;
175715    +          V_Attrition_Flag0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.65853658536585;
175716    +          V_Attrition_Flag1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.34146341463414;
175717    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175718    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175719    +          END;
MPRINT(EM_DIAGRAM):   END;
175720    +        END;
MPRINT(EM_DIAGRAM):   END;
175721    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175722    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
175723    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175724    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
175725    +          IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
175726    +            RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.39278572866989 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.39278572866989 THEN DO;
175727    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
175728    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
175729    +            P_Attrition_Flag0  =     0.27450980392156;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.27450980392156;
175730    +            P_Attrition_Flag1  =     0.72549019607843;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.72549019607843;
175731    +            Q_Attrition_Flag0  =     0.27450980392156;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.27450980392156;
175732    +            Q_Attrition_Flag1  =     0.72549019607843;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.72549019607843;
175733    +            V_Attrition_Flag0  =     0.36842105263157;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.36842105263157;
175734    +            V_Attrition_Flag1  =     0.63157894736842;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.63157894736842;
175735    +            I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175736    +            U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175737    +            END;
MPRINT(EM_DIAGRAM):   END;
175738    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175739    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
175740    +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
175741    +            P_Attrition_Flag0  =     0.73972602739726;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.73972602739726;
175742    +            P_Attrition_Flag1  =     0.26027397260273;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.26027397260273;
175743    +            Q_Attrition_Flag0  =     0.73972602739726;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.73972602739726;
175744    +            Q_Attrition_Flag1  =     0.26027397260273;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.26027397260273;
175745    +            V_Attrition_Flag0  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.73529411764705;
175746    +            V_Attrition_Flag1  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.26470588235294;
175747    +            I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175748    +            U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175749    +            END;
MPRINT(EM_DIAGRAM):   END;
175750    +          END;
MPRINT(EM_DIAGRAM):   END;
175751    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175752    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
175753    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
175754    +          P_Attrition_Flag0  =     0.98959687906371;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98959687906371;
175755    +          P_Attrition_Flag1  =     0.01040312093628;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01040312093628;
175756    +          Q_Attrition_Flag0  =     0.98959687906371;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98959687906371;
175757    +          Q_Attrition_Flag1  =     0.01040312093628;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01040312093628;
175758    +          V_Attrition_Flag0  =     0.97630331753554;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97630331753554;
175759    +          V_Attrition_Flag1  =     0.02369668246445;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02369668246445;
175760    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175761    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175762    +          END;
MPRINT(EM_DIAGRAM):   END;
175763    +        END;
MPRINT(EM_DIAGRAM):   END;
175764    +      END;
MPRINT(EM_DIAGRAM):   END;
175765    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175766    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
175767    +        RANGE_LOG_Total_Trans_Amt  <     0.03340216054825 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03340216054825 THEN DO;
175768    +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
175769    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
175770    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
175771    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
175772    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
175773    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
175774    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
175775    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
175776    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175777    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175778    +        END;
MPRINT(EM_DIAGRAM):   END;
175779    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175780    +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
175781    +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
175782    +        P_Attrition_Flag0  =     0.97381546134663;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97381546134663;
175783    +        P_Attrition_Flag1  =     0.02618453865336;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.02618453865336;
175784    +        Q_Attrition_Flag0  =     0.97381546134663;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97381546134663;
175785    +        Q_Attrition_Flag1  =     0.02618453865336;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.02618453865336;
175786    +        V_Attrition_Flag0  =     0.97646033129904;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97646033129904;
175787    +        V_Attrition_Flag1  =     0.02353966870095;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02353966870095;
175788    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175789    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175790    +        END;
MPRINT(EM_DIAGRAM):   END;
175791    +      END;
MPRINT(EM_DIAGRAM):   END;
175792    +    END;
MPRINT(EM_DIAGRAM):   END;
175793    +  END;
MPRINT(EM_DIAGRAM):   END;
175794    +
175795    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
175796    +IF  F_Attrition_Flag  NE '0'
175797    +AND F_Attrition_Flag  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Attrition_Flag NE '0' AND F_Attrition_Flag NE '1' THEN DO;
175798    +        R_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = .;
175799    +        R_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = .;
175800    + END;
MPRINT(EM_DIAGRAM):   END;
175801    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175802    +       R_Attrition_Flag0  =  -P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = -P_Attrition_Flag0 ;
175803    +       R_Attrition_Flag1  =  -P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = -P_Attrition_Flag1 ;
175804    +       SELECT( F_Attrition_Flag  );
MPRINT(EM_DIAGRAM):   SELECT( F_Attrition_Flag );
175805    +          WHEN( '0'  ) R_Attrition_Flag0  = R_Attrition_Flag0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_Attrition_Flag0 = R_Attrition_Flag0 +1;
175806    +          WHEN( '1'  ) R_Attrition_Flag1  = R_Attrition_Flag1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_Attrition_Flag1 = R_Attrition_Flag1 +1;
175807    +       END;
MPRINT(EM_DIAGRAM):   END;
175808    + END;
MPRINT(EM_DIAGRAM):   END;
175809    +
175810    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
175811    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
175812    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
175813    +
175814    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
175815     run;

NOTE: DATA STEP view saved on file EMWS1.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
175816     quit;
175817     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
175818     filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175819     *------------------------------------------------------------*;
175820     * Tree: Scoring VALIDATE data;
175821     *------------------------------------------------------------*;
175822     data EMWS1.Tree_VALIDATE
175823     / view=EMWS1.Tree_VALIDATE
175824     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_VALIDATE / view=EMWS1.Tree_VALIDATE ;
175825     set EMWS1.Part2_VALIDATE
175826     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_VALIDATE ;
175827     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
175828    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
175829    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
175830    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
175831    +
175832    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
175833    +LENGTH F_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH F_Attrition_Flag $ 17;
175834    +LENGTH I_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH I_Attrition_Flag $ 17;
175835    +LENGTH U_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH U_Attrition_Flag $ 17;
175836    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
175837    +
175838    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
175839    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
175840    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
175841    +label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
175842    +label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
175843    +label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
175844    +label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
175845    +label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
175846    +label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
175847    +label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
175848    +label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
175849    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
175850    +label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
175851    +label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
175852    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
175853    +
175854    +
175855    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
175856    +LENGTH _ARBFMT_17 $     17; DROP _ARBFMT_17;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_17 $ 17;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_17;
175857    +_ARBFMT_17 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = ' ';
175858    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
175859    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
175860    +
175861    +
175862    +_ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
175863    + %DMNORMCP( _ARBFMT_17, F_Attrition_Flag );
MPRINT(DMNORMCP):   F_Attrition_Flag=dmnorm(_ARBFMT_17,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
175864    +
175865    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
175866    +_ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
175867    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175868    +IF _ARBFMT_12 IN ('1' ,'3' ,'4' ,'2' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'3' ,'4' ,'2' ,'0' ) THEN DO;
175869    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
175870    +    RANGE_Total_Revolving_Bal  <     0.24215335717123 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.24215335717123 THEN DO;
175871    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
175872    +          0.45221286754555 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.45221286754555 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
175873    +      _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
175874    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175875    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
175876    +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
175877    +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
175878    +        P_Attrition_Flag0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05555555555555;
175879    +        P_Attrition_Flag1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94444444444444;
175880    +        Q_Attrition_Flag0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05555555555555;
175881    +        Q_Attrition_Flag1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94444444444444;
175882    +        V_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.11111111111111;
175883    +        V_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.88888888888888;
175884    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175885    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175886    +        END;
MPRINT(EM_DIAGRAM):   END;
175887    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175888    +        IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
175889    +          RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.43199033198472 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.43199033198472 THEN DO;
175890    +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
175891    +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
175892    +          P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
175893    +          P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
175894    +          Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
175895    +          Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
175896    +          V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
175897    +          V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
175898    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175899    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175900    +          END;
MPRINT(EM_DIAGRAM):   END;
175901    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175902    +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
175903    +          _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
175904    +          P_Attrition_Flag0  =               0.8125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8125;
175905    +          P_Attrition_Flag1  =               0.1875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1875;
175906    +          Q_Attrition_Flag0  =               0.8125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8125;
175907    +          Q_Attrition_Flag1  =               0.1875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.1875;
175908    +          V_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8;
175909    +          V_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.2;
175910    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175911    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175912    +          END;
MPRINT(EM_DIAGRAM):   END;
175913    +        END;
MPRINT(EM_DIAGRAM):   END;
175914    +      END;
MPRINT(EM_DIAGRAM):   END;
175915    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175916    +      _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
175917    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175918    +      IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ) THEN DO;
175919    +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
175920    +        _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
175921    +        P_Attrition_Flag0  =                 0.54;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.54;
175922    +        P_Attrition_Flag1  =                 0.46;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.46;
175923    +        Q_Attrition_Flag0  =                 0.54;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.54;
175924    +        Q_Attrition_Flag1  =                 0.46;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.46;
175925    +        V_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.83333333333333;
175926    +        V_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.16666666666666;
175927    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175928    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175929    +        END;
MPRINT(EM_DIAGRAM):   END;
175930    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175931    +        _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
175932    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175933    +        IF _ARBFMT_12 IN ('9' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ) THEN DO;
175934    +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
175935    +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
175936    +          P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
175937    +          P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
175938    +          Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
175939    +          Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
175940    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
175941    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
175942    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175943    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175944    +          END;
MPRINT(EM_DIAGRAM):   END;
175945    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175946    +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
175947    +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
175948    +          P_Attrition_Flag0  =     0.08902691511387;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.08902691511387;
175949    +          P_Attrition_Flag1  =     0.91097308488612;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.91097308488612;
175950    +          Q_Attrition_Flag0  =     0.08902691511387;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.08902691511387;
175951    +          Q_Attrition_Flag1  =     0.91097308488612;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.91097308488612;
175952    +          V_Attrition_Flag0  =      0.1418439716312;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.1418439716312;
175953    +          V_Attrition_Flag1  =     0.85815602836879;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85815602836879;
175954    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175955    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175956    +          END;
MPRINT(EM_DIAGRAM):   END;
175957    +        END;
MPRINT(EM_DIAGRAM):   END;
175958    +      END;
MPRINT(EM_DIAGRAM):   END;
175959    +    END;
MPRINT(EM_DIAGRAM):   END;
175960    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175961    +    _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
175962    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175963    +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
175964    +      _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
175965    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175966    +      IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ) THEN DO;
175967    +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
175968    +        _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
175969    +        P_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.66666666666666;
175970    +        P_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.33333333333333;
175971    +        Q_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.66666666666666;
175972    +        Q_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.33333333333333;
175973    +        V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
175974    +        V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
175975    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
175976    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
175977    +        END;
MPRINT(EM_DIAGRAM):   END;
175978    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175979    +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
175980    +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
175981    +        P_Attrition_Flag0  =     0.12222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.12222222222222;
175982    +        P_Attrition_Flag1  =     0.87777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.87777777777777;
175983    +        Q_Attrition_Flag0  =     0.12222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.12222222222222;
175984    +        Q_Attrition_Flag1  =     0.87777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.87777777777777;
175985    +        V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
175986    +        V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
175987    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
175988    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
175989    +        END;
MPRINT(EM_DIAGRAM):   END;
175990    +      END;
MPRINT(EM_DIAGRAM):   END;
175991    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175992    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
175993    +            0.11922630474959 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.11922630474959 <= RANGE_LOG_Total_Trans_Amt THEN DO;
175994    +        IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
175995    +          RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.41234945173394 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.41234945173394 THEN DO;
175996    +          _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
175997    +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
175998    +          IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
175999    +            _NODE_  =                   72;
MPRINT(EM_DIAGRAM):   _NODE_ = 72;
176000    +            _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
176001    +            P_Attrition_Flag0  =                 0.85;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85;
176002    +            P_Attrition_Flag1  =                 0.15;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.15;
176003    +            Q_Attrition_Flag0  =                 0.85;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85;
176004    +            Q_Attrition_Flag1  =                 0.15;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.15;
176005    +            V_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.75;
176006    +            V_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.25;
176007    +            I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176008    +            U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176009    +            END;
MPRINT(EM_DIAGRAM):   END;
176010    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176011    +            _NODE_  =                   73;
MPRINT(EM_DIAGRAM):   _NODE_ = 73;
176012    +            _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
176013    +            P_Attrition_Flag0  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2265625;
176014    +            P_Attrition_Flag1  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7734375;
176015    +            Q_Attrition_Flag0  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2265625;
176016    +            Q_Attrition_Flag1  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7734375;
176017    +            V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
176018    +            V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
176019    +            I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176020    +            U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176021    +            END;
MPRINT(EM_DIAGRAM):   END;
176022    +          END;
MPRINT(EM_DIAGRAM):   END;
176023    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176024    +          _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
176025    +          _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
176026    +          P_Attrition_Flag0  =     0.83957219251336;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83957219251336;
176027    +          P_Attrition_Flag1  =     0.16042780748663;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16042780748663;
176028    +          Q_Attrition_Flag0  =     0.83957219251336;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83957219251336;
176029    +          Q_Attrition_Flag1  =     0.16042780748663;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16042780748663;
176030    +          V_Attrition_Flag0  =     0.84482758620689;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.84482758620689;
176031    +          V_Attrition_Flag1  =      0.1551724137931;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.1551724137931;
176032    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176033    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176034    +          END;
MPRINT(EM_DIAGRAM):   END;
176035    +        END;
MPRINT(EM_DIAGRAM):   END;
176036    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176037    +        IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176038    +          RANGE_LOG_Total_Trans_Amt  <     0.03539998717758 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03539998717758 THEN DO;
176039    +          _NODE_  =                   48;
MPRINT(EM_DIAGRAM):   _NODE_ = 48;
176040    +          _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
176041    +          P_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09090909090909;
176042    +          P_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9090909090909;
176043    +          Q_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09090909090909;
176044    +          Q_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9090909090909;
176045    +          V_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.2;
176046    +          V_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8;
176047    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176048    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176049    +          END;
MPRINT(EM_DIAGRAM):   END;
176050    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176051    +          _NODE_  =                   49;
MPRINT(EM_DIAGRAM):   _NODE_ = 49;
176052    +          _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
176053    +          P_Attrition_Flag0  =     0.93779160186625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93779160186625;
176054    +          P_Attrition_Flag1  =     0.06220839813374;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06220839813374;
176055    +          Q_Attrition_Flag0  =     0.93779160186625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93779160186625;
176056    +          Q_Attrition_Flag1  =     0.06220839813374;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06220839813374;
176057    +          V_Attrition_Flag0  =     0.95555555555555;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.95555555555555;
176058    +          V_Attrition_Flag1  =     0.04444444444444;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.04444444444444;
176059    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176060    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176061    +          END;
MPRINT(EM_DIAGRAM):   END;
176062    +        END;
MPRINT(EM_DIAGRAM):   END;
176063    +      END;
MPRINT(EM_DIAGRAM):   END;
176064    +    END;
MPRINT(EM_DIAGRAM):   END;
176065    +  END;
MPRINT(EM_DIAGRAM):   END;
176066    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176067    +  IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
176068    +    RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <      0.3183909236815 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.3183909236815 THEN DO;
176069    +    _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
176070    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176071    +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
176072    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
176073    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
176074    +      P_Attrition_Flag0  =                 0.04;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.04;
176075    +      P_Attrition_Flag1  =                 0.96;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.96;
176076    +      Q_Attrition_Flag0  =                 0.04;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.04;
176077    +      Q_Attrition_Flag1  =                 0.96;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.96;
176078    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
176079    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
176080    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176081    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176082    +      END;
MPRINT(EM_DIAGRAM):   END;
176083    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176084    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176085    +            0.08300830873515 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08300830873515 <= RANGE_LOG_Total_Trans_Amt THEN DO;
176086    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176087    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176088    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
176089    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
176090    +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
176091    +          P_Attrition_Flag0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.22857142857142;
176092    +          P_Attrition_Flag1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.77142857142857;
176093    +          Q_Attrition_Flag0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.22857142857142;
176094    +          Q_Attrition_Flag1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.77142857142857;
176095    +          V_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.22222222222222;
176096    +          V_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.77777777777777;
176097    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176098    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176099    +          END;
MPRINT(EM_DIAGRAM):   END;
176100    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176101    +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
176102    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
176103    +          P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
176104    +          P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
176105    +          Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
176106    +          Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
176107    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
176108    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
176109    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176110    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176111    +          END;
MPRINT(EM_DIAGRAM):   END;
176112    +        END;
MPRINT(EM_DIAGRAM):   END;
176113    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176114    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
176115    +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
176116    +        P_Attrition_Flag0  =     0.76388888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.76388888888888;
176117    +        P_Attrition_Flag1  =     0.23611111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.23611111111111;
176118    +        Q_Attrition_Flag0  =     0.76388888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.76388888888888;
176119    +        Q_Attrition_Flag1  =     0.23611111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.23611111111111;
176120    +        V_Attrition_Flag0  =     0.73333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.73333333333333;
176121    +        V_Attrition_Flag1  =     0.26666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.26666666666666;
176122    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176123    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176124    +        END;
MPRINT(EM_DIAGRAM):   END;
176125    +      END;
MPRINT(EM_DIAGRAM):   END;
176126    +    END;
MPRINT(EM_DIAGRAM):   END;
176127    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176128    +    IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
176129    +      RANGE_Total_Revolving_Bal  <     0.22804926499801 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.22804926499801 THEN DO;
176130    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176131    +            0.34801787120737 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.34801787120737 <= RANGE_LOG_Total_Trans_Amt THEN DO;
176132    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176133    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176134    +        IF _ARBFMT_12 IN ('5' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ) THEN DO;
176135    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
176136    +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
176137    +          P_Attrition_Flag0  =     0.01492537313432;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.01492537313432;
176138    +          P_Attrition_Flag1  =     0.98507462686567;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.98507462686567;
176139    +          Q_Attrition_Flag0  =     0.01492537313432;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.01492537313432;
176140    +          Q_Attrition_Flag1  =     0.98507462686567;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.98507462686567;
176141    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
176142    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
176143    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176144    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176145    +          END;
MPRINT(EM_DIAGRAM):   END;
176146    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176147    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
176148    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
176149    +          P_Attrition_Flag0  =     0.75776397515527;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75776397515527;
176150    +          P_Attrition_Flag1  =     0.24223602484472;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.24223602484472;
176151    +          Q_Attrition_Flag0  =     0.75776397515527;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75776397515527;
176152    +          Q_Attrition_Flag1  =     0.24223602484472;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.24223602484472;
176153    +          V_Attrition_Flag0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.65853658536585;
176154    +          V_Attrition_Flag1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.34146341463414;
176155    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176156    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176157    +          END;
MPRINT(EM_DIAGRAM):   END;
176158    +        END;
MPRINT(EM_DIAGRAM):   END;
176159    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176160    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176161    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176162    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
176163    +          IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
176164    +            RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.39278572866989 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.39278572866989 THEN DO;
176165    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
176166    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
176167    +            P_Attrition_Flag0  =     0.27450980392156;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.27450980392156;
176168    +            P_Attrition_Flag1  =     0.72549019607843;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.72549019607843;
176169    +            Q_Attrition_Flag0  =     0.27450980392156;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.27450980392156;
176170    +            Q_Attrition_Flag1  =     0.72549019607843;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.72549019607843;
176171    +            V_Attrition_Flag0  =     0.36842105263157;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.36842105263157;
176172    +            V_Attrition_Flag1  =     0.63157894736842;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.63157894736842;
176173    +            I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176174    +            U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176175    +            END;
MPRINT(EM_DIAGRAM):   END;
176176    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176177    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
176178    +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
176179    +            P_Attrition_Flag0  =     0.73972602739726;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.73972602739726;
176180    +            P_Attrition_Flag1  =     0.26027397260273;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.26027397260273;
176181    +            Q_Attrition_Flag0  =     0.73972602739726;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.73972602739726;
176182    +            Q_Attrition_Flag1  =     0.26027397260273;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.26027397260273;
176183    +            V_Attrition_Flag0  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.73529411764705;
176184    +            V_Attrition_Flag1  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.26470588235294;
176185    +            I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176186    +            U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176187    +            END;
MPRINT(EM_DIAGRAM):   END;
176188    +          END;
MPRINT(EM_DIAGRAM):   END;
176189    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176190    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
176191    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
176192    +          P_Attrition_Flag0  =     0.98959687906371;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98959687906371;
176193    +          P_Attrition_Flag1  =     0.01040312093628;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01040312093628;
176194    +          Q_Attrition_Flag0  =     0.98959687906371;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98959687906371;
176195    +          Q_Attrition_Flag1  =     0.01040312093628;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01040312093628;
176196    +          V_Attrition_Flag0  =     0.97630331753554;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97630331753554;
176197    +          V_Attrition_Flag1  =     0.02369668246445;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02369668246445;
176198    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176199    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176200    +          END;
MPRINT(EM_DIAGRAM):   END;
176201    +        END;
MPRINT(EM_DIAGRAM):   END;
176202    +      END;
MPRINT(EM_DIAGRAM):   END;
176203    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176204    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176205    +        RANGE_LOG_Total_Trans_Amt  <     0.03340216054825 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03340216054825 THEN DO;
176206    +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
176207    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
176208    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
176209    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
176210    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
176211    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
176212    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
176213    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
176214    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176215    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176216    +        END;
MPRINT(EM_DIAGRAM):   END;
176217    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176218    +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
176219    +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
176220    +        P_Attrition_Flag0  =     0.97381546134663;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97381546134663;
176221    +        P_Attrition_Flag1  =     0.02618453865336;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.02618453865336;
176222    +        Q_Attrition_Flag0  =     0.97381546134663;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97381546134663;
176223    +        Q_Attrition_Flag1  =     0.02618453865336;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.02618453865336;
176224    +        V_Attrition_Flag0  =     0.97646033129904;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97646033129904;
176225    +        V_Attrition_Flag1  =     0.02353966870095;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02353966870095;
176226    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176227    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176228    +        END;
MPRINT(EM_DIAGRAM):   END;
176229    +      END;
MPRINT(EM_DIAGRAM):   END;
176230    +    END;
MPRINT(EM_DIAGRAM):   END;
176231    +  END;
MPRINT(EM_DIAGRAM):   END;
176232    +
176233    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
176234    +IF  F_Attrition_Flag  NE '0'
176235    +AND F_Attrition_Flag  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Attrition_Flag NE '0' AND F_Attrition_Flag NE '1' THEN DO;
176236    +        R_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = .;
176237    +        R_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = .;
176238    + END;
MPRINT(EM_DIAGRAM):   END;
176239    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176240    +       R_Attrition_Flag0  =  -P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = -P_Attrition_Flag0 ;
176241    +       R_Attrition_Flag1  =  -P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = -P_Attrition_Flag1 ;
176242    +       SELECT( F_Attrition_Flag  );
MPRINT(EM_DIAGRAM):   SELECT( F_Attrition_Flag );
176243    +          WHEN( '0'  ) R_Attrition_Flag0  = R_Attrition_Flag0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_Attrition_Flag0 = R_Attrition_Flag0 +1;
176244    +          WHEN( '1'  ) R_Attrition_Flag1  = R_Attrition_Flag1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_Attrition_Flag1 = R_Attrition_Flag1 +1;
176245    +       END;
MPRINT(EM_DIAGRAM):   END;
176246    + END;
MPRINT(EM_DIAGRAM):   END;
176247    +
176248    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
176249    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
176250    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
176251    +
176252    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
176253     run;

NOTE: DATA STEP view saved on file EMWS1.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
176254     quit;
176255     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
176256     filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176257     *------------------------------------------------------------*;
176258     * Tree: Scoring TEST data;
176259     *------------------------------------------------------------*;
176260     data EMWS1.Tree_TEST
176261     / view=EMWS1.Tree_TEST
176262     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_TEST / view=EMWS1.Tree_TEST ;
176263     set EMWS1.Part2_TEST
176264     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TEST ;
176265     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
176266    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
176267    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
176268    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
176269    +
176270    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
176271    +LENGTH F_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH F_Attrition_Flag $ 17;
176272    +LENGTH I_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH I_Attrition_Flag $ 17;
176273    +LENGTH U_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH U_Attrition_Flag $ 17;
176274    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
176275    +
176276    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
176277    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
176278    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
176279    +label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
176280    +label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
176281    +label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
176282    +label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
176283    +label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
176284    +label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
176285    +label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
176286    +label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
176287    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
176288    +label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
176289    +label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
176290    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
176291    +
176292    +
176293    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
176294    +LENGTH _ARBFMT_17 $     17; DROP _ARBFMT_17;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_17 $ 17;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_17;
176295    +_ARBFMT_17 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = ' ';
176296    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
176297    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
176298    +
176299    +
176300    +_ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
176301    + %DMNORMCP( _ARBFMT_17, F_Attrition_Flag );
MPRINT(DMNORMCP):   F_Attrition_Flag=dmnorm(_ARBFMT_17,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
176302    +
176303    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
176304    +_ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176305    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176306    +IF _ARBFMT_12 IN ('1' ,'3' ,'4' ,'2' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ,'3' ,'4' ,'2' ,'0' ) THEN DO;
176307    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
176308    +    RANGE_Total_Revolving_Bal  <     0.24215335717123 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.24215335717123 THEN DO;
176309    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
176310    +          0.45221286754555 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.45221286754555 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
176311    +      _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
176312    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176313    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
176314    +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
176315    +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
176316    +        P_Attrition_Flag0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05555555555555;
176317    +        P_Attrition_Flag1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94444444444444;
176318    +        Q_Attrition_Flag0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05555555555555;
176319    +        Q_Attrition_Flag1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94444444444444;
176320    +        V_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.11111111111111;
176321    +        V_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.88888888888888;
176322    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176323    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176324    +        END;
MPRINT(EM_DIAGRAM):   END;
176325    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176326    +        IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
176327    +          RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.43199033198472 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.43199033198472 THEN DO;
176328    +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
176329    +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
176330    +          P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
176331    +          P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
176332    +          Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
176333    +          Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
176334    +          V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
176335    +          V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
176336    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176337    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176338    +          END;
MPRINT(EM_DIAGRAM):   END;
176339    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176340    +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
176341    +          _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
176342    +          P_Attrition_Flag0  =               0.8125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8125;
176343    +          P_Attrition_Flag1  =               0.1875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1875;
176344    +          Q_Attrition_Flag0  =               0.8125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8125;
176345    +          Q_Attrition_Flag1  =               0.1875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.1875;
176346    +          V_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8;
176347    +          V_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.2;
176348    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176349    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176350    +          END;
MPRINT(EM_DIAGRAM):   END;
176351    +        END;
MPRINT(EM_DIAGRAM):   END;
176352    +      END;
MPRINT(EM_DIAGRAM):   END;
176353    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176354    +      _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
176355    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176356    +      IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ) THEN DO;
176357    +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
176358    +        _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
176359    +        P_Attrition_Flag0  =                 0.54;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.54;
176360    +        P_Attrition_Flag1  =                 0.46;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.46;
176361    +        Q_Attrition_Flag0  =                 0.54;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.54;
176362    +        Q_Attrition_Flag1  =                 0.46;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.46;
176363    +        V_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.83333333333333;
176364    +        V_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.16666666666666;
176365    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176366    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176367    +        END;
MPRINT(EM_DIAGRAM):   END;
176368    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176369    +        _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
176370    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176371    +        IF _ARBFMT_12 IN ('9' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ) THEN DO;
176372    +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
176373    +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
176374    +          P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
176375    +          P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
176376    +          Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
176377    +          Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
176378    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
176379    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
176380    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176381    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176382    +          END;
MPRINT(EM_DIAGRAM):   END;
176383    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176384    +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
176385    +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
176386    +          P_Attrition_Flag0  =     0.08902691511387;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.08902691511387;
176387    +          P_Attrition_Flag1  =     0.91097308488612;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.91097308488612;
176388    +          Q_Attrition_Flag0  =     0.08902691511387;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.08902691511387;
176389    +          Q_Attrition_Flag1  =     0.91097308488612;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.91097308488612;
176390    +          V_Attrition_Flag0  =      0.1418439716312;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.1418439716312;
176391    +          V_Attrition_Flag1  =     0.85815602836879;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85815602836879;
176392    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176393    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176394    +          END;
MPRINT(EM_DIAGRAM):   END;
176395    +        END;
MPRINT(EM_DIAGRAM):   END;
176396    +      END;
MPRINT(EM_DIAGRAM):   END;
176397    +    END;
MPRINT(EM_DIAGRAM):   END;
176398    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176399    +    _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
176400    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176401    +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
176402    +      _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_Inactive_12_mon , BEST12.);
176403    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176404    +      IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ) THEN DO;
176405    +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
176406    +        _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
176407    +        P_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.66666666666666;
176408    +        P_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.33333333333333;
176409    +        Q_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.66666666666666;
176410    +        Q_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.33333333333333;
176411    +        V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
176412    +        V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
176413    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176414    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176415    +        END;
MPRINT(EM_DIAGRAM):   END;
176416    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176417    +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
176418    +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
176419    +        P_Attrition_Flag0  =     0.12222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.12222222222222;
176420    +        P_Attrition_Flag1  =     0.87777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.87777777777777;
176421    +        Q_Attrition_Flag0  =     0.12222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.12222222222222;
176422    +        Q_Attrition_Flag1  =     0.87777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.87777777777777;
176423    +        V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
176424    +        V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
176425    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176426    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176427    +        END;
MPRINT(EM_DIAGRAM):   END;
176428    +      END;
MPRINT(EM_DIAGRAM):   END;
176429    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176430    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176431    +            0.11922630474959 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.11922630474959 <= RANGE_LOG_Total_Trans_Amt THEN DO;
176432    +        IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
176433    +          RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.41234945173394 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.41234945173394 THEN DO;
176434    +          _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
176435    +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176436    +          IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
176437    +            _NODE_  =                   72;
MPRINT(EM_DIAGRAM):   _NODE_ = 72;
176438    +            _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
176439    +            P_Attrition_Flag0  =                 0.85;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85;
176440    +            P_Attrition_Flag1  =                 0.15;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.15;
176441    +            Q_Attrition_Flag0  =                 0.85;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85;
176442    +            Q_Attrition_Flag1  =                 0.15;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.15;
176443    +            V_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.75;
176444    +            V_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.25;
176445    +            I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176446    +            U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176447    +            END;
MPRINT(EM_DIAGRAM):   END;
176448    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176449    +            _NODE_  =                   73;
MPRINT(EM_DIAGRAM):   _NODE_ = 73;
176450    +            _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
176451    +            P_Attrition_Flag0  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2265625;
176452    +            P_Attrition_Flag1  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7734375;
176453    +            Q_Attrition_Flag0  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2265625;
176454    +            Q_Attrition_Flag1  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7734375;
176455    +            V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
176456    +            V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
176457    +            I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176458    +            U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176459    +            END;
MPRINT(EM_DIAGRAM):   END;
176460    +          END;
MPRINT(EM_DIAGRAM):   END;
176461    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176462    +          _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
176463    +          _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
176464    +          P_Attrition_Flag0  =     0.83957219251336;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83957219251336;
176465    +          P_Attrition_Flag1  =     0.16042780748663;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16042780748663;
176466    +          Q_Attrition_Flag0  =     0.83957219251336;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83957219251336;
176467    +          Q_Attrition_Flag1  =     0.16042780748663;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16042780748663;
176468    +          V_Attrition_Flag0  =     0.84482758620689;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.84482758620689;
176469    +          V_Attrition_Flag1  =      0.1551724137931;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.1551724137931;
176470    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176471    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176472    +          END;
MPRINT(EM_DIAGRAM):   END;
176473    +        END;
MPRINT(EM_DIAGRAM):   END;
176474    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176475    +        IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176476    +          RANGE_LOG_Total_Trans_Amt  <     0.03539998717758 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03539998717758 THEN DO;
176477    +          _NODE_  =                   48;
MPRINT(EM_DIAGRAM):   _NODE_ = 48;
176478    +          _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
176479    +          P_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09090909090909;
176480    +          P_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9090909090909;
176481    +          Q_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09090909090909;
176482    +          Q_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9090909090909;
176483    +          V_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.2;
176484    +          V_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8;
176485    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176486    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176487    +          END;
MPRINT(EM_DIAGRAM):   END;
176488    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176489    +          _NODE_  =                   49;
MPRINT(EM_DIAGRAM):   _NODE_ = 49;
176490    +          _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
176491    +          P_Attrition_Flag0  =     0.93779160186625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93779160186625;
176492    +          P_Attrition_Flag1  =     0.06220839813374;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06220839813374;
176493    +          Q_Attrition_Flag0  =     0.93779160186625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93779160186625;
176494    +          Q_Attrition_Flag1  =     0.06220839813374;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06220839813374;
176495    +          V_Attrition_Flag0  =     0.95555555555555;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.95555555555555;
176496    +          V_Attrition_Flag1  =     0.04444444444444;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.04444444444444;
176497    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176498    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176499    +          END;
MPRINT(EM_DIAGRAM):   END;
176500    +        END;
MPRINT(EM_DIAGRAM):   END;
176501    +      END;
MPRINT(EM_DIAGRAM):   END;
176502    +    END;
MPRINT(EM_DIAGRAM):   END;
176503    +  END;
MPRINT(EM_DIAGRAM):   END;
176504    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176505    +  IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
176506    +    RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <      0.3183909236815 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.3183909236815 THEN DO;
176507    +    _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
176508    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176509    +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
176510    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
176511    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
176512    +      P_Attrition_Flag0  =                 0.04;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.04;
176513    +      P_Attrition_Flag1  =                 0.96;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.96;
176514    +      Q_Attrition_Flag0  =                 0.04;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.04;
176515    +      Q_Attrition_Flag1  =                 0.96;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.96;
176516    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
176517    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
176518    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176519    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176520    +      END;
MPRINT(EM_DIAGRAM):   END;
176521    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176522    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176523    +            0.08300830873515 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08300830873515 <= RANGE_LOG_Total_Trans_Amt THEN DO;
176524    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176525    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176526    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
176527    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
176528    +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
176529    +          P_Attrition_Flag0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.22857142857142;
176530    +          P_Attrition_Flag1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.77142857142857;
176531    +          Q_Attrition_Flag0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.22857142857142;
176532    +          Q_Attrition_Flag1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.77142857142857;
176533    +          V_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.22222222222222;
176534    +          V_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.77777777777777;
176535    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176536    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176537    +          END;
MPRINT(EM_DIAGRAM):   END;
176538    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176539    +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
176540    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
176541    +          P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
176542    +          P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
176543    +          Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
176544    +          Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
176545    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
176546    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
176547    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176548    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176549    +          END;
MPRINT(EM_DIAGRAM):   END;
176550    +        END;
MPRINT(EM_DIAGRAM):   END;
176551    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176552    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
176553    +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
176554    +        P_Attrition_Flag0  =     0.76388888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.76388888888888;
176555    +        P_Attrition_Flag1  =     0.23611111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.23611111111111;
176556    +        Q_Attrition_Flag0  =     0.76388888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.76388888888888;
176557    +        Q_Attrition_Flag1  =     0.23611111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.23611111111111;
176558    +        V_Attrition_Flag0  =     0.73333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.73333333333333;
176559    +        V_Attrition_Flag1  =     0.26666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.26666666666666;
176560    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176561    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176562    +        END;
MPRINT(EM_DIAGRAM):   END;
176563    +      END;
MPRINT(EM_DIAGRAM):   END;
176564    +    END;
MPRINT(EM_DIAGRAM):   END;
176565    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176566    +    IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
176567    +      RANGE_Total_Revolving_Bal  <     0.22804926499801 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.22804926499801 THEN DO;
176568    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176569    +            0.34801787120737 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.34801787120737 <= RANGE_LOG_Total_Trans_Amt THEN DO;
176570    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176571    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176572    +        IF _ARBFMT_12 IN ('5' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ) THEN DO;
176573    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
176574    +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
176575    +          P_Attrition_Flag0  =     0.01492537313432;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.01492537313432;
176576    +          P_Attrition_Flag1  =     0.98507462686567;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.98507462686567;
176577    +          Q_Attrition_Flag0  =     0.01492537313432;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.01492537313432;
176578    +          Q_Attrition_Flag1  =     0.98507462686567;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.98507462686567;
176579    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
176580    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
176581    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176582    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176583    +          END;
MPRINT(EM_DIAGRAM):   END;
176584    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176585    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
176586    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
176587    +          P_Attrition_Flag0  =     0.75776397515527;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75776397515527;
176588    +          P_Attrition_Flag1  =     0.24223602484472;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.24223602484472;
176589    +          Q_Attrition_Flag0  =     0.75776397515527;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75776397515527;
176590    +          Q_Attrition_Flag1  =     0.24223602484472;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.24223602484472;
176591    +          V_Attrition_Flag0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.65853658536585;
176592    +          V_Attrition_Flag1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.34146341463414;
176593    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176594    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176595    +          END;
MPRINT(EM_DIAGRAM):   END;
176596    +        END;
MPRINT(EM_DIAGRAM):   END;
176597    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176598    +        _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
176599    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
176600    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
176601    +          IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
176602    +            RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.39278572866989 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.39278572866989 THEN DO;
176603    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
176604    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
176605    +            P_Attrition_Flag0  =     0.27450980392156;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.27450980392156;
176606    +            P_Attrition_Flag1  =     0.72549019607843;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.72549019607843;
176607    +            Q_Attrition_Flag0  =     0.27450980392156;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.27450980392156;
176608    +            Q_Attrition_Flag1  =     0.72549019607843;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.72549019607843;
176609    +            V_Attrition_Flag0  =     0.36842105263157;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.36842105263157;
176610    +            V_Attrition_Flag1  =     0.63157894736842;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.63157894736842;
176611    +            I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176612    +            U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176613    +            END;
MPRINT(EM_DIAGRAM):   END;
176614    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176615    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
176616    +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
176617    +            P_Attrition_Flag0  =     0.73972602739726;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.73972602739726;
176618    +            P_Attrition_Flag1  =     0.26027397260273;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.26027397260273;
176619    +            Q_Attrition_Flag0  =     0.73972602739726;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.73972602739726;
176620    +            Q_Attrition_Flag1  =     0.26027397260273;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.26027397260273;
176621    +            V_Attrition_Flag0  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.73529411764705;
176622    +            V_Attrition_Flag1  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.26470588235294;
176623    +            I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176624    +            U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176625    +            END;
MPRINT(EM_DIAGRAM):   END;
176626    +          END;
MPRINT(EM_DIAGRAM):   END;
176627    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176628    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
176629    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
176630    +          P_Attrition_Flag0  =     0.98959687906371;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98959687906371;
176631    +          P_Attrition_Flag1  =     0.01040312093628;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01040312093628;
176632    +          Q_Attrition_Flag0  =     0.98959687906371;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98959687906371;
176633    +          Q_Attrition_Flag1  =     0.01040312093628;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01040312093628;
176634    +          V_Attrition_Flag0  =     0.97630331753554;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97630331753554;
176635    +          V_Attrition_Flag1  =     0.02369668246445;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02369668246445;
176636    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176637    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176638    +          END;
MPRINT(EM_DIAGRAM):   END;
176639    +        END;
MPRINT(EM_DIAGRAM):   END;
176640    +      END;
MPRINT(EM_DIAGRAM):   END;
176641    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176642    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
176643    +        RANGE_LOG_Total_Trans_Amt  <     0.03340216054825 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03340216054825 THEN DO;
176644    +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
176645    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
176646    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
176647    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
176648    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
176649    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
176650    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
176651    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
176652    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
176653    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
176654    +        END;
MPRINT(EM_DIAGRAM):   END;
176655    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176656    +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
176657    +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
176658    +        P_Attrition_Flag0  =     0.97381546134663;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97381546134663;
176659    +        P_Attrition_Flag1  =     0.02618453865336;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.02618453865336;
176660    +        Q_Attrition_Flag0  =     0.97381546134663;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97381546134663;
176661    +        Q_Attrition_Flag1  =     0.02618453865336;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.02618453865336;
176662    +        V_Attrition_Flag0  =     0.97646033129904;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97646033129904;
176663    +        V_Attrition_Flag1  =     0.02353966870095;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02353966870095;
176664    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
176665    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
176666    +        END;
MPRINT(EM_DIAGRAM):   END;
176667    +      END;
MPRINT(EM_DIAGRAM):   END;
176668    +    END;
MPRINT(EM_DIAGRAM):   END;
176669    +  END;
MPRINT(EM_DIAGRAM):   END;
176670    +
176671    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
176672    +IF  F_Attrition_Flag  NE '0'
176673    +AND F_Attrition_Flag  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Attrition_Flag NE '0' AND F_Attrition_Flag NE '1' THEN DO;
176674    +        R_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = .;
176675    +        R_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = .;
176676    + END;
MPRINT(EM_DIAGRAM):   END;
176677    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176678    +       R_Attrition_Flag0  =  -P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = -P_Attrition_Flag0 ;
176679    +       R_Attrition_Flag1  =  -P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = -P_Attrition_Flag1 ;
176680    +       SELECT( F_Attrition_Flag  );
MPRINT(EM_DIAGRAM):   SELECT( F_Attrition_Flag );
176681    +          WHEN( '0'  ) R_Attrition_Flag0  = R_Attrition_Flag0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_Attrition_Flag0 = R_Attrition_Flag0 +1;
176682    +          WHEN( '1'  ) R_Attrition_Flag1  = R_Attrition_Flag1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_Attrition_Flag1 = R_Attrition_Flag1 +1;
176683    +       END;
MPRINT(EM_DIAGRAM):   END;
176684    + END;
MPRINT(EM_DIAGRAM):   END;
176685    +
176686    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
176687    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
176688    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
176689    +
176690    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
176691     run;

NOTE: DATA STEP view saved on file EMWS1.TREE_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
176692     quit;
176693     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
176695     proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
176696     by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
176697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

176698     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
176699     * Tree: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree: Computing metadata for TRAIN data;
176700     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree_TRAIN out=WORK.M0ZNKWPC noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ZNKWPC;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ZNKWPC(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ZNKWPC;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ZNKWPC;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2V87S10 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V87S10;
The SAS System

MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V87S10;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M125Y13L(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V87S10;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V87S10;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V87S10;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V87S10;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V87S10;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG1") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG0") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("ATTRITION_FLAG") model = "Tree";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "G_CONTACTS_COUNT_12_MON" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "G_MONTHS_ON_BOOK" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_ATTRITION_FLAG0" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_ATTRITION_FLAG1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RANGE_SQRT_AVG_UTILIZATION_RATIO" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
177072     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
177073     set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
177074     where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
177075     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE (DATA='Tree') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

177076     data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree_EMINFO;
177077     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
177078     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
177079     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
177083     run;
177084     data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_EMINFO;
177085     set EMWS1.Tree_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO WORK.MODELTEMP_INFO;
177086     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

177087     proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
177088     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
177089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

177090     proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
177091     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
177092     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

177093     proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
177094     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
177095     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

177096     data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_EMINFO;
177097     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
177098     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
177099     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

177100     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
177101     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
177102     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
177103     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS1.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS1.TREE_TEST.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
