*------------------------------------------------------------*
User:                Kevin
Date:                April 09, 2022
Time:                15:11:15
Site:                70135990
Platform:            X64_10HOME
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:04" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                April 09, 2022
Time:                15:11:04
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2_JFI3W
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2_JFI3W new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:04" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Kevin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70135990";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:04" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Kevin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
216969     proc freq data=EMWS1.Tree3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Tree3_VariableSet noprint;
216970     table ROLE*LEVEL/out=WORK.Tree3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Tree3META;
216971     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.TREE3_VARIABLESET.
NOTE: The data set WORK.TREE3META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
216972     proc print data=WORK.Tree3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Tree3META label noobs;
216973     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
216974     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
216974   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
216974   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
216975     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
216976     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
216977     run;
 
NOTE: There were 5 observations read from the data set WORK.TREE3META.
NOTE: The PROCEDURE PRINT printed page 123.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
216978     title10;
MPRINT(EM_DIAGRAM):   title10;
216979     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN EMWS1 Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN EMWS1 Part2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Part2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class Attrition_Flag(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="Attrition_Flag";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=Attrition_Flag));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="Attrition_Flag";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_Attrition_Flag_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by Attrition_Flag;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by Attrition_Flag;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
217008     data WORK.Tree3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Tree3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
217009     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
217010     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
217010   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
217010   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
217011        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
217011   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
217011   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
217012     set EMWS1.IDS_ATTRITION_FLAG_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.IDS_ATTRITION_FLAG_DM( where=(_TYPE_="TARGET"));
217013     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
217014     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
217015     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
217016     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
217017     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
217018     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
217019     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
217020     end;
MPRINT(EM_DIAGRAM):   end;
217021     output;
MPRINT(EM_DIAGRAM):   output;
217022     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217023     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
217024     proc print data=WORK.Tree3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Tree3_EVENT noobs label;
217025     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
217026     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
217027     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
217028     run;
 
NOTE: There were 1 observations read from the data set WORK.TREE3_EVENT.
NOTE: The PROCEDURE PRINT printed page 124.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
217029     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "Attrition_Flag"."
217030     proc print data = EMWS1.Ids_Attrition_Flag_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Ids_Attrition_Flag_DM noobs label;
217031     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
217032     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
217033     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
217033   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
217033   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
217034     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
217035     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
217036     run;
 
NOTE: There were 7 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 125.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217037     title10;
MPRINT(EM_DIAGRAM):   title10;
217038     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8
DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
217578     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
217579     * Tree3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Tree3: Generation of macros and macro variables;
217580     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
217581     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
217582     %let EMEXCEPTIONSTRING=;
217583     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
217584     * TRAIN: Tree3;
MPRINT(EM_DIAGRAM):   * TRAIN: Tree3;
217585     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217586     %let EM_ACTION = TRAIN;
217587     %let syscc = 0;
217588     %macro main;
217589
217590       %if %upcase(&EM_ACTION) = CREATE %then %do;
217591         filename temp catalog 'sashelp.emmodl.tree_create.source';
217592         %include temp;
217593         filename temp;
217594
217595         %em_tree_create;
217596       %end;
217597
217598        %else
217599        %if %upcase(&EM_ACTION) = TRAIN %then %do;
217600
217601            filename temp catalog 'sashelp.emmodl.tree_train.source';
217602            %include temp;
217603            filename temp;
217604            %em_tree_train;
217605        %end;
217606
217607       %else
217608       %if %upcase(&EM_ACTION) = SCORE %then %do;
217609         filename temp catalog 'sashelp.emmodl.tree_score.source';
217610         %include temp;
217611         filename temp;
217612
217613         %em_tree_score;
217614
217615       %end;
217616
217617       %else
217618       %if %upcase(&EM_ACTION) = REPORT %then %do;
217619
217620            filename temp catalog 'sashelp.emmodl.tree_report.source';
217621            %include temp;
217622            filename temp;
217623
217624            %em_tree_report;
217625        %end;
217626
217627       %else
217628       %if %upcase(&EM_ACTION) = OPENINT %then %do;
217629
217630            filename temp catalog 'sashelp.emmodl.tree_actions.source';
217631            %include temp;
217632            filename temp;
217633            %EM_TREE_OPENTREEVIEWER;
217634
217635        %end;
217636
217637       %else
217638       %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
217639
217640            filename temp catalog 'sashelp.emmodl.tree_actions.source';
217641            %include temp;
217642            filename temp;
217643            %EM_TREE_CLOSETREEVIEWER;
217644
217645        %end;
217646
217647
217648        %doendm:
217649     %mend main;
217650
217651     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
217653    +%macro em_tree_train;
217655    +   %if &EM_IMPORT_DATA eq %then %do;
217656    +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
217657    +       %put &em_codebar;
217658    +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note,
217658   !+NOQUOTE));
217659    +       %put &errormsg;
217660    +       %put &em_codebar;
217661    +       %goto doendm;
217662    +   %end;
217663    +   %else
217664    +       %let EMEXCEPTIONSTRING =;
217666    +   %if  &EM_NUM_TARGET lt 1 %then %do;
217667    +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
217668    +        %put &em_codebar;
217669    +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err,
217669   !+NOQUOTE));
217670    +        %put &errormsg;
217671    +        %put &em_codebar;
217672    +        %goto doendm;
217673    +   %end;
217675    +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and
217675   !+(&EM_NUM_ORDINAL_INPUT < 1)
217676    +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and
217676   !+(&EM_NUM_BINARY_REJECTED <1)
217677    +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then
217677   !+%do;
217678    +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
217679    +        %put &em_codebar;
217680    +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE))
217680   !+;
217681    +        %put &errormsg;
217682    +        %put &em_codebar;
217683    +        %goto doendm;
217684    +   %end;
217686    +   /* Initialize property macro variables */
217687    +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
217688    +   %include temp;
217689    +   filename temp;
217691    +   %EM_SetProperties;
217693    +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
217694    +   %EM_GETNAME(key=EMTREE, type=DATA);
217695    +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
217696    +     /* if import eq Y and no importtable defined, throw an exception */
217697    +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
217698    +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
217699    +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR ,
217699   !+NOQUOTE));
217700    +         %put &em_codebar;
217701    +         %put &errmsg;
217702    +         %put &em_codebar;
217703    +         %goto doendm;
217704    +      %end;
217705    +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
217706    +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
217707    +         %put &em_codebar;
217708    +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine,
217708   !+emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
217709    +         %put &errormsg;
217710    +         %put &em_codebar;
217711    +         %goto doendm;
217712    +      %end;
217713    +      %else %do;
217714    +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
217715    +         %let varnumID = %sysfunc(varnum(&dsid,ID));
217716    +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
217717    +         %let varnumX = %sysfunc(varnum(&dsid,X));
217718    +         %let varnumY = %sysfunc(varnum(&dsid,Y));
217719    +         %let dsid = %sysfunc(close(&dsid));
217720    +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
217721    +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET
217721   !+;
217722    +            %put &em_codebar;
217723    +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine,
217723   !+emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
217724    +            %put &errormsg;
217725    +            %put &em_codebar;
217726    +            %goto doendm;
217727    +         %end;
217728    +      %end;
217729    +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and
217729   !+(%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then
217729   !+%do;
217730    +         proc delete data=&EM_USER_EMTREE;
217731    +         run;
217732    +      %end;
217733    +   %end;
217734    +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or
217734   !+%sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
217735    +      proc delete data=&EM_USER_EMTREE;
217736    +      run;
217737    +   %end;
217739    +   /* load tree macros */
217740    +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
217741    +   %include temp;
217742    +   filename temp;
217744    +   /* data sets */
217745    +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
217746    +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
217747    +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
217749    +   /* files */
217750    +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
217752    +   /* check actual num of target levels */
217753    +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
217754    +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
217755    +                              nLevel=_nTargetLevel );
217756    +      %if &_nTargetLevel  > 2 %then %do;
217757    +        %let EMEXCEPTIONSTRING =
217757   !+exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
217758    +        %put &em_codebar;
217759    +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel,
217759   !+NOQUOTE));
217760    +        %put &errormsg;
217761    +        %put &em_codebar;
217762    +        %goto doendm;
217763    +      %end;
217764    +   %end;
217766    +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
217767    +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
217768    +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
217769    +        %let costflag=0;
217770    +        data _null_;
217771    +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND
217771   !+^missing(COST) )) end=eof;
217772    +          if eof then call symput("costflag", _N_);
217773    +        run;
217774    +        %if &costflag gt 0 %then %do;
217775    +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
217776    +          %put &em_codebar;
217777    +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine,
217777   !+costnotvalidwithusedecisions_note_err, NOQUOTE));
217778    +          %put &errormsg;
217779    +          %put &em_codebar;
217780    +          %goto doendm;
217781    +       %end;
217782    +     %end;
217783    +   %end;
217785    +   /* determine if multiple targets will be processed */
217786    +   %let em_tree_multipleTargets=N;
217787    +   %let em_tree_numTarget = 1;
217788    +   %let em_tree_targetVars=;
217790    +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
217791    +      /* determine if there are any ordinal target variables - if so, multiple
217791   !+targets are not supported */
217792    +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
217793    +         %let em_tree_multipleTargets=N;
217794    +      %end;
217795    +      %else %do;
217796    +         /* create macro array of targets  */
217797    +         data _null_;
217798    +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'))
217798   !+end=eof;
217799    +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
217800    +           if eof then
217801    +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
217802    +        run;
217804    +        %if &em_tree_numTarget gt 1 %then %do;
217805    +           %let em_tree_multipleTargets=Y;
217806    +        %end;
217807    +      %end;
217808    +   %end;
217810    +   /* create view of only necessary variable for performance reasons */
217811    +   %let tempData = &EM_LIB..em_&EM_NODEID;
217812    +   data &tempData / view=&tempData;
217813    +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
217814    +     %if "&em_tree_multipleTargets" eq "N" %then %do;
217815    +       %EM_TARGET
217816    +     %end;
217817    +     %else %do;
217818    +       %if &em_tree_numTarget ne 0 %then %do;
217819    +         %do i=1 %to &em_tree_numTarget;
217820    +            &&em_tree_targetVars&i
217821    +         %end;
217822    +       %end;
217823    +     %end;
217824    +     );
217825    +   run;
217827    +   /* run Tree procedure */
217828    +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets)
217828   !+;
217830    +   /* Check return code and throw exception if error is detected */
217831    +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
217832    +   %if &syserr %then %do;
217833    +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
217834    +     %goto doendm;
217835    +   %end;
217837    +   /* add decision score code if multiple targets are processed */
217838    +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
217839    +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N)
217839   !+;
217840    +   %end;
217842    +   /* create outfit dataset if multiple score statements have been executed */
217843    +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
217845    +   /* create English Rules */
217846    +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
217847    +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
217848    +       %em_tree_makeEnglishRules;
217850    +       /* English Rules */
217851    +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL,
217851   !+description=ENGLISHRULES, autodisplay=N);
217853    +     %end;
217854    +   filename x;
217856    +   %doendm:
217857    +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_TRAIN):   filename temp catalog 'sashelp.emmodl.tree_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
217858    +%macro EM_SetProperties;
217860    +   /* train properties */
217861    +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
217862    +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
217863    +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
217864    +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
217865    +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ,
217865   !+global=Y);
217866    +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
217867    +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
217868    +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
217869    +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
217870    +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
217871    +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
217872    +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
217873    +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
217874    +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
217875    +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
217876    +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
217877    +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH,
217877   !+global=Y);
217878    +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
217879    +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT,
217879   !+global=Y);
217880    +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
217881    +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS,
217881   !+global=Y);
217882    +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
217883    +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
217884    +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
217885    +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
217886    +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
217887    +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
217888    +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
217889    +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
217890    +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
217891    +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
217892    +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
217893    +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
217894    +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
217895    +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
217896    +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
217897    +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
217898    +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
217899    +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
217900    +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
217901    +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
217903    +   /* properties for interactive sample */
217904    +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
217905    +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
217906    +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
217907    +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
217909    +   /* report properties */
217910    +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
217911    +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
217912    +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN,
217912   !+global=Y);
217913    +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
217914    +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
217915    +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
217916    +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
217917    +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
217918    +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
217919    +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
217920    +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
217921    +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
217922    +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
217924    +   /* score properties */
217925    +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
217926    +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
217928    +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_TREE_TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_SETPROPERTIES):  ;
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):   proc delete data=EMWS1.Tree3_EMTREE;
MPRINT(EM_TREE_TRAIN):   run;
 
NOTE: Deleting EMWS1.TREE3_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_TRAIN):   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
217930    +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
217931    +  %global &nLevel;
217932    +  proc dmdb batch data=&indata
217933    +    classout=_tmp_dmdbout;
217934    +    class &target;
217935    +  run;
217936    +  data _tmp_dmdbout;
217937    +    set _tmp_dmdbout;
217938    +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
217939    +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
217940    +  run;
217941    +  data _null_;
217942    +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
217943    +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
217944    +    %let dsid = %sysfunc(close(&dsid));
217945    +     call symput("&nLevel", put(&_obs, Best12.));
217946    +  run;
217948    +  proc datasets lib=work nolist;
217949    +     delete _tmp_dmdbout;
217950    +  run;
217951    +  quit;
217952    +%Mend EM_CheckBinaryTargetLevel;
217955    +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
217957    +  /* determine the number of obs in training data */
217958    +  proc sql;
217959    +    reset noprint;
217960    +    select count(*) into :em_nobs from &indata;
217961    +  quit;
217963    +  /* determine the number of input variables */
217964    +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
217964   !+&EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
217965    +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED +
217965   !+&EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
217967    +  /* retrieve targetEvent from decmeta */
217968    +  %let targetEvent=;
217969    +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
217970    +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
217971    +      data _null_;
217972    +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
217973    +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
217974    +      run;
217975    +    %end;
217976    +  %end;
217978    +  /* create targetTable if multipleTar eq Y */
217979    +  data temptarget;
217980    +    set &EM_DATA_VARIABLESET;
217981    +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
217982    +  run;
217984    + /* data sets */
217985    + %EM_GETNAME(key=OUTSTATS,      type=DATA);
217986    + %EM_GETNAME(key=EMTREE,        type=DATA);
217987    + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
217988    + %EM_GETNAME(key=OUTSEQ,        type=DATA);
217989    + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
217990    + %EM_GETNAME(key=OUTNODES,      type=DATA);
217991    + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
217992    + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
217993    + %EM_GETNAME(key=OUTPATH,       type=DATA);
217994    + %EM_GETNAME(key=OUTRULES,      type=DATA);
217996    + /* files */
217997    + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
217998    + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
218000    + /* turn on pmml if requested */
218001    + %let nnpmml=0;
218002    + %if %symexist(EM_PMML) %then %do;
218003    +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
218004    +       %let nnpmml=1;
218006    +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
218007    +   %end;
218008    +%end;
218010    +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET +
218010   !+&EM_NUM_ORDINAL_TARGET);
218012    +%if &nnpmml or &numClassTarget %then %do;
218014    +    /* create dmdb needed for pmml generation */
218015    +    %let tree_maxlevel = 512;
218016    +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
218017    +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
218018    +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
218019    +      %end;
218020    +    %end;
218021    +    %if &tree_maxlevel gt 0 %then %do;
218022    +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
218023    +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
218024    +    %end;
218026    +    %let targetOrderString =;
218027    +    %let targetString = ;
218028    +    data _null_;
218029    +       length orderString nameString $10000;
218030    +       retain orderString nameString;
218031    +       set &em_data_variableset end=eof;
218032    +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then
218032   !+ %do;
218033    +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
218034    +       %end;
218035    +       %else %do;
218036    +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE
218036   !+='Y';
218037    +       %end;          select(order);
218038    +         when('')        order ='DESC';
218039    +         when('FMTASC')  order='ASCFMT';
218040    +         when('FMTDESC') order='DESFMT';
218041    +         otherwise;
218042    +       end;
218043    +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
218044    +       nameString = trim(nameString)!!' '!!trim(NAME);
218046    +       if eof then do;
218047    +          call symput('targetOrderString', trim(orderString));
218048    +          call symput('targetString', trim(nameString));
218049    +       end;
218050    +    run;
218052    +    %let arborkluge= "work._treeDMDB";
218054    +    proc dmdb batch data=&indata
218055    +    %if &nnpmml %then %do;
218056    +        PMML
218057    +    %end;
218058    +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
218060    +      %if &nnpmml %then %do;
218061    +           %if "%EM_ID" ne "" %then %do;
218062    +             id %EM_ID;
218063    +           %end;
218064    +           %if &EM_NUM_CLASS gt 0 %then %do;
218065    +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
218066    +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
218067    +                  &targetOrderString;
218068    +           %end;
218069    +           %if &EM_NUM_INTERVAL gt 0 %then %do;
218070    +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
218071    +           %end;
218072    +           target &targetString %EM_INTERVAL_TARGET;
218073    +           %if "%EM_FREQ" ne "" %then %do;
218074    +             freq %EM_FREQ;
218075    +           %end;
218076    +      %end;
218077    +      %else %do;
218078    +         class  &targetOrderString;
218079    +         target &targetString %EM_INTERVAL_TARGET;
218080    +      %end;
218081    +    run;
218082    +    quit;
218084    +    proc datasets lib=work nolist;
218085    +       delete classout varout;
218086    +    run;
218087    +    quit;
218089    + %end;
218092    + /* run Arbor procedure */
218093    + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
218094    +  proc arbor data=&INDATA
218096    +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
218097    +    Leafsize = &EM_PROPERTY_LEAFSIZE
218098    +  %end;
218100    +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs))
218100   !+%then %do;
218101    +    Splitsize = &EM_PROPERTY_SPLITSIZE
218102    +  %end;
218104    +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
218105    +    MinCatSize = &EM_PROPERTY_MINCATSIZE
218106    +  %end;
218108    +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
218109    +    MaxBranch = &EM_PROPERTY_MAXBRANCH
218110    +  %end;
218112    +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
218113    +    MaxDepth = &EM_PROPERTY_MAXDEPTH
218114    +  %end;
218116    +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then
218116   !+%do;
218117    +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
218118    +  %end;
218119    +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
218120    +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
218121    +  %end;
218122    +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
218123    +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
218124    +  %end;
218126    +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
218127    +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
218128    +      alpha = &EM_PROPERTY_SIGLEVEL
218129    +    %end;
218130    +  %end;
218132    +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or
218132   !+("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
218133    +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion"
218133   !+ eq "DEFAULT")) %then %do;
218134    +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
218135    +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
218136    +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
218138    +        padjust =
218139    +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
218140    +          &chaid
218141    +        %end;
218142    +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
218143    +          DEPTH
218144    +        %end;
218145    +      %end;
218146    +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
218147    +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
218148    +         pvars = &num_inputs
218149    +      %end;
218150    +    %end;
218151    +  %end;
218152    +  %else %do;
218153    +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR
218153   !+("&Criterion" eq "DEFAULT")) %then %do;
218154    +         padjust = NONE
218155    +      %end;
218156    +  %end;
218158    +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
218159    +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
218160    +    Maxrules = &num_nrules
218161    +  %end;
218163    +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
218164    +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
218165    +    Maxsurrs = &num_nsurrs
218166    +  %end;
218168    +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
218169    +     Missing=&EM_PROPERTY_MISSINGVALUE
218170    +  %end;
218172    +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
218173    +     USEVARONCE
218174    +  %end;
218176    +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
218177    +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
218178    +  %end;
218181    +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
218182    +    event = "&targetEvent"
218183    +  %end;
218185    +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
218186    +     DECSEARCH
218187    +  %end;
218189    +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
218190    +     PRIORSSEARCH
218191    +  %end;
218193    +  %if &arbor_1 ne %then %do;
218194    +    &arbor_1
218195    +  %end;
218197    +  %if &em_arbor ne %then %do;
218198    +     &em_arbor
218199    +  %end;
218200    +  ;
218201    + %end;
218202    + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
218203    +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
218204    +       Performance &EM_PROPERTY_PERFORMANCE
218205    +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
218206    +         nodesize=&EM_PROPERTY_NODESAMPLE
218207    +       %end;
218208    +       ;
218209    +       interact;
218210    + %end;
218211    + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
218212    +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
218213    +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
218214    +    %put &em_codebar;
218215    +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err,
218215   !+NOQUOTE));
218216    +    %put &errormsg;
218217    +    %put &em_codebar;
218218    +    %goto doendm;
218219    +   %end;
218220    +   %else %do;
218221    +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
218222    +       Performance &EM_PROPERTY_PERFORMANCE
218223    +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
218224    +         nodesize=&EM_PROPERTY_NODESAMPLE
218225    +       %end;
218226    +       ;
218227    +       interact;
218228    +   %end;
218229    + %end;
218231    + %else %do;
218232    +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
218233    +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
218234    +    %put &em_codebar;
218235    +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err,
218235   !+NOQUOTE));
218236    +    %put &errormsg;
218237    +    %put &em_codebar;
218238    +    %goto doendm;
218239    +   %end;
218240    +   %else %do;
218241    +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
218242    +       Performance &EM_PROPERTY_PERFORMANCE
218243    +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
218244    +         nodesize=&EM_PROPERTY_NODESAMPLE
218245    +       %end;
218246    +       ;
218247    +        interact;
218248    +   %end;
218249    + %end;
218251    + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
218252    +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
218253    +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
218254    +    %end;
218256    +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
218257    +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
218258    +    %end;
218260    +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
218261    +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
218262    +    %end;
218264    +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
218265    +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
218266    +    %end;
218268    +    %if "%EM_FREQ" ne "" %then %do;
218269    +       freq %EM_FREQ;
218270    +    %end;
218272    +    %if "&multipleTar" eq "Y" %then %do;
218273    +       /* cycle through all target vars in variableset */
218274    +       %let tdsid = %sysfunc(open(temptarget));
218275    +       %if &tdsid %then %do;
218276    +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
218277    +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
218278    +          %do %while(^ %sysfunc(fetch(&tdsid)));
218279    +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
218280    +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
218281    +             target &var / level = &lvl
218282    +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
218283    +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
218284    +             %end;
218285    +             %else %if "&lvl" eq "INTERVAL" %then %do;
218286    +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
218287    +             %end;
218288    +             %else %if "&lvl" eq "ORDINAL" %then %do;
218289    +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
218290    +             %end;
218291    +          %end;
218292    +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
218293    +       %end;
218294    +       useTarget variable = %EM_TARGET;
218295    +    %end;
218296    +    %else %do;
218297    +      target %EM_TARGET / level = %EM_TARGET_LEVEL
218298    +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL"))
218298   !+%then %do;
218299    +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
218300    +      %end;
218301    +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
218302    +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
218303    +      %end;
218304    +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
218305    +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
218306    +      %end;
218307    +    %end;
218309    +    %if "&multipleTar" eq "N" %then %do;
218310    +      &EM_DEC_STATEMENT;
218311    +    %end;
218313    +    Performance &EM_PROPERTY_PERFORMANCE
218314    +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
218315    +      nodesize=&EM_PROPERTY_NODESAMPLE
218316    +    %end;
218317    +    ;
218319    +    %if "&intFlag" eq "Y" %then %do;
218320    +       INTERACT Largest;
218321    +       Train maxnewdepth=0;
218322    +    %end;
218324    +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
218325    +         Assess
218326    +         %if (("&EM_IMPORT_VALIDATE" ne "") AND
218326   !+(%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW))
218326   !+)) %then %do;
218327    +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
218328    +              %put &em_codebar;
218329    +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine,
218329   !+novalidationwithcv_note, NOQUOTE));
218330    +              %put &errormsg;
218331    +              %put &em_codebar;
218332    +            %end;
218333    +            %else %do;
218334    +               Validata=&EM_IMPORT_VALIDATE
218335    +            %end;
218336    +         %end;
218337    +         %else %do;
218338    +           NoValidata
218339    +         %end;
218340    +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
218341    +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
218342    +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
218343    +               %if &dsid %then %do;
218344    +                 %let usenum = %sysfunc(varnum(&dsid, USE));
218345    +                 %do %while(^ %sysfunc(fetch(&dsid)));
218346    +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
218347    +                   %if "&use" eq "Y" %then %let measure=PROFIT;
218348    +                   %else %do;
218349    +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
218350    +                      %else %let measure= MISC;
218351    +                   %end;
218352    +                 %end;
218353    +               %end;
218354    +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
218355    +            %end;
218356    +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
218357    +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
218358    +                 %let measure=ASE;
218359    +              %end;
218360    +              %else %do;
218361    +                 %let measure=MISC;
218362    +              %end;
218363    +            %end;
218364    +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
218365    +              %let measure=ASE;
218366    +            %end;
218367    +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
218368    +               %let measure = LIFT;
218369    +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
218370    +               %if &dsid %then %do;
218371    +                 %let usenum = %sysfunc(varnum(&dsid, USE));
218372    +                 %do %while(^ %sysfunc(fetch(&dsid)));
218373    +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
218374    +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
218375    +                 %end;
218376    +               %end;
218377    +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
218378    +            %end;
218379    +            measure=&measure
218380    +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL"))
218380   !+%then %do;
218381    +               event = "&targetEvent"
218382    +            %end;
218383    +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
218384    +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
218385    +            %end;
218386    +         %end;
218387    +         %if "&multipleTar" eq "N" %then %do;
218388    +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
218389    +               CV
218390    +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
218391    +                 CVNITer = &EM_PROPERTY_CVNITER
218392    +               %end;
218393    +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
218394    +                 CVRepeat = &EM_PROPERTY_CVREPEAT
218395    +               %end;
218396    +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
218397    +                 CVSeed = &EM_PROPERTY_CVSEED
218398    +               %end;
218399    +            %end;
218400    +         %end;
218401    +       %end;
218402    +      ;
218404    +      %if "&intFlag" ne "Y" %then %do;
218405    +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
218406    +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
218407    +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
218408    +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
218410    +          SUBTREE &subtree
218411    +          %if "&subtree" eq "NLEAVES" %then %do;
218412    +            =&EM_PROPERTY_NSUBTREE
218413    +          %end;
218414    +          ;
218415    +        %end;
218417    +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then
218417   !+ %do;
218418    +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
218419    +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP
218419   !+nvars=&EM_PROPERTY_NUMSINGLEIMP;
218420    +          %end;
218421    +       %end;
218422    +      %end;
218423    + %end;
218426    + MakeMacro nleaves = nleaves;
218427    + save
218428    + %if "&EM_USER_EMTREE" ne "" %then %do;
218429    +   MODEL=&EM_USER_EMTREE
218430    + %end;
218431    + %if "&EM_USER_OUTSEQ" ne "" %then %do;
218432    +   SEQUENCE=&EM_USER_OUTSEQ
218433    + %end;
218434    + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
218435    +   IMPORTANCE=&EM_USER_OUTIMPORT
218436    + %end;
218437    + %if "&EM_USER_OUTNODES" ne "" %then %do;
218438    +   NODESTAT=&EM_USER_OUTNODES
218439    + %end;
218440    + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
218441    +   SUMMARY=&EM_USER_OUTSUMMARY
218442    + %end;
218443    + %if "&EM_USER_OUTSTATS" ne "" %then %do;
218444    +   STATSBYNODE=&EM_USER_OUTSTATS
218445    + %end;
218446    + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
218447    +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
218448    + %end;
218449    + %if "&EM_USER_OUTPATH" ne "" %then %do;
218450    +   Pathlistnonmissing=&EM_USER_OUTPATH
218451    + %end;
218452    + %if "&EM_USER_OUTRULES" ne "" %then %do;
218453    +   RULES = &EM_USER_OUTRULES
218454    + %end;
218455    + ;
218457    + %if "&intFlag" ne "Y" %then %do;
218459    +   %let lookupString = ;
218460    +   %if ^%symexist(EM_OPTION) %then
218461    +      %let EM_OPTION=;
218463    +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or
218463   !+%sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
218464    +      %let lookupString = LOOKUP=SELECT;
218465    +   %end;
218467    +   %let codetext=;
218468    +   %let norescodetxt=;
218470    +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
218471    +     %let codetext=&codetext DUMMY;
218472    +     %let norescodetxt=&norescodetxt DUMMY;
218473    +   %end;
218474    +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
218475    +     %let codetext=&codetext NOLEAFID;
218476    +     %let norescodetxt=&norescodetxt NOLEAFID;
218477    +   %end;
218478    +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
218479    +     %let norescodetxt=&norescodetxt NOPRED;
218480    +   %end;
218482    +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
218483    +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid
218483   !+&lookupString;
218485    +   %if &nnpmml %then %do;
218486    +     code pmml;
218487    +   %end;
218489    +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
218490    +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
218491    +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
218492    +   %end;
218493    +   %if "&EM_IMPORT_TEST" ne "" %then %do;
218494    +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
218495    +   %end;
218496    + %end;
218498    + run;
218499    + quit;
218501    + /*%em_checkerror(); */
218502    +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
218503    +   /* Delete DMDB catalog */
218504    +   proc datasets lib=work nolist;
218505    +       delete _treeDMDB / mt=cat;
218506    +  run;
218507    +  %end;
218509    + %if &nnpmml %then %do;
218510    +    ods pmml close;
218511    + %end;
218513    +  %doendm:
218515    +%mend em_tree_runTreeProcedure;
218517    +%macro em_tree_createFitStats( multipleTar= );
218520    +  /* create targetTable is multipleTar eq Y */
218521    +  data temptarget;
218522    +    set &EM_DATA_VARIABLESET;
218523    +    where ROLE="TARGET";
218524    +  run;
218526    +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
218527    +   data &EM_USER_EMOUTFIT;
218528    +     length target $32;
218529    +     merge work.fit_train
218530    +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
218531    +       work.fit_valid
218532    +     %end;
218533    +     %if "&EM_IMPORT_TEST" ne "" %then %do;
218534    +       work.fit_test
218535    +     %end;
218536    +     ;
218537    +     %if "&multipleTar" eq "N" %then %do;
218538    +       target="%EM_TARGET";
218539    +     %end;
218540    +     %else %do;
218541    +       target = _TARGET_;
218542    +     %end;
218543    +     drop _NW_ _SUMW_
218544    +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
218545    +        _VSUMW_
218546    +     %end;
218547    +     ;
218548    +   run;
218550    +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
218551    +     proc datasets library=work nolist;
218552    +       delete fit_valid;
218553    +     run;
218554    +   %end;
218555    +   %if "&EM_IMPORT_TEST" ne "" %then %do;
218556    +     proc datasets library=work nolist;
218557    +       delete fit_test;
218558    +     run;
218559    +   %end;
218561    +%mend em_tree_createFitStats;
218564    +%macro em_tree_makeEnglishRules;
218566    +  %EM_GETNAME(key=OUTNODES, type=DATA);
218567    +  %EM_GETNAME(key=OUTPATH, type=DATA);
218569    +  /* verify that necessary tables exist and if not, skip processing */
218570    +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
218571    +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
218572    +    %goto doendm;
218573    +  %end;
218574    +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
218575    +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
218576    +    %goto doendm;
218577    +  %end;
218579    +  /* determine length of variable in outpath dataset */
218580    +  %let vlength= ;
218581    +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
218582    +  %if &dsid ne %then %do;
218583    +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
218584    +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
218585    +  %end;
218586    +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
218588    +  data tempoutpath;
218589    +    length varname $&vlength;
218590    +    retain varname;
218591    +    set &EM_USER_OUTPATH;
218593    +    if ^missing(variable) then varname=variable;
218594    +    else if ^missing(var_name) then varname=var_name;
218595    +    output;
218596    +  run;
218598    +  /* create an array of generated predicted variable names */
218599    +  %let tree_pred_vars = ;
218600    +  %let tree_pred_label = ;
218601    +  %let numpred= 0;
218602    +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
218604    +    data _null_;
218605    +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
218606    +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
218607    +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)),
218607   !+strip(tranwrd(LABEL,'"','""')));
218608    +     if eof then
218609    +       call symput('numpred', strip(put(_N_, BEST.)));
218610    +    run;
218611    +  %end;
218613    +  /* determine if NPRIORS exists in outnodes  */
218614    +  %local nprior_flag;
218615    +  data _null_;
218616    +    set &EM_USER_OUTNODES(obs=2) end=eof;
218617    +    if eof then do;
218618    +      call symput('nprior_flag', strip(put(npriors, best.)));
218619    +    end;
218620    +  run;
218622    +  proc sort data=tempoutpath; by node; run;
218623    +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
218625    +  data tempoutpath;
218626    +    merge tempoutpath(in=_a) outnodes(keep= node
218627    +    %if "&nprior_flag" ne "." %then %do;
218628    +      NPRIORS
218629    +    %end;
218630    +    %else %do;
218631    +      N
218632    +    %end;
218633    +    %if &numpred gt 0 %then %do;
218634    +      %do i=1 %to &numpred;
218635    +        &&tree_pred_vars&i
218636    +      %end;
218637    +    %end;
218638    +    );
218639    +    by node;
218640    +    if _a;
218641    +  run;
218643    +  proc sort data=tempoutpath; by node descending varname descending numeric_value;
218643   !+run;
218645    +  data _null_;
218646    +    file x;
218647    +    set tempoutpath;
218648    +    by node descending varname;
218649    +    retain origvar oldnode string;
218650    +    length origvar $32 oldnode 8 string $200;
218652    +    if _N_ = 1 then do;
218653    +      origvar = varname;
218654    +      oldnode = node;
218655    +    end;
218657    +    if first.node then do;
218658    +       put "&EM_CODEBAR";
218659    +       put " Node = " node;
218660    +       put "&EM_CODEBAR";
218661    +    end;
218663    +      if first.varname then do;
218664    +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
218665    +            if MISSING(CHARACTER_VALUE) then do;
218666    +             if NUMERIC_VALUE ne .  then do;
218667    +              if ^first.node then do;
218668    +                string= "AND "|| strip(varname)||" "||strip(relation)||"
218668   !+"||strip(numeric_value);
218669    +              end;
218670    +              else do;
218671    +                string= "if "|| strip(varname)||" "||strip(relation)||"
218671   !+"||strip(numeric_value);
218672    +              end;
218673    +             end;
218674    +            end;
218675    +            else do;
218676    +              if ^first.node then do;
218677    +                string= "AND "|| strip(varname)||" "||strip(relation)||"
218677   !+"||strip(character_value);
218678    +              end;
218679    +              else do;
218680    +                string= "if "|| strip(varname)||" "||strip(relation)||"
218680   !+"||strip(character_value);
218681    +              end;
218682    +             end;
218683    +         end;
218684    +         else if RELATION in ("=") then do;
218685    +            if ^first.node then do;
218686    +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
218687    +            end;
218688    +            else do;
218689    +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
218690    +            end;
218691    +         end;
218692    +         else if RELATION in ("ISMISSING") then do;
218693    +            if ^first.node then do;
218694    +              string = " AND "|| strip(varname) || " equals Missing";
218695    +            end;
218696    +            else do;
218697    +              string = "if "|| strip(varname) ||" equals Missing";
218698    +            end;
218699    +         end;
218700    +         else if RELATION in ("ISNOTMISSING") then do;
218701    +            if ^first.node then do;
218702    +              string = " AND "|| strip(varname) || " equals All Values";
218703    +            end;
218704    +            else do;
218705    +              string = "if "|| strip(varname) ||" equals All Values";
218706    +            end;
218707    +         end;
218708    +         if ^missing(varname) then origvar = varname;
218709    +         oldnode=node;
218711    +      end;
218712    +      else do;
218713    +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
218714    +          if MISSING(CHARACTER_VALUE) then do;
218715    +           if  NUMERIC_VALUE ne .  then do;
218716    +            if ^MISSING(string) then
218717    +              string= strip(string)||" AND "|| strip(varname)||"
218717   !+"||strip(relation)||" "||strip(numeric_value);
218718    +            else
218719    +              string= " if "|| strip(varname)||" "||strip(relation)||"
218719   !+"||strip(numeric_value);
218720    +           end;
218721    +          end;
218722    +          else do;
218723    +            if ^MISSING(string) then
218724    +              string= strip(string)||" AND "|| strip(varname)||"
218724   !+"||strip(relation)||" "||strip(character_value);
218725    +            else
218726    +              string= " if "|| strip(varname)||" "||strip(relation)||"
218726   !+"||strip(character_value);
218727    +          end;
218729    +         end;
218730    +         else if RELATION in ("=") then do;
218731    +           string = strip(string)||", "||strip(character_value);
218732    +         end;
218733    +         else if RELATION in ("ISMISSING") then do;
218735    +         end;
218736    +         if ^missing(varname) then origvar = varname;
218737    +         oldnode=node;
218738    +      end;
218739    +      if last.varname then do;
218740    +         if RELATION in ("ISMISSING") then do;
218741    +           if ^first.varname then do;
218742    +             string = strip(string) || " or MISSING";
218743    +           end;
218744    +         end;
218745    +         put string;
218746    +         if ^missing(varname) then origvar = varname;
218747    +         oldnode=node;
218748    +      end;
218750    +      if last.node then do;
218751    +         put "then ";
218752    +         put " Tree Node Identifier   = " node;
218754    +         %if "&nprior_flag" ne "." %then %do;
218755    +           put " Number of Observations = " NPRIORS;
218756    +         %end;
218757    +         %else %do;
218758    +           put " Number of Observations = " N;
218759    +         %end;
218761    +         %if &numpred gt 0 %then %do;
218762    +           %do i=1 %to &numpred;
218763    +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
218764    +           %end;
218765    +         %end;
218767    +         put " ";
218768    +         if ^missing(varname) then origvar = varname;
218769    +         oldnode=node;
218770    +      end;
218772    +  run;
218774    +  proc datasets lib=work nolist;
218775    +    delete tempoutpath outnodes;
218776    +  run;
218778    +  %doendm:
218779    +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_TREE_TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   length KEY $32 TYPE $10 FILE $200 FOLDER $32 EXTENSION $8 AUTODELETE $1
property $1 action $8 cas $1;
MPRINT(EM_REGISTER):   key = upcase("ENGLISHRULES");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "ENGLISHRULES";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "txt";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   run;
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   proc dmdb batch data=EMWS1.Part2_TRAIN
classout=_tmp_dmdbout;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   class Attrition_Flag;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   run;
 
NOTE: Records processed = 7088   Memory used = 511K.
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: The data set WORK._TMP_DMDBOUT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_CHECKBINARYTARGETLEVEL):   data _tmp_dmdbout;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   set _tmp_dmdbout;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   if strip(TYPE) = 'N' and strip(LEVEL) = '.' then delete;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   if strip(TYPE) = 'C' and strip(LEVEL) = '' then delete;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_DMDBOUT.
NOTE: The data set WORK._TMP_DMDBOUT has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_CHECKBINARYTARGETLEVEL):   data _null_;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   call symput("_nTargetLevel", put(2, Best12.));
MPRINT(EM_CHECKBINARYTARGETLEVEL):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_CHECKBINARYTARGETLEVEL):   proc datasets lib=work nolist;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   delete _tmp_dmdbout;
MPRINT(EM_CHECKBINARYTARGETLEVEL):   run;
 
NOTE: Deleting WORK._TMP_DMDBOUT (memtype=DATA).
MPRINT(EM_CHECKBINARYTARGETLEVEL):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):   data EMWS1.em_Tree3 / view=EMWS1.em_Tree3;
MPRINT(EM_TREE_TRAIN):   set EMWS1.Part2_TRAIN (keep
MPRINT(EM_TREE_TRAIN):  =G_Contacts_Count_12_mon G_Customer_Age G_Months_Inactive_12_mon
G_Months_on_book G_Total_Relationship_Count G_Total_Trans_Ct RANGE_LOG_Total_Trans_Amt
RANGE_SQRT_Avg_Utilization_Ratio RANGE_SQRT_Total_Amt_Chng_Q4_Q1
RANGE_SQRT_Total_Ct_Chng_Q4_Q1 RANGE_Total_Revolving_Bal Attrition_Flag Attrition_Flag );
MPRINT(EM_TREE_TRAIN):   run;
 
NOTE: DATA STEP view saved on file EMWS1.EM_TREE3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   proc sql;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   reset noprint;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   select count(*) into :em_nobs from EMWS1.em_Tree3;
NOTE: View EMWS1.EM_TREE3.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   data _null_;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="TARGET"));
MPRINT(EM_TREE_RUNTREEPROCEDURE):   call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   data temptarget;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   set EMWS1.Tree3_VariableSet;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   where ROLE="TARGET" AND LEVEL^="ORDINAL";
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   data _null_;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   length orderString nameString $10000;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   retain orderString nameString;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   set EMWS1.Tree3_VariableSet end=eof;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL",
"ORDINAL") and USE ='Y';
MPRINT(EM_TREE_RUNTREEPROCEDURE):   select(order);
MPRINT(EM_TREE_RUNTREEPROCEDURE):   when('') order ='DESC';
MPRINT(EM_TREE_RUNTREEPROCEDURE):   when('FMTASC') order='ASCFMT';
MPRINT(EM_TREE_RUNTREEPROCEDURE):   when('FMTDESC') order='DESFMT';
MPRINT(EM_TREE_RUNTREEPROCEDURE):   otherwise;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   end;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   orderString = trim(orderString)!!'
'!!trim(NAME)!!'('!!trim(order)!!')';
MPRINT(EM_TREE_RUNTREEPROCEDURE):   nameString = trim(nameString)!!' '!!trim(NAME);
MPRINT(EM_TREE_RUNTREEPROCEDURE):   if eof then do;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   call symput('targetOrderString', trim(orderString));
MPRINT(EM_TREE_RUNTREEPROCEDURE):   call symput('targetString', trim(nameString));
MPRINT(EM_TREE_RUNTREEPROCEDURE):   end;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   proc dmdb batch data=EMWS1.em_Tree3 dmdbcat=_treeDMDB
classout=classout varout=varout maxlevel=513;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   class Attrition_Flag(DESC);
MPRINT(EM_TREE_RUNTREEPROCEDURE):   target Attrition_Flag
MPRINT(EM_TREE_RUNTREEPROCEDURE):  ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
NOTE: Records processed = 7088   Memory used = 511K.
NOTE: View EMWS1.EM_TREE3.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: There were 7088 observations read from the data set EMWS1.EM_TREE3.
NOTE: The data set WORK.CLASSOUT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   quit;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   proc datasets lib=work nolist;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   delete classout varout;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
MPRINT(EM_TREE_RUNTREEPROCEDURE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   proc arbor data=EMWS1.em_Tree3 Leafsize = 5 MinCatSize = 5
MaxBranch = 6 MaxDepth = 6
MPRINT(EM_TREE_RUNTREEPROCEDURE):   Maxrules = 5 Maxsurrs = 0 Missing=USEINSEARCH
Exhaustive=5000
MPRINT(EM_TREE_RUNTREEPROCEDURE):   event = "1" ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   input
MPRINT(EM_INTERVAL_INPUT):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1 RANGE_Total_Revolving_Bal
MPRINT(EM_TREE_RUNTREEPROCEDURE):  / level = interval;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   input
MPRINT(EM_NOMINAL_INPUT):   G_Contacts_Count_12_mon G_Customer_Age G_Months_Inactive_12_mon
G_Months_on_book G_Total_Relationship_Count G_Total_Trans_Ct
MPRINT(EM_TREE_RUNTREEPROCEDURE):   / level = nominal;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   target
MPRINT(EM_TARGET):   Attrition_Flag
MPRINT(EM_TREE_RUNTREEPROCEDURE):   / level =
MPRINT(EM_TARGET_LEVEL):   BINARY
MPRINT(EM_TREE_RUNTREEPROCEDURE):   Criterion=ENTROPY;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   Performance DISK nodesize=20000 ;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   Assess Validata=EMWS1.Part2_VALIDATE
MPRINT(EM_TREE_RUNTREEPROCEDURE):   measure=MISC
MPRINT(EM_TREE_RUNTREEPROCEDURE):   ;
NOTE: 1562168 kilobytes of physical memory.
NOTE: Will use 7088 out of 7088 training cases.
NOTE: Using memory pool with 162713600 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 2166448 bytes of work memory.
NOTE: The subtree sequence contains 266 subtrees. The largest has 379 nodes and 273 leaves.
NOTE: Using subtree with 175 nodes and 138 leaves.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   SUBTREE BEST ;
NOTE: Using subtree with 175 nodes and 138 leaves.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   MakeMacro nleaves = nleaves;
NOTE: Created macro variable NLEAVES equal to 138.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   save MODEL=EMWS1.Tree3_EMTREE SEQUENCE=EMWS1.Tree3_OUTSEQ
IMPORTANCE=EMWS1.Tree3_OUTIMPORT NODESTAT=EMWS1.Tree3_OUTNODES SUMMARY=EMWS1.Tree3_OUTSUMMARY
STATSBYNODE=EMWS1.Tree3_OUTSTATS TOPOLOGY=EMWS1.Tree3_OUTTOPOLOGY
Pathlistnonmissing=EMWS1.Tree3_OUTPATH RULES = EMWS1.Tree3_OUTRULES ;
NOTE: The data set EMWS1.TREE3_OUTIMPORT has 11 observations and 6 variables.
NOTE: The data set EMWS1.TREE3_EMTREE has 11732 observations and 4 variables.
NOTE: The data set EMWS1.TREE3_OUTNODES has 175 observations and 24 variables.
NOTE: The data set EMWS1.TREE3_OUTPATH has 907 observations and 7 variables.
NOTE: The data set EMWS1.TREE3_OUTRULES has 3314 observations and 6 variables.
NOTE: The data set EMWS1.TREE3_OUTSEQ has 266 observations and 20 variables.
NOTE: The data set EMWS1.TREE3_OUTSTATS has 1225 observations and 5 variables.
NOTE: The data set EMWS1.TREE3_OUTSUMMARY has 24 observations and 6 variables.
NOTE: The data set EMWS1.TREE3_OUTTOPOLOGY has 175 observations and 5 variables.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   code
file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\TREEFLOW.sas" res group=Tree3
;
NOTE: External file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\TREEFLOW.sas
      opened.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   code
file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\TREEPUBLISH.sas" nores
group=Tree3 ;
NOTE: External file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\TREEPUBLISH.sas
      opened.
NOTE: View EMWS1.EM_TREE3.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   score data=EMWS1.em_Tree3 out=_NULL_ outfit=work.fit_train
role=TRAIN;
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   score data=EMWS1.Part2_VALIDATE out=_NULL_
outfit=work.fit_valid role=VALID;
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   score data=EMWS1.Part2_TEST out=_NULL_
outfit=work.fit_test role=TEST;
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   quit;
 
NOTE: View EMWS1.EM_TREE3.VIEW used (Total process time):
      real time           0.79 seconds
      cpu time            0.76 seconds
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: There were 7088 observations read from the data set EMWS1.EM_TREE3.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.80 seconds
      cpu time            0.78 seconds
 
 
MPRINT(EM_TREE_RUNTREEPROCEDURE):   proc datasets lib=work nolist;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   delete _treeDMDB / mt=cat;
MPRINT(EM_TREE_RUNTREEPROCEDURE):   run;
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
MPRINT(EM_TREE_TRAIN):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_CREATEFITSTATS):   data temptarget;
MPRINT(EM_TREE_CREATEFITSTATS):   set EMWS1.Tree3_VariableSet;
MPRINT(EM_TREE_CREATEFITSTATS):   where ROLE="TARGET";
MPRINT(EM_TREE_CREATEFITSTATS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_CREATEFITSTATS):  ;
MPRINT(EM_TREE_CREATEFITSTATS):   data EMWS1.Tree3_EMOUTFIT;
MPRINT(EM_TREE_CREATEFITSTATS):   length target $32;
MPRINT(EM_TREE_CREATEFITSTATS):   merge work.fit_train work.fit_valid work.fit_test ;
MPRINT(EM_TREE_CREATEFITSTATS):   target=
MPRINT(EM_TREE_CREATEFITSTATS):  "Attrition_Flag";
MPRINT(EM_TREE_CREATEFITSTATS):   drop _NW_ _SUMW_ _VSUMW_ ;
MPRINT(EM_TREE_CREATEFITSTATS):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS1.TREE3_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_CREATEFITSTATS):   proc datasets library=work nolist;
MPRINT(EM_TREE_CREATEFITSTATS):   delete fit_valid;
MPRINT(EM_TREE_CREATEFITSTATS):   run;
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_CREATEFITSTATS):   proc datasets library=work nolist;
MPRINT(EM_TREE_CREATEFITSTATS):   delete fit_test;
MPRINT(EM_TREE_CREATEFITSTATS):   run;
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):   filename X
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\ENGLISHRULES.txt" encoding='utf-8'
NOBOM;
MPRINT(EM_TREE_MAKEENGLISHRULES):  ;
MPRINT(EM_TREE_MAKEENGLISHRULES):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   data tempoutpath;
MPRINT(EM_TREE_MAKEENGLISHRULES):   length varname $46;
MPRINT(EM_TREE_MAKEENGLISHRULES):   retain varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   set EMWS1.Tree3_OUTPATH;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^missing(variable) then varname=variable;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else if ^missing(var_name) then varname=var_name;
MPRINT(EM_TREE_MAKEENGLISHRULES):   output;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 907 observations read from the data set EMWS1.TREE3_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 907 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   data _null_;
MPRINT(EM_TREE_MAKEENGLISHRULES):   set
EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_MAKEENGLISHRULES):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)),
strip(VARIABLE));
MPRINT(EM_TREE_MAKEENGLISHRULES):   call symput('tree_pred_label'!!strip(put(_N_, BEST.)),
strip(tranwrd(LABEL,'"','""')));
MPRINT(EM_TREE_MAKEENGLISHRULES):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   data _null_;
MPRINT(EM_TREE_MAKEENGLISHRULES):   set EMWS1.Tree3_OUTNODES(obs=2) end=eof;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if eof then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   call symput('nprior_flag', strip(put(npriors, best.)));
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.TREE3_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   proc sort data=tempoutpath;
MPRINT(EM_TREE_MAKEENGLISHRULES):   by node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 907 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 907 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   proc sort data=EMWS1.Tree3_OUTNODES out=outnodes;
MPRINT(EM_TREE_MAKEENGLISHRULES):   by node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 175 observations read from the data set EMWS1.TREE3_OUTNODES.
NOTE: The data set WORK.OUTNODES has 175 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   data tempoutpath;
MPRINT(EM_TREE_MAKEENGLISHRULES):   merge tempoutpath(in=_a) outnodes(keep= node NPRIORS
P_Attrition_Flag1 P_Attrition_Flag0 );
MPRINT(EM_TREE_MAKEENGLISHRULES):   by node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if _a;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 907 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 175 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 907 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   proc sort data=tempoutpath;
MPRINT(EM_TREE_MAKEENGLISHRULES):   by node descending varname descending numeric_value;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: There were 907 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 907 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   data _null_;
MPRINT(EM_TREE_MAKEENGLISHRULES):   file x;
MPRINT(EM_TREE_MAKEENGLISHRULES):   set tempoutpath;
MPRINT(EM_TREE_MAKEENGLISHRULES):   by node descending varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   retain origvar oldnode string;
MPRINT(EM_TREE_MAKEENGLISHRULES):   length origvar $32 oldnode 8 string $200;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if _N_ = 1 then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   origvar = varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   oldnode = node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if first.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put
"*------------------------------------------------------------*";
MPRINT(EM_TREE_MAKEENGLISHRULES):   put " Node = " node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put
"*------------------------------------------------------------*";
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if first.varname then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^first.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string= "AND "|| strip(varname)||" "||strip(relation)||"
"||strip(numeric_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string= "if "|| strip(varname)||" "||strip(relation)||"
"||strip(numeric_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^first.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string= "AND "|| strip(varname)||" "||strip(relation)||"
"||strip(character_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string= "if "|| strip(varname)||" "||strip(relation)||"
"||strip(character_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else if RELATION in ("=") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^first.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = "AND "||strip(varname) ||" IS ONE OF:
"||character_value;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = "if "|| strip(varname) ||" IS ONE OF:
"||character_value;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^first.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^first.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^missing(varname) then origvar = varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   oldnode=node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if NUMERIC_VALUE ne . then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^MISSING(string) then string= strip(string)||" AND "||
strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   else string= " if "|| strip(varname)||"
"||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^MISSING(string) then string= strip(string)||" AND "||
strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   else string= " if "|| strip(varname)||"
"||strip(relation)||" "||strip(character_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else if RELATION in ("=") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = strip(string)||", "||strip(character_value);
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   else if RELATION in ("ISMISSING") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^missing(varname) then origvar = varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   oldnode=node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if last.varname then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if RELATION in ("ISMISSING") then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^first.varname then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   string = strip(string) || " or MISSING";
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put string;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^missing(varname) then origvar = varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   oldnode=node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   if last.node then do;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put "then ";
MPRINT(EM_TREE_MAKEENGLISHRULES):   put " Tree Node Identifier   = " node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put " Number of Observations = " NPRIORS;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put " Predicted: Attrition_Flag=1 = " P_Attrition_Flag1;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put " Predicted: Attrition_Flag=0 = " P_Attrition_Flag0;
MPRINT(EM_TREE_MAKEENGLISHRULES):   put " ";
MPRINT(EM_TREE_MAKEENGLISHRULES):   if ^missing(varname) then origvar = varname;
MPRINT(EM_TREE_MAKEENGLISHRULES):   oldnode=node;
MPRINT(EM_TREE_MAKEENGLISHRULES):   end;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      218:176   228:190   374:191   381:195
NOTE: The file X is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=09Apr2022:15:11:07,
      Create Time=09Apr2022:15:11:07
 
NOTE: 1690 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 131.
NOTE: There were 907 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEENGLISHRULES):   proc datasets lib=work nolist;
MPRINT(EM_TREE_MAKEENGLISHRULES):   delete tempoutpath outnodes;
MPRINT(EM_TREE_MAKEENGLISHRULES):   run;
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
MPRINT(EM_TREE_TRAIN):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "ENGLISHRULES";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "SOURCE";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "ENGLISHRULES";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.82134052497397;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_TREE_TRAIN):  ;
MPRINT(EM_TREE_TRAIN):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Tree3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218781
218782     *------------------------------------------------------------*;
218783     * End TRAIN: Tree3;
218784     *------------------------------------------------------------*;
 
218785     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
218786     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
218787     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218788     ;
MPRINT(EM_DIAGRAM):   ;
218789     ;
MPRINT(EM_DIAGRAM):   ;
218790     ;
MPRINT(EM_DIAGRAM):   ;
218791     ;
MPRINT(EM_DIAGRAM):   ;
218792     quit;
MPRINT(EM_DIAGRAM):   quit;
218793     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218794     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
218795     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218796     /*; *"; *'; */
218797     ;
MPRINT(EM_DIAGRAM):   ;
218798     run;
MPRINT(EM_DIAGRAM):   run;
218799     quit;
MPRINT(EM_DIAGRAM):   quit;
218800     /* Reset EM Options */
218801     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
218802     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
218803     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
218804     proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
218805     by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
218806     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:07" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 09, 2022
Time:                15:11:07
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0T2PYUW "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0T2PYUW new;
MPRINT(EM_DIAGRAM):   run;
218908     %let EMEXCEPTIONSTRING=;
218909     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
218910     * SCORE: Tree3;
MPRINT(EM_DIAGRAM):   * SCORE: Tree3;
218911     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218912     %let EM_ACTION = SCORE;
218913     %let syscc = 0;
218914     %macro main;
218915
218916       %if %upcase(&EM_ACTION) = CREATE %then %do;
218917         filename temp catalog 'sashelp.emmodl.tree_create.source';
218918         %include temp;
218919         filename temp;
218920
218921         %em_tree_create;
218922       %end;
218923
218924        %else
218925        %if %upcase(&EM_ACTION) = TRAIN %then %do;
218926
218927            filename temp catalog 'sashelp.emmodl.tree_train.source';
218928            %include temp;
218929            filename temp;
218930            %em_tree_train;
218931        %end;
218932
218933       %else
218934       %if %upcase(&EM_ACTION) = SCORE %then %do;
218935         filename temp catalog 'sashelp.emmodl.tree_score.source';
218936         %include temp;
218937         filename temp;
218938
218939         %em_tree_score;
218940
218941       %end;
218942
218943       %else
218944       %if %upcase(&EM_ACTION) = REPORT %then %do;
218945
218946            filename temp catalog 'sashelp.emmodl.tree_report.source';
218947            %include temp;
218948            filename temp;
218949
218950            %em_tree_report;
218951        %end;
218952
218953       %else
218954       %if %upcase(&EM_ACTION) = OPENINT %then %do;
218955
218956            filename temp catalog 'sashelp.emmodl.tree_actions.source';
218957            %include temp;
218958            filename temp;
218959            %EM_TREE_OPENTREEVIEWER;
218960
218961        %end;
218962
218963       %else
218964       %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
218965
218966            filename temp catalog 'sashelp.emmodl.tree_actions.source';
218967            %include temp;
218968            filename temp;
218969            %EM_TREE_CLOSETREEVIEWER;
218970
218971        %end;
218972
218973
218974        %doendm:
218975     %mend main;
218976
218977     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
218979    +%macro em_tree_score;
218981    +   /* determine if multiple targets will be processed */
218982    +   %let em_tree_multipleTargets=N;
218983    +   %let em_tree_numTarget=1;
218984    +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
218985    +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
218986    +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
218987    +         %let em_tree_multipleTargets=N;
218988    +      %end;
218989    +      %else %do;
218990    +         /* create macro array of targets  */
218991    +         data _null_;
218992    +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
218993    +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
218994    +           if eof then
218995    +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
218996    +        run;
218998    +        %if &em_tree_numTarget gt 1 %then %do;
218999    +           %let em_tree_multipleTargets=Y;
219000    +        %end;
219001    +      %end;
219002    +   %end;
219004    +   /* build flow and publish scoring code */
219005    +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
219006    +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
219008    +   filename treeflow "&EM_USER_TREEFLOW";
219009    +   filename treepub "&EM_USER_TREEPUBLISH";
219011    +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
219012    +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
219014    +   %em_copyfile(infref=treeflow, outfref=flowref);
219015    +   %em_copyfile(infref=treepub, outfref=pubref);
219017    +   filename treeflow;
219018    +   filename treepub;
219020    +   /* if priors are used, add code to generate unadjusted residuals in export */
219021    +   %let useAdjPriors = N;
219022    +   data _null_;
219023    +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
219024    +     if USE="Y" then call symput('useAdjPriors', 'Y');
219025    +   run;
219026    +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
219027    +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
219028    +      %include temp;
219029    +      filename temp;
219031    +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
219032    +      filename adjref "&EM_USER_adjResidualCode";
219033    +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
219035    +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
219037    +      filename adjref;
219038    +   %end;
219040    +   /* LEAF */
219041    +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
219042    +      data _null_;
219043    +        file flowref mod;
219044    +        put 'drop _LEAF_;';
219045    +      run;
219047    +      data _null_;
219048    +        file pubref mod;
219049    +        put 'drop _LEAF_;';
219050    +      run;
219052    +   %end;
219054    +   filename flowref;
219055    +   filename pubref;
219057    +   /* em_metachange code */
219058    +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
219059    +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
219060    +   %end;
219062    +   /* variable selection based on importance stat    */
219063    +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
219064    +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
219065    +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
219066    +     %let varnum = %sysfunc(varnum(&dsid, NAME));
219067    +     %let obs = %sysfunc(fetch(&dsid));
219068    +     %do %while(&obs=0);
219069    +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
219070    +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
219071    +       %EM_METACHANGE(name=&varname, role=REJECTED);
219072    +       %let obs = %sysfunc(fetch(&dsid));
219073    +     %end;
219074    +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
219075    +   %end;
219077    +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
219078    +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
219079    +    %let tree_pred_vars = ;
219080    +    %let tree_pred_lvl =;
219081    +    %let numpred= 0;
219083    +    data _null_;
219084    +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
219085    +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
219086    +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
219087    +     if eof then
219088    +       call symput('numpred', strip(put(_N_, BEST.)));
219089    +    run;
219090    +   %end;
219092    +   %if &numpred ne 0 %then %do;
219093    +    %do i=1 %to &numpred;
219094    +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
219095    +      %EM_METACHANGE(name=&qpred, role=ASSESS);
219096    +    %end;
219097    +   %end;
219099    +   /* determine if multiple targets will be processed */
219100    +   %let em_tree_multipleTargets=N;
219101    +   %let em_tree_numTarget=1;
219102    +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
219103    +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
219104    +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
219105    +         %let em_tree_multipleTargets=N;
219106    +      %end;
219107    +      %else %do;
219108    +        data _null_;
219109    +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
219110    +          if eof then
219111    +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
219112    +        run;
219114    +        %if &em_tree_numTarget gt 1 %then %do;
219115    +           %let em_tree_multipleTargets=Y;
219116    +        %end;
219117    +     %end;
219118    +   %end;
219120    +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
219121    +   %if "&em_tree_multipleTargets" eq "N" %then %do;
219123    +      /* variable importance */
219124    +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
219125    +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
219127    +         %let validexist=0;
219128    +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
219129    +           %let validexist=1;
219130    +         %end;
219132    +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
219133    +         /* and the columns may not be generated                                                                                 */
219134    +         %let em_tree_cvexists=;
219135    +         %let em_tree_surrexists=.;
219136    +         data _null_;
219137    +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
219138    +            if eof then do ;
219139    +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
219140    +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
219141    +            end;
219142    +         run;
219144    +         data &EM_USER_OUTIMPORT;
219145    +            set &EM_USER_OUTIMPORT;
219147    +            /* format columns based on Precison value specified */
219148    +            format importance 15.&EM_PROPERTY_PRECISION
219149    +                 %if &validexist %then %do;
219150    +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
219151    +                 %end;
219152    +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
219153    +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
219154    +                 %end;
219155    +            ;
219156    +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
219157    +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
219158    +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
219159    +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
219160    +                 %if "&em_tree_surrexists" ne "" %then %do;
219161    +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
219162    +                 %end;
219163    +                 %if &validexist %then %do;
219164    +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
219165    +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
219166    +                 %end;
219167    +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
219168    +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
219169    +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
219170    +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
219171    +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
219172    +                 %end;
219173    +            ;
219174    +         run;
219176    +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
219177    +      %end;
219178    +   %end;
219180    +   %doendm:
219181    +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file FLOWREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Apr2022:15:11:07,
      Create Time=09Apr2022:15:11:07
 
NOTE: 1977 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 74.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file PUBREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Apr2022:15:11:07,
      Create Time=09Apr2022:15:11:07
 
NOTE: 1955 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 74.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;
 
NOTE: The file FLOWREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=88387,
      Last Modified=09Apr2022:15:11:07,
      Create Time=09Apr2022:15:11:07
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;
 
NOTE: The file PUBREF is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=87603,
      Last Modified=09Apr2022:15:11:07,
      Create Time=09Apr2022:15:11:07
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("G_Contacts_Count_12_mon         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("G_Months_Inactive_12_mon        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Attrition_Flag1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Attrition_Flag0");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree3_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE3_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_SCORE):   data EMWS1.Tree3_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree3_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 11 observations read from the data set EMWS1.TREE3_OUTIMPORT.
NOTE: The data set EMWS1.TREE3_OUTIMPORT has 11 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.08777092727263;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
219182
219183     *------------------------------------------------------------*;
219184     * End SCORE: Tree3;
219185     *------------------------------------------------------------*;
 
219186     proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
219187     by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
219188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219189     filename x "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\CDELTA_TRAIN.sas";
219190     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
219191     file x;
MPRINT(EM_DIAGRAM):   file x;
219192     put 'if upcase(NAME) = "G_CONTACTS_COUNT_12_MON" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "G_CONTACTS_COUNT_12_MON" then do;';
219193     put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
219194     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
219195     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
219196     put 'if upcase(NAME) = "G_MONTHS_INACTIVE_12_MON" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "G_MONTHS_INACTIVE_12_MON" then do;';
219197     put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
219198     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
219199     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
219200     put 'if upcase(NAME) = "Q_ATTRITION_FLAG0" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_ATTRITION_FLAG0" then do;';
219201     put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
219202     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
219203     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
219204     put 'if upcase(NAME) = "Q_ATTRITION_FLAG1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_ATTRITION_FLAG1" then do;';
219205     put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
219206     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
219207     put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
219208     put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
219209     put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
219210     put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
219211     put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
219212     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file X is:
      Filename=D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=09Apr2022:15:11:07,
      Create Time=29Mar2022:21:42:23
 
NOTE: 20 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219213     filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
219214     filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
219215     *------------------------------------------------------------*;
219216     * Tree3: Scoring DATA data;
219217     *------------------------------------------------------------*;
219218     data EMWS1.Tree3_TRAIN
219219     / view=EMWS1.Tree3_TRAIN
219220     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_TRAIN / view=EMWS1.Tree3_TRAIN ;
219221     set EMWS1.Part2_TRAIN
219222     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN ;
219223     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas.
219224    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
219225    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
219226    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
219227    +
219228    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
219229    +LENGTH F_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH F_Attrition_Flag $ 17;
219230    +LENGTH I_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH I_Attrition_Flag $ 17;
219231    +LENGTH U_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH U_Attrition_Flag $ 17;
219232    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
219233    +
219234    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
219235    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
219236    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
219237    +label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
219238    +label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
219239    +label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
219240    +label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
219241    +label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
219242    +label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
219243    +label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
219244    +label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
219245    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
219246    +label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
219247    +label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
219248    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
219249    +
219250    +
219251    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
219252    +LENGTH _ARBFMT_17 $     17; DROP _ARBFMT_17;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_17 $ 17;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_17;
219253    +_ARBFMT_17 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = ' ';
219254    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
219255    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
219256    +
219257    +
219258    +_ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
219259    + %DMNORMCP( _ARBFMT_17, F_Attrition_Flag );
MPRINT(DMNORMCP):   F_Attrition_Flag=dmnorm(_ARBFMT_17,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219260    +
219261    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
219262    +IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219263    +  RANGE_LOG_Total_Trans_Amt  <     0.03868641322523 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03868641322523 THEN DO;
219264    +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
219265    +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
219266    +  P_Attrition_Flag0  =     0.09649122807017;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09649122807017;
219267    +  P_Attrition_Flag1  =     0.90350877192982;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.90350877192982;
219268    +  Q_Attrition_Flag0  =     0.09649122807017;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09649122807017;
219269    +  Q_Attrition_Flag1  =     0.90350877192982;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.90350877192982;
219270    +  V_Attrition_Flag0  =     0.16129032258064;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.16129032258064;
219271    +  V_Attrition_Flag1  =     0.83870967741935;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.83870967741935;
219272    +  I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219273    +  U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219274    +  END;
MPRINT(EM_DIAGRAM):   END;
219275    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219276    +      0.03868641322523 <= RANGE_LOG_Total_Trans_Amt  AND
219277    +  RANGE_LOG_Total_Trans_Amt  <     0.10171724739083 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.03868641322523 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.10171724739083 THEN DO;
219278    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219279    +    RANGE_Total_Revolving_Bal  <      0.2119586809694 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.2119586809694 THEN DO;
219280    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219281    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.35308417471738 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.35308417471738 THEN DO;
219282    +      _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
219283    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
219284    +      P_Attrition_Flag0  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.06060606060606;
219285    +      P_Attrition_Flag1  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.93939393939393;
219286    +      Q_Attrition_Flag0  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.06060606060606;
219287    +      Q_Attrition_Flag1  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.93939393939393;
219288    +      V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
219289    +      V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
219290    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219291    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219292    +      END;
MPRINT(EM_DIAGRAM):   END;
219293    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219294    +          0.40292534213823 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219295    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4402808888078 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.40292534213823 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4402808888078 THEN DO;
219296    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219297    +            0.07441989599977 <= RANGE_LOG_Total_Trans_Amt  AND
219298    +        RANGE_LOG_Total_Trans_Amt  <     0.09331394044198 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.07441989599977 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.09331394044198 THEN DO;
219299    +        _NODE_  =                  139;
MPRINT(EM_DIAGRAM):   _NODE_ = 139;
219300    +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
219301    +        P_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.57142857142857;
219302    +        P_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.42857142857142;
219303    +        Q_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.57142857142857;
219304    +        Q_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.42857142857142;
219305    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
219306    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
219307    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219308    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219309    +        END;
MPRINT(EM_DIAGRAM):   END;
219310    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219311    +            0.09331394044198 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.09331394044198 <= RANGE_LOG_Total_Trans_Amt THEN DO;
219312    +        _NODE_  =                  140;
MPRINT(EM_DIAGRAM):   _NODE_ = 140;
219313    +        _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
219314    +        P_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.16666666666666;
219315    +        P_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.83333333333333;
219316    +        Q_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.16666666666666;
219317    +        Q_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.83333333333333;
219318    +        V_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.25;
219319    +        V_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.75;
219320    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219321    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219322    +        END;
MPRINT(EM_DIAGRAM):   END;
219323    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219324    +        _NODE_  =                  138;
MPRINT(EM_DIAGRAM):   _NODE_ = 138;
219325    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
219326    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219327    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219328    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219329    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219330    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219331    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219332    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219333    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219334    +        END;
MPRINT(EM_DIAGRAM):   END;
219335    +      END;
MPRINT(EM_DIAGRAM):   END;
219336    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219337    +           0.4402808888078 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219338    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49116234999183 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.4402808888078 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49116234999183 THEN DO;
219339    +      _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
219340    +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
219341    +      P_Attrition_Flag0  =     0.92682926829268;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.92682926829268;
219342    +      P_Attrition_Flag1  =     0.07317073170731;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.07317073170731;
219343    +      Q_Attrition_Flag0  =     0.92682926829268;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.92682926829268;
219344    +      Q_Attrition_Flag1  =     0.07317073170731;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.07317073170731;
219345    +      V_Attrition_Flag0  =      0.8095238095238;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8095238095238;
219346    +      V_Attrition_Flag1  =     0.19047619047619;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.19047619047619;
219347    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219348    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219349    +      END;
MPRINT(EM_DIAGRAM):   END;
219350    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219351    +          0.49116234999183 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219352    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <       0.557550219255 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49116234999183 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.557550219255 THEN DO;
219353    +      _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
219354    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
219355    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
219356    +        _NODE_  =                  143;
MPRINT(EM_DIAGRAM):   _NODE_ = 143;
219357    +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
219358    +        P_Attrition_Flag0  =                  0.1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.1;
219359    +        P_Attrition_Flag1  =                  0.9;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9;
219360    +        Q_Attrition_Flag0  =                  0.1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.1;
219361    +        Q_Attrition_Flag1  =                  0.9;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9;
219362    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219363    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219364    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219365    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219366    +        END;
MPRINT(EM_DIAGRAM):   END;
219367    +      ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
219368    +        IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
219369    +              0.46047296215175 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.46047296215175 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
219370    +          _NODE_  =                  298;
MPRINT(EM_DIAGRAM):   _NODE_ = 298;
219371    +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
219372    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219373    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219374    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219375    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219376    +          V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
219377    +          V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
219378    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219379    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219380    +          END;
MPRINT(EM_DIAGRAM):   END;
219381    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219382    +          _NODE_  =                  297;
MPRINT(EM_DIAGRAM):   _NODE_ = 297;
219383    +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
219384    +          P_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.3;
219385    +          P_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7;
219386    +          Q_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.3;
219387    +          Q_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7;
219388    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219389    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219390    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219391    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219392    +          END;
MPRINT(EM_DIAGRAM):   END;
219393    +        END;
MPRINT(EM_DIAGRAM):   END;
219394    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219395    +        _NODE_  =                  145;
MPRINT(EM_DIAGRAM):   _NODE_ = 145;
219396    +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
219397    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
219398    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
219399    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
219400    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
219401    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219402    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219403    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219404    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219405    +        END;
MPRINT(EM_DIAGRAM):   END;
219406    +      END;
MPRINT(EM_DIAGRAM):   END;
219407    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219408    +            0.557550219255 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.557550219255 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
219409    +      _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
219410    +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
219411    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219412    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219413    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219414    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219415    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219416    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219417    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219418    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219419    +      END;
MPRINT(EM_DIAGRAM):   END;
219420    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219421    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219422    +        RANGE_LOG_Total_Trans_Amt  <     0.05631631675079 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.05631631675079 THEN DO;
219423    +        _NODE_  =                  132;
MPRINT(EM_DIAGRAM):   _NODE_ = 132;
219424    +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
219425    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219426    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219427    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219428    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219429    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219430    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219431    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219432    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219433    +        END;
MPRINT(EM_DIAGRAM):   END;
219434    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219435    +            0.05631631675079 <= RANGE_LOG_Total_Trans_Amt  AND
219436    +        RANGE_LOG_Total_Trans_Amt  <     0.06681486255192 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.05631631675079 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.06681486255192 THEN DO;
219437    +        _NODE_  =                  133;
MPRINT(EM_DIAGRAM):   _NODE_ = 133;
219438    +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
219439    +        P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
219440    +        P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
219441    +        Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
219442    +        Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
219443    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219444    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219445    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219446    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219447    +        END;
MPRINT(EM_DIAGRAM):   END;
219448    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219449    +            0.08042955729796 <= RANGE_LOG_Total_Trans_Amt  AND
219450    +        RANGE_LOG_Total_Trans_Amt  <     0.08898235450693 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08042955729796 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.08898235450693 THEN DO;
219451    +        _NODE_  =                  135;
MPRINT(EM_DIAGRAM):   _NODE_ = 135;
219452    +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
219453    +        P_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.11111111111111;
219454    +        P_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.88888888888888;
219455    +        Q_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.11111111111111;
219456    +        Q_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.88888888888888;
219457    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
219458    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
219459    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219460    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219461    +        END;
MPRINT(EM_DIAGRAM):   END;
219462    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219463    +            0.08898235450693 <= RANGE_LOG_Total_Trans_Amt  AND
219464    +        RANGE_LOG_Total_Trans_Amt  <     0.09350307119369 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08898235450693 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.09350307119369 THEN DO;
219465    +        _NODE_  =                  136;
MPRINT(EM_DIAGRAM):   _NODE_ = 136;
219466    +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
219467    +        P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
219468    +        P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
219469    +        Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
219470    +        Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
219471    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219472    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219473    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219474    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219475    +        END;
MPRINT(EM_DIAGRAM):   END;
219476    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219477    +            0.09350307119369 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.09350307119369 <= RANGE_LOG_Total_Trans_Amt THEN DO;
219478    +        _NODE_  =                  137;
MPRINT(EM_DIAGRAM):   _NODE_ = 137;
219479    +        _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
219480    +        P_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.11111111111111;
219481    +        P_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.88888888888888;
219482    +        Q_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.11111111111111;
219483    +        Q_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.88888888888888;
219484    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219485    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219486    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219487    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219488    +        END;
MPRINT(EM_DIAGRAM):   END;
219489    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219490    +        _ARBFMT_12 = PUT( G_Months_on_book , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_on_book , BEST12.);
219491    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
219492    +        IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
219493    +          _NODE_  =                  291;
MPRINT(EM_DIAGRAM):   _NODE_ = 291;
219494    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
219495    +          P_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.14285714285714;
219496    +          P_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.85714285714285;
219497    +          Q_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.14285714285714;
219498    +          Q_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.85714285714285;
219499    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219500    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219501    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219502    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219503    +          END;
MPRINT(EM_DIAGRAM):   END;
219504    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219505    +          _NODE_  =                  292;
MPRINT(EM_DIAGRAM):   _NODE_ = 292;
219506    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
219507    +          P_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.71428571428571;
219508    +          P_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.28571428571428;
219509    +          Q_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.71428571428571;
219510    +          Q_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.28571428571428;
219511    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219512    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219513    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219514    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219515    +          END;
MPRINT(EM_DIAGRAM):   END;
219516    +        END;
MPRINT(EM_DIAGRAM):   END;
219517    +      END;
MPRINT(EM_DIAGRAM):   END;
219518    +    END;
MPRINT(EM_DIAGRAM):   END;
219519    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219520    +         0.2119586809694 <= RANGE_Total_Revolving_Bal  AND
219521    +    RANGE_Total_Revolving_Bal  <      0.4487485101311 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.2119586809694 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.4487485101311 THEN DO;
219522    +    _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
219523    +    _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
219524    +    P_Attrition_Flag0  =     0.88554216867469;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88554216867469;
219525    +    P_Attrition_Flag1  =      0.1144578313253;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1144578313253;
219526    +    Q_Attrition_Flag0  =     0.88554216867469;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88554216867469;
219527    +    Q_Attrition_Flag1  =      0.1144578313253;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.1144578313253;
219528    +    V_Attrition_Flag0  =     0.94545454545454;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.94545454545454;
219529    +    V_Attrition_Flag1  =     0.05454545454545;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.05454545454545;
219530    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219531    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219532    +    END;
MPRINT(EM_DIAGRAM):   END;
219533    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219534    +        0.70421136273341 <= RANGE_Total_Revolving_Bal  AND
219535    +    RANGE_Total_Revolving_Bal  <     0.81664680174811 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.70421136273341 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.81664680174811 THEN DO;
219536    +    _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
219537    +    _LEAF_  =                   27;
MPRINT(EM_DIAGRAM):   _LEAF_ = 27;
219538    +    P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219539    +    P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219540    +    Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219541    +    Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219542    +    V_Attrition_Flag0  =                0.975;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.975;
219543    +    V_Attrition_Flag1  =                0.025;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.025;
219544    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219545    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219546    +    END;
MPRINT(EM_DIAGRAM):   END;
219547    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219548    +        0.81664680174811 <= RANGE_Total_Revolving_Bal  AND
219549    +    RANGE_Total_Revolving_Bal  <      0.9487485101311 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.81664680174811 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.9487485101311 THEN DO;
219550    +    _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
219551    +    _LEAF_  =                   28;
MPRINT(EM_DIAGRAM):   _LEAF_ = 28;
219552    +    P_Attrition_Flag0  =                 0.97;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97;
219553    +    P_Attrition_Flag1  =                 0.03;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.03;
219554    +    Q_Attrition_Flag0  =                 0.97;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97;
219555    +    Q_Attrition_Flag1  =                 0.03;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.03;
219556    +    V_Attrition_Flag0  =     0.97297297297297;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97297297297297;
219557    +    V_Attrition_Flag1  =     0.02702702702702;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02702702702702;
219558    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219559    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219560    +    END;
MPRINT(EM_DIAGRAM):   END;
219561    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219562    +         0.9487485101311 <= RANGE_Total_Revolving_Bal  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.9487485101311 <= RANGE_Total_Revolving_Bal THEN DO;
219563    +    _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
219564    +    _LEAF_  =                   29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 29;
219565    +    P_Attrition_Flag0  =      0.8090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8090909090909;
219566    +    P_Attrition_Flag1  =     0.19090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.19090909090909;
219567    +    Q_Attrition_Flag0  =      0.8090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8090909090909;
219568    +    Q_Attrition_Flag1  =     0.19090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.19090909090909;
219569    +    V_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.875;
219570    +    V_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.125;
219571    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219572    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219573    +    END;
MPRINT(EM_DIAGRAM):   END;
219574    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219575    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
219576    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.26609968837987 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.26609968837987 THEN DO;
219577    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219578    +            0.38536068026685 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.38536068026685 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
219579    +        _NODE_  =                  154;
MPRINT(EM_DIAGRAM):   _NODE_ = 154;
219580    +        _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
219581    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219582    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219583    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219584    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219585    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219586    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219587    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219588    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219589    +        END;
MPRINT(EM_DIAGRAM):   END;
219590    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219591    +        _NODE_  =                  153;
MPRINT(EM_DIAGRAM):   _NODE_ = 153;
219592    +        _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
219593    +        P_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.375;
219594    +        P_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.625;
219595    +        Q_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.375;
219596    +        Q_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.625;
219597    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
219598    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
219599    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219600    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219601    +        END;
MPRINT(EM_DIAGRAM):   END;
219602    +      END;
MPRINT(EM_DIAGRAM):   END;
219603    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
219604    +          0.26609968837987 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
219605    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.29648254109501 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.26609968837987 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.29648254109501 THEN DO;
219606    +      _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
219607    +      _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
219608    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219609    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219610    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219611    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219612    +      V_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.83333333333333;
219613    +      V_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.16666666666666;
219614    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219615    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219616    +      END;
MPRINT(EM_DIAGRAM):   END;
219617    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
219618    +          0.29648254109501 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
219619    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.30763852920187 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.29648254109501 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.30763852920187 THEN DO;
219620    +      _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
219621    +      _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
219622    +      P_Attrition_Flag0  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.77777777777777;
219623    +      P_Attrition_Flag1  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.22222222222222;
219624    +      Q_Attrition_Flag0  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.77777777777777;
219625    +      Q_Attrition_Flag1  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.22222222222222;
219626    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219627    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219628    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219629    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219630    +      END;
MPRINT(EM_DIAGRAM):   END;
219631    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
219632    +          0.30763852920187 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
219633    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.33548019013549 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.30763852920187 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.33548019013549 THEN DO;
219634    +      _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
219635    +      _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
219636    +      P_Attrition_Flag0  =                0.925;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.925;
219637    +      P_Attrition_Flag1  =                0.075;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.075;
219638    +      Q_Attrition_Flag0  =                0.925;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.925;
219639    +      Q_Attrition_Flag1  =                0.075;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.075;
219640    +      V_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.85714285714285;
219641    +      V_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.14285714285714;
219642    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219643    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219644    +      END;
MPRINT(EM_DIAGRAM):   END;
219645    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
219646    +          0.33548019013549 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
219647    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.37597459920657 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.33548019013549 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.37597459920657 THEN DO;
219648    +      _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
219649    +      _LEAF_  =                   25;
MPRINT(EM_DIAGRAM):   _LEAF_ = 25;
219650    +      P_Attrition_Flag0  =     0.98630136986301;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98630136986301;
219651    +      P_Attrition_Flag1  =     0.01369863013698;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01369863013698;
219652    +      Q_Attrition_Flag0  =     0.98630136986301;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98630136986301;
219653    +      Q_Attrition_Flag1  =     0.01369863013698;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01369863013698;
219654    +      V_Attrition_Flag0  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.94444444444444;
219655    +      V_Attrition_Flag1  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.05555555555555;
219656    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219657    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219658    +      END;
MPRINT(EM_DIAGRAM):   END;
219659    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219660    +      _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
219661    +      _LEAF_  =                   26;
MPRINT(EM_DIAGRAM):   _LEAF_ = 26;
219662    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219663    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219664    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219665    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219666    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219667    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219668    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219669    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219670    +      END;
MPRINT(EM_DIAGRAM):   END;
219671    +    END;
MPRINT(EM_DIAGRAM):   END;
219672    +  END;
MPRINT(EM_DIAGRAM):   END;
219673    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
219674    +      0.10171724739083 <= RANGE_LOG_Total_Trans_Amt  AND
219675    +  RANGE_LOG_Total_Trans_Amt  <     0.18180873549344 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.10171724739083 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.18180873549344 THEN DO;
219676    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219677    +    RANGE_Total_Revolving_Bal  <     0.05542312276519 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.05542312276519 THEN DO;
219678    +    _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
219679    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
219680    +    IF _ARBFMT_12 IN ('7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('7' ) THEN DO;
219681    +      _NODE_  =                   65;
MPRINT(EM_DIAGRAM):   _NODE_ = 65;
219682    +      _LEAF_  =                   30;
MPRINT(EM_DIAGRAM):   _LEAF_ = 30;
219683    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219684    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219685    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219686    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219687    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219688    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219689    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219690    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219691    +      END;
MPRINT(EM_DIAGRAM):   END;
219692    +    ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
219693    +      _NODE_  =                   66;
MPRINT(EM_DIAGRAM):   _NODE_ = 66;
219694    +      _LEAF_  =                   31;
MPRINT(EM_DIAGRAM):   _LEAF_ = 31;
219695    +      P_Attrition_Flag0  =     0.93023255813953;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93023255813953;
219696    +      P_Attrition_Flag1  =     0.06976744186046;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06976744186046;
219697    +      Q_Attrition_Flag0  =     0.93023255813953;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93023255813953;
219698    +      Q_Attrition_Flag1  =     0.06976744186046;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06976744186046;
219699    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
219700    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
219701    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219702    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219703    +      END;
MPRINT(EM_DIAGRAM):   END;
219704    +    ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
219705    +      _NODE_  =                   67;
MPRINT(EM_DIAGRAM):   _NODE_ = 67;
219706    +      _LEAF_  =                   32;
MPRINT(EM_DIAGRAM):   _LEAF_ = 32;
219707    +      P_Attrition_Flag0  =             0.296875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.296875;
219708    +      P_Attrition_Flag1  =             0.703125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.703125;
219709    +      Q_Attrition_Flag0  =             0.296875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.296875;
219710    +      Q_Attrition_Flag1  =             0.703125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.703125;
219711    +      V_Attrition_Flag0  =     0.27777777777777;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.27777777777777;
219712    +      V_Attrition_Flag1  =     0.72222222222222;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.72222222222222;
219713    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219714    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219715    +      END;
MPRINT(EM_DIAGRAM):   END;
219716    +    ELSE IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
219717    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219718    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.39237639480992 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.39237639480992 THEN DO;
219719    +        _NODE_  =                  178;
MPRINT(EM_DIAGRAM):   _NODE_ = 178;
219720    +        _LEAF_  =                   33;
MPRINT(EM_DIAGRAM):   _LEAF_ = 33;
219721    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
219722    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
219723    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
219724    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
219725    +        V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
219726    +        V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
219727    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219728    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219729    +        END;
MPRINT(EM_DIAGRAM):   END;
219730    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219731    +            0.39237639480992 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219732    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.40656129467709 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.39237639480992 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.40656129467709 THEN DO;
219733    +        _NODE_  =                  179;
MPRINT(EM_DIAGRAM):   _NODE_ = 179;
219734    +        _LEAF_  =                   34;
MPRINT(EM_DIAGRAM):   _LEAF_ = 34;
219735    +        P_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.3;
219736    +        P_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7;
219737    +        Q_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.3;
219738    +        Q_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7;
219739    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219740    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219741    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219742    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219743    +        END;
MPRINT(EM_DIAGRAM):   END;
219744    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219745    +            0.45539942631941 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219746    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4679918630084 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.45539942631941 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4679918630084 THEN DO;
219747    +        _NODE_  =                  181;
MPRINT(EM_DIAGRAM):   _NODE_ = 181;
219748    +        _LEAF_  =                   36;
MPRINT(EM_DIAGRAM):   _LEAF_ = 36;
219749    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
219750    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
219751    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
219752    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
219753    +        V_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.16666666666666;
219754    +        V_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.83333333333333;
219755    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219756    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219757    +        END;
MPRINT(EM_DIAGRAM):   END;
219758    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219759    +             0.4679918630084 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219760    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.52798824045043 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.4679918630084 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.52798824045043 THEN DO;
219761    +        _NODE_  =                  182;
MPRINT(EM_DIAGRAM):   _NODE_ = 182;
219762    +        _LEAF_  =                   37;
MPRINT(EM_DIAGRAM):   _LEAF_ = 37;
219763    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
219764    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
219765    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
219766    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
219767    +        V_Attrition_Flag0  =     0.31578947368421;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.31578947368421;
219768    +        V_Attrition_Flag1  =     0.68421052631578;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.68421052631578;
219769    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219770    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219771    +        END;
MPRINT(EM_DIAGRAM):   END;
219772    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219773    +            0.52798824045043 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.52798824045043 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
219774    +        _NODE_  =                  183;
MPRINT(EM_DIAGRAM):   _NODE_ = 183;
219775    +        _LEAF_  =                   38;
MPRINT(EM_DIAGRAM):   _LEAF_ = 38;
219776    +        P_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85714285714285;
219777    +        P_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14285714285714;
219778    +        Q_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85714285714285;
219779    +        Q_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14285714285714;
219780    +        V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
219781    +        V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
219782    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219783    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219784    +        END;
MPRINT(EM_DIAGRAM):   END;
219785    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219786    +        _NODE_  =                  180;
MPRINT(EM_DIAGRAM):   _NODE_ = 180;
219787    +        _LEAF_  =                   35;
MPRINT(EM_DIAGRAM):   _LEAF_ = 35;
219788    +        P_Attrition_Flag0  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.08333333333333;
219789    +        P_Attrition_Flag1  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.91666666666666;
219790    +        Q_Attrition_Flag0  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.08333333333333;
219791    +        Q_Attrition_Flag1  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.91666666666666;
219792    +        V_Attrition_Flag0  =      0.1578947368421;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.1578947368421;
219793    +        V_Attrition_Flag1  =     0.84210526315789;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.84210526315789;
219794    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219795    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219796    +        END;
MPRINT(EM_DIAGRAM):   END;
219797    +      END;
MPRINT(EM_DIAGRAM):   END;
219798    +    ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
219799    +      _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
219800    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
219801    +      IF _ARBFMT_12 IN ('5' ,'6' ,'7' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'7' ,'3' ) THEN DO;
219802    +        _NODE_  =                  190;
MPRINT(EM_DIAGRAM):   _NODE_ = 190;
219803    +        _LEAF_  =                   40;
MPRINT(EM_DIAGRAM):   _LEAF_ = 40;
219804    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
219805    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
219806    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
219807    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
219808    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219809    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219810    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219811    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219812    +        END;
MPRINT(EM_DIAGRAM):   END;
219813    +      ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
219814    +        _NODE_  =                  191;
MPRINT(EM_DIAGRAM):   _NODE_ = 191;
219815    +        _LEAF_  =                   41;
MPRINT(EM_DIAGRAM):   _LEAF_ = 41;
219816    +        P_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05263157894736;
219817    +        P_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94736842105263;
219818    +        Q_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05263157894736;
219819    +        Q_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94736842105263;
219820    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219821    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219822    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219823    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219824    +        END;
MPRINT(EM_DIAGRAM):   END;
219825    +      ELSE IF _ARBFMT_12 IN ('8' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('8' ) THEN DO;
219826    +        _NODE_  =                  192;
MPRINT(EM_DIAGRAM):   _NODE_ = 192;
219827    +        _LEAF_  =                   42;
MPRINT(EM_DIAGRAM):   _LEAF_ = 42;
219828    +        P_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.57142857142857;
219829    +        P_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.42857142857142;
219830    +        Q_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.57142857142857;
219831    +        Q_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.42857142857142;
219832    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
219833    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
219834    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219835    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219836    +        END;
MPRINT(EM_DIAGRAM):   END;
219837    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219838    +        _NODE_  =                  193;
MPRINT(EM_DIAGRAM):   _NODE_ = 193;
219839    +        _LEAF_  =                   43;
MPRINT(EM_DIAGRAM):   _LEAF_ = 43;
219840    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
219841    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
219842    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
219843    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
219844    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219845    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219846    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219847    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219848    +        END;
MPRINT(EM_DIAGRAM):   END;
219849    +      END;
MPRINT(EM_DIAGRAM):   END;
219850    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219851    +      _NODE_  =                   69;
MPRINT(EM_DIAGRAM):   _NODE_ = 69;
219852    +      _LEAF_  =                   39;
MPRINT(EM_DIAGRAM):   _LEAF_ = 39;
219853    +      P_Attrition_Flag0  =     0.12781954887218;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.12781954887218;
219854    +      P_Attrition_Flag1  =     0.87218045112781;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.87218045112781;
219855    +      Q_Attrition_Flag0  =     0.12781954887218;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.12781954887218;
219856    +      Q_Attrition_Flag1  =     0.87218045112781;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.87218045112781;
219857    +      V_Attrition_Flag0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.17647058823529;
219858    +      V_Attrition_Flag1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8235294117647;
219859    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219860    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219861    +      END;
MPRINT(EM_DIAGRAM):   END;
219862    +    END;
MPRINT(EM_DIAGRAM):   END;
219863    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219864    +        0.05542312276519 <= RANGE_Total_Revolving_Bal  AND
219865    +    RANGE_Total_Revolving_Bal  <     0.17381803734604 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.05542312276519 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.17381803734604 THEN DO;
219866    +    _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
219867    +    _LEAF_  =                   44;
MPRINT(EM_DIAGRAM):   _LEAF_ = 44;
219868    +    P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
219869    +    P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
219870    +    Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
219871    +    Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
219872    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219873    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219874    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219875    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219876    +    END;
MPRINT(EM_DIAGRAM):   END;
219877    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219878    +        0.17381803734604 <= RANGE_Total_Revolving_Bal  AND
219879    +    RANGE_Total_Revolving_Bal  <     0.23182359952324 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.17381803734604 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.23182359952324 THEN DO;
219880    +    _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
219881    +    _LEAF_  =                   45;
MPRINT(EM_DIAGRAM):   _LEAF_ = 45;
219882    +    P_Attrition_Flag0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.23529411764705;
219883    +    P_Attrition_Flag1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.76470588235294;
219884    +    Q_Attrition_Flag0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.23529411764705;
219885    +    Q_Attrition_Flag1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.76470588235294;
219886    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219887    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219888    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219889    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219890    +    END;
MPRINT(EM_DIAGRAM):   END;
219891    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
219892    +        0.23182359952324 <= RANGE_Total_Revolving_Bal  AND
219893    +    RANGE_Total_Revolving_Bal  <     0.44378228049265 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.23182359952324 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.44378228049265 THEN DO;
219894    +    _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
219895    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
219896    +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
219897    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219898    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4326596741372 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4326596741372 THEN DO;
219899    +        _NODE_  =                  194;
MPRINT(EM_DIAGRAM):   _NODE_ = 194;
219900    +        _LEAF_  =                   46;
MPRINT(EM_DIAGRAM):   _LEAF_ = 46;
219901    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
219902    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
219903    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
219904    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
219905    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219906    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
219907    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219908    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219909    +        END;
MPRINT(EM_DIAGRAM):   END;
219910    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219911    +            0.49070999374543 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49070999374543 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
219912    +        _NODE_  =                  196;
MPRINT(EM_DIAGRAM):   _NODE_ = 196;
219913    +        _LEAF_  =                   48;
MPRINT(EM_DIAGRAM):   _LEAF_ = 48;
219914    +        P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
219915    +        P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
219916    +        Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
219917    +        Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
219918    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219919    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219920    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219921    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219922    +        END;
MPRINT(EM_DIAGRAM):   END;
219923    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219924    +        _NODE_  =                  195;
MPRINT(EM_DIAGRAM):   _NODE_ = 195;
219925    +        _LEAF_  =                   47;
MPRINT(EM_DIAGRAM):   _LEAF_ = 47;
219926    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
219927    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
219928    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
219929    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
219930    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
219931    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
219932    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219933    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219934    +        END;
MPRINT(EM_DIAGRAM):   END;
219935    +      END;
MPRINT(EM_DIAGRAM):   END;
219936    +    ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
219937    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219938    +            0.43708075565352 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219939    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.47032331248188 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.43708075565352 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.47032331248188 THEN DO;
219940    +        _NODE_  =                  198;
MPRINT(EM_DIAGRAM):   _NODE_ = 198;
219941    +        _LEAF_  =                   50;
MPRINT(EM_DIAGRAM):   _LEAF_ = 50;
219942    +        P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
219943    +        P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
219944    +        Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
219945    +        Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
219946    +        V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
219947    +        V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
219948    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219949    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219950    +        END;
MPRINT(EM_DIAGRAM):   END;
219951    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219952    +            0.47032331248188 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219953    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.48206386496214 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.47032331248188 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.48206386496214 THEN DO;
219954    +        _NODE_  =                  199;
MPRINT(EM_DIAGRAM):   _NODE_ = 199;
219955    +        _LEAF_  =                   51;
MPRINT(EM_DIAGRAM):   _LEAF_ = 51;
219956    +        P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
219957    +        P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
219958    +        Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
219959    +        Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
219960    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
219961    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219962    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
219963    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
219964    +        END;
MPRINT(EM_DIAGRAM):   END;
219965    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219966    +            0.48206386496214 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
219967    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51541574834001 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48206386496214 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51541574834001 THEN DO;
219968    +        _NODE_  =                  200;
MPRINT(EM_DIAGRAM):   _NODE_ = 200;
219969    +        _LEAF_  =                   52;
MPRINT(EM_DIAGRAM):   _LEAF_ = 52;
219970    +        P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
219971    +        P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
219972    +        Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
219973    +        Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
219974    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
219975    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
219976    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219977    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219978    +        END;
MPRINT(EM_DIAGRAM):   END;
219979    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
219980    +            0.51541574834001 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51541574834001 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
219981    +        _NODE_  =                  201;
MPRINT(EM_DIAGRAM):   _NODE_ = 201;
219982    +        _LEAF_  =                   53;
MPRINT(EM_DIAGRAM):   _LEAF_ = 53;
219983    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
219984    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
219985    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
219986    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
219987    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
219988    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
219989    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
219990    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
219991    +        END;
MPRINT(EM_DIAGRAM):   END;
219992    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219993    +        _NODE_  =                  197;
MPRINT(EM_DIAGRAM):   _NODE_ = 197;
219994    +        _LEAF_  =                   49;
MPRINT(EM_DIAGRAM):   _LEAF_ = 49;
219995    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
219996    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
219997    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
219998    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
219999    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220000    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220001    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220002    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220003    +        END;
MPRINT(EM_DIAGRAM):   END;
220004    +      END;
MPRINT(EM_DIAGRAM):   END;
220005    +    ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
220006    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220007    +        RANGE_LOG_Total_Trans_Amt  <     0.10973593714649 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.10973593714649 THEN DO;
220008    +        _NODE_  =                  202;
MPRINT(EM_DIAGRAM):   _NODE_ = 202;
220009    +        _LEAF_  =                   54;
MPRINT(EM_DIAGRAM):   _LEAF_ = 54;
220010    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220011    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220012    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220013    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220014    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
220015    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
220016    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220017    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220018    +        END;
MPRINT(EM_DIAGRAM):   END;
220019    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220020    +            0.12729564500095 <= RANGE_LOG_Total_Trans_Amt  AND
220021    +        RANGE_LOG_Total_Trans_Amt  <     0.14613124197535 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.12729564500095 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.14613124197535 THEN DO;
220022    +        _NODE_  =                  204;
MPRINT(EM_DIAGRAM):   _NODE_ = 204;
220023    +        _LEAF_  =                   56;
MPRINT(EM_DIAGRAM):   _LEAF_ = 56;
220024    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
220025    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
220026    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
220027    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
220028    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220029    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220030    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220031    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220032    +        END;
MPRINT(EM_DIAGRAM):   END;
220033    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220034    +            0.14613124197535 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.14613124197535 <= RANGE_LOG_Total_Trans_Amt THEN DO;
220035    +        _NODE_  =                  205;
MPRINT(EM_DIAGRAM):   _NODE_ = 205;
220036    +        _LEAF_  =                   57;
MPRINT(EM_DIAGRAM):   _LEAF_ = 57;
220037    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
220038    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
220039    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
220040    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
220041    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
220042    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
220043    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220044    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220045    +        END;
MPRINT(EM_DIAGRAM):   END;
220046    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220047    +        _NODE_  =                  203;
MPRINT(EM_DIAGRAM):   _NODE_ = 203;
220048    +        _LEAF_  =                   55;
MPRINT(EM_DIAGRAM):   _LEAF_ = 55;
220049    +        P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
220050    +        P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
220051    +        Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
220052    +        Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
220053    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
220054    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
220055    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220056    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220057    +        END;
MPRINT(EM_DIAGRAM):   END;
220058    +      END;
MPRINT(EM_DIAGRAM):   END;
220059    +    ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
220060    +      _NODE_  =                   78;
MPRINT(EM_DIAGRAM):   _NODE_ = 78;
220061    +      _LEAF_  =                   58;
MPRINT(EM_DIAGRAM):   _LEAF_ = 58;
220062    +      P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
220063    +      P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
220064    +      Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
220065    +      Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
220066    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
220067    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
220068    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220069    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220070    +      END;
MPRINT(EM_DIAGRAM):   END;
220071    +    ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
220072    +      _NODE_  =                   79;
MPRINT(EM_DIAGRAM):   _NODE_ = 79;
220073    +      _LEAF_  =                   59;
MPRINT(EM_DIAGRAM):   _LEAF_ = 59;
220074    +      P_Attrition_Flag0  =     0.96296296296296;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.96296296296296;
220075    +      P_Attrition_Flag1  =     0.03703703703703;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.03703703703703;
220076    +      Q_Attrition_Flag0  =     0.96296296296296;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.96296296296296;
220077    +      Q_Attrition_Flag1  =     0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.03703703703703;
220078    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
220079    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
220080    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220081    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220082    +      END;
MPRINT(EM_DIAGRAM):   END;
220083    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220084    +      _NODE_  =                   80;
MPRINT(EM_DIAGRAM):   _NODE_ = 80;
220085    +      _LEAF_  =                   60;
MPRINT(EM_DIAGRAM):   _LEAF_ = 60;
220086    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220087    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220088    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220089    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220090    +      V_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.71428571428571;
220091    +      V_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.28571428571428;
220092    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220093    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220094    +      END;
MPRINT(EM_DIAGRAM):   END;
220095    +    END;
MPRINT(EM_DIAGRAM):   END;
220096    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
220097    +        0.94616607071911 <= RANGE_Total_Revolving_Bal  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.94616607071911 <= RANGE_Total_Revolving_Bal THEN DO;
220098    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220099    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.41675012341901 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.41675012341901 THEN DO;
220100    +      _NODE_  =                   87;
MPRINT(EM_DIAGRAM):   _NODE_ = 87;
220101    +      _LEAF_  =                   81;
MPRINT(EM_DIAGRAM):   _LEAF_ = 81;
220102    +      P_Attrition_Flag0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.26923076923076;
220103    +      P_Attrition_Flag1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.73076923076923;
220104    +      Q_Attrition_Flag0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.26923076923076;
220105    +      Q_Attrition_Flag1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.73076923076923;
220106    +      V_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.11111111111111;
220107    +      V_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.88888888888888;
220108    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220109    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220110    +      END;
MPRINT(EM_DIAGRAM):   END;
220111    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220112    +          0.41675012341901 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220113    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.43201250224123 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.41675012341901 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.43201250224123 THEN DO;
220114    +      _NODE_  =                   88;
MPRINT(EM_DIAGRAM):   _NODE_ = 88;
220115    +      _LEAF_  =                   82;
MPRINT(EM_DIAGRAM):   _LEAF_ = 82;
220116    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
220117    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
220118    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
220119    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
220120    +      V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
220121    +      V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
220122    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220123    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220124    +      END;
MPRINT(EM_DIAGRAM):   END;
220125    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220126    +          0.43201250224123 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220127    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.45199138620858 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.43201250224123 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.45199138620858 THEN DO;
220128    +      _NODE_  =                   89;
MPRINT(EM_DIAGRAM):   _NODE_ = 89;
220129    +      _LEAF_  =                   83;
MPRINT(EM_DIAGRAM):   _LEAF_ = 83;
220130    +      P_Attrition_Flag0  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.30434782608695;
220131    +      P_Attrition_Flag1  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.69565217391304;
220132    +      Q_Attrition_Flag0  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.30434782608695;
220133    +      Q_Attrition_Flag1  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.69565217391304;
220134    +      V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
220135    +      V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
220136    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220137    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220138    +      END;
MPRINT(EM_DIAGRAM):   END;
220139    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220140    +          0.45199138620858 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220141    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.46277307645394 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.45199138620858 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.46277307645394 THEN DO;
220142    +      _NODE_  =                   90;
MPRINT(EM_DIAGRAM):   _NODE_ = 90;
220143    +      _LEAF_  =                   84;
MPRINT(EM_DIAGRAM):   _LEAF_ = 84;
220144    +      P_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09090909090909;
220145    +      P_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9090909090909;
220146    +      Q_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09090909090909;
220147    +      Q_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9090909090909;
220148    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220149    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220150    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220151    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220152    +      END;
MPRINT(EM_DIAGRAM):   END;
220153    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220154    +          0.54065639603327 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.54065639603327 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
220155    +      _NODE_  =                   92;
MPRINT(EM_DIAGRAM):   _NODE_ = 92;
220156    +      _LEAF_  =                   89;
MPRINT(EM_DIAGRAM):   _LEAF_ = 89;
220157    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220158    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220159    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220160    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220161    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220162    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220163    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220164    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220165    +      END;
MPRINT(EM_DIAGRAM):   END;
220166    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220167    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220168    +            0.13751080906898 <= RANGE_LOG_Total_Trans_Amt  AND
220169    +        RANGE_LOG_Total_Trans_Amt  <     0.15664697005632 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.13751080906898 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.15664697005632 THEN DO;
220170    +        _NODE_  =                  249;
MPRINT(EM_DIAGRAM):   _NODE_ = 249;
220171    +        _LEAF_  =                   86;
MPRINT(EM_DIAGRAM):   _LEAF_ = 86;
220172    +        P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
220173    +        P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
220174    +        Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
220175    +        Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
220176    +        V_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.2;
220177    +        V_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8;
220178    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220179    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220180    +        END;
MPRINT(EM_DIAGRAM):   END;
220181    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220182    +            0.15664697005632 <= RANGE_LOG_Total_Trans_Amt  AND
220183    +        RANGE_LOG_Total_Trans_Amt  <     0.16314894488569 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.15664697005632 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.16314894488569 THEN DO;
220184    +        _NODE_  =                  250;
MPRINT(EM_DIAGRAM):   _NODE_ = 250;
220185    +        _LEAF_  =                   87;
MPRINT(EM_DIAGRAM):   _LEAF_ = 87;
220186    +        P_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.22222222222222;
220187    +        P_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.77777777777777;
220188    +        Q_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.22222222222222;
220189    +        Q_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.77777777777777;
220190    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220191    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220192    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220193    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220194    +        END;
MPRINT(EM_DIAGRAM):   END;
220195    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220196    +            0.16314894488569 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.16314894488569 <= RANGE_LOG_Total_Trans_Amt THEN DO;
220197    +        _NODE_  =                  251;
MPRINT(EM_DIAGRAM):   _NODE_ = 251;
220198    +        _LEAF_  =                   88;
MPRINT(EM_DIAGRAM):   _LEAF_ = 88;
220199    +        P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
220200    +        P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
220201    +        Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
220202    +        Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
220203    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220204    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220205    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220206    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220207    +        END;
MPRINT(EM_DIAGRAM):   END;
220208    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220209    +        _NODE_  =                  248;
MPRINT(EM_DIAGRAM):   _NODE_ = 248;
220210    +        _LEAF_  =                   85;
MPRINT(EM_DIAGRAM):   _LEAF_ = 85;
220211    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220212    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220213    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220214    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220215    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
220216    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
220217    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220218    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220219    +        END;
MPRINT(EM_DIAGRAM):   END;
220220    +      END;
MPRINT(EM_DIAGRAM):   END;
220221    +    END;
MPRINT(EM_DIAGRAM):   END;
220222    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220223    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220224    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.39722304151513 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.39722304151513 THEN DO;
220225    +      _NODE_  =                   81;
MPRINT(EM_DIAGRAM):   _NODE_ = 81;
220226    +      _LEAF_  =                   61;
MPRINT(EM_DIAGRAM):   _LEAF_ = 61;
220227    +      P_Attrition_Flag0  =     0.41509433962264;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.41509433962264;
220228    +      P_Attrition_Flag1  =     0.58490566037735;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.58490566037735;
220229    +      Q_Attrition_Flag0  =     0.41509433962264;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.41509433962264;
220230    +      Q_Attrition_Flag1  =     0.58490566037735;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.58490566037735;
220231    +      V_Attrition_Flag0  =     0.27272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.27272727272727;
220232    +      V_Attrition_Flag1  =     0.72727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.72727272727272;
220233    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220234    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220235    +      END;
MPRINT(EM_DIAGRAM):   END;
220236    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220237    +          0.39722304151513 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220238    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.40310815789239 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.39722304151513 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.40310815789239 THEN DO;
220239    +      _NODE_  =                   82;
MPRINT(EM_DIAGRAM):   _NODE_ = 82;
220240    +      _LEAF_  =                   62;
MPRINT(EM_DIAGRAM):   _LEAF_ = 62;
220241    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220242    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220243    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220244    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220245    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220246    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220247    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220248    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220249    +      END;
MPRINT(EM_DIAGRAM):   END;
220250    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220251    +          0.48285277403813 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220252    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.48815824887731 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48285277403813 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.48815824887731 THEN DO;
220253    +      _NODE_  =                   84;
MPRINT(EM_DIAGRAM):   _NODE_ = 84;
220254    +      _LEAF_  =                   73;
MPRINT(EM_DIAGRAM):   _LEAF_ = 73;
220255    +      P_Attrition_Flag0  =     0.95652173913043;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.95652173913043;
220256    +      P_Attrition_Flag1  =     0.04347826086956;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.04347826086956;
220257    +      Q_Attrition_Flag0  =     0.95652173913043;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.95652173913043;
220258    +      Q_Attrition_Flag1  =     0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.04347826086956;
220259    +      V_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8;
220260    +      V_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.2;
220261    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220262    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220263    +      END;
MPRINT(EM_DIAGRAM):   END;
220264    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220265    +          0.48815824887731 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220266    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51127980701015 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48815824887731 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51127980701015 THEN DO;
220267    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220268    +            0.37166695401491 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220269    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.44854901735868 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.37166695401491 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.44854901735868 THEN DO;
220270    +        _NODE_  =                  229;
MPRINT(EM_DIAGRAM):   _NODE_ = 229;
220271    +        _LEAF_  =                   75;
MPRINT(EM_DIAGRAM):   _LEAF_ = 75;
220272    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
220273    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
220274    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
220275    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
220276    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220277    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220278    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220279    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220280    +        END;
MPRINT(EM_DIAGRAM):   END;
220281    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220282    +            0.44854901735868 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220283    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.58116784979219 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.44854901735868 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.58116784979219 THEN DO;
220284    +        _NODE_  =                  230;
MPRINT(EM_DIAGRAM):   _NODE_ = 230;
220285    +        _LEAF_  =                   76;
MPRINT(EM_DIAGRAM):   _LEAF_ = 76;
220286    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
220287    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
220288    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
220289    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
220290    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220291    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220292    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220293    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220294    +        END;
MPRINT(EM_DIAGRAM):   END;
220295    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220296    +            0.58116784979219 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220297    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.82532759775396 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.58116784979219 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.82532759775396 THEN DO;
220298    +        _NODE_  =                  231;
MPRINT(EM_DIAGRAM):   _NODE_ = 231;
220299    +        _LEAF_  =                   77;
MPRINT(EM_DIAGRAM):   _LEAF_ = 77;
220300    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
220301    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
220302    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
220303    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
220304    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220305    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220306    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220307    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220308    +        END;
MPRINT(EM_DIAGRAM):   END;
220309    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220310    +            0.82532759775396 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220311    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.89487316725644 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.82532759775396 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.89487316725644 THEN DO;
220312    +        _NODE_  =                  232;
MPRINT(EM_DIAGRAM):   _NODE_ = 232;
220313    +        _LEAF_  =                   78;
MPRINT(EM_DIAGRAM):   _LEAF_ = 78;
220314    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
220315    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
220316    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
220317    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
220318    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220319    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220320    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220321    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220322    +        END;
MPRINT(EM_DIAGRAM):   END;
220323    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220324    +            0.89487316725644 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.89487316725644 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
220325    +        _NODE_  =                  233;
MPRINT(EM_DIAGRAM):   _NODE_ = 233;
220326    +        _LEAF_  =                   79;
MPRINT(EM_DIAGRAM):   _LEAF_ = 79;
220327    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
220328    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
220329    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
220330    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
220331    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220332    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220333    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220334    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220335    +        END;
MPRINT(EM_DIAGRAM):   END;
220336    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220337    +        _NODE_  =                  228;
MPRINT(EM_DIAGRAM):   _NODE_ = 228;
220338    +        _LEAF_  =                   74;
MPRINT(EM_DIAGRAM):   _LEAF_ = 74;
220339    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220340    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220341    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220342    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220343    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220344    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220345    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220346    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220347    +        END;
MPRINT(EM_DIAGRAM):   END;
220348    +      END;
MPRINT(EM_DIAGRAM):   END;
220349    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220350    +          0.51127980701015 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51127980701015 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
220351    +      _NODE_  =                   86;
MPRINT(EM_DIAGRAM):   _NODE_ = 86;
220352    +      _LEAF_  =                   80;
MPRINT(EM_DIAGRAM):   _LEAF_ = 80;
220353    +      P_Attrition_Flag0  =     0.97029702970297;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97029702970297;
220354    +      P_Attrition_Flag1  =     0.02970297029702;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.02970297029702;
220355    +      Q_Attrition_Flag0  =     0.97029702970297;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97029702970297;
220356    +      Q_Attrition_Flag1  =     0.02970297029702;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.02970297029702;
220357    +      V_Attrition_Flag0  =     0.98360655737704;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.98360655737704;
220358    +      V_Attrition_Flag1  =     0.01639344262295;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.01639344262295;
220359    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220360    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220361    +      END;
MPRINT(EM_DIAGRAM):   END;
220362    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220363    +      _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
220364    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
220365    +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
220366    +        _NODE_  =                  220;
MPRINT(EM_DIAGRAM):   _NODE_ = 220;
220367    +        _LEAF_  =                   63;
MPRINT(EM_DIAGRAM):   _LEAF_ = 63;
220368    +        P_Attrition_Flag0  =     0.54166666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.54166666666666;
220369    +        P_Attrition_Flag1  =     0.45833333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.45833333333333;
220370    +        Q_Attrition_Flag0  =     0.54166666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.54166666666666;
220371    +        Q_Attrition_Flag1  =     0.45833333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.45833333333333;
220372    +        V_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.875;
220373    +        V_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.125;
220374    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220375    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220376    +        END;
MPRINT(EM_DIAGRAM):   END;
220377    +      ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
220378    +        _NODE_  =                  221;
MPRINT(EM_DIAGRAM):   _NODE_ = 221;
220379    +        _LEAF_  =                   64;
MPRINT(EM_DIAGRAM):   _LEAF_ = 64;
220380    +        P_Attrition_Flag0  =     0.59523809523809;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.59523809523809;
220381    +        P_Attrition_Flag1  =      0.4047619047619;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4047619047619;
220382    +        Q_Attrition_Flag0  =     0.59523809523809;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.59523809523809;
220383    +        Q_Attrition_Flag1  =      0.4047619047619;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4047619047619;
220384    +        V_Attrition_Flag0  =     0.72727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.72727272727272;
220385    +        V_Attrition_Flag1  =     0.27272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.27272727272727;
220386    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220387    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220388    +        END;
MPRINT(EM_DIAGRAM):   END;
220389    +      ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
220390    +        IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220391    +          RANGE_LOG_Total_Trans_Amt  <     0.10847073353612 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.10847073353612 THEN DO;
220392    +          _NODE_  =                  338;
MPRINT(EM_DIAGRAM):   _NODE_ = 338;
220393    +          _LEAF_  =                   65;
MPRINT(EM_DIAGRAM):   _LEAF_ = 65;
220394    +          P_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85714285714285;
220395    +          P_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14285714285714;
220396    +          Q_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85714285714285;
220397    +          Q_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14285714285714;
220398    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220399    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220400    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220401    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220402    +          END;
MPRINT(EM_DIAGRAM):   END;
220403    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220404    +              0.12140456226343 <= RANGE_LOG_Total_Trans_Amt  AND
220405    +          RANGE_LOG_Total_Trans_Amt  <     0.13553922283853 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.12140456226343 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.13553922283853 THEN DO;
220406    +          _NODE_  =                  340;
MPRINT(EM_DIAGRAM):   _NODE_ = 340;
220407    +          _LEAF_  =                   67;
MPRINT(EM_DIAGRAM):   _LEAF_ = 67;
220408    +          P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
220409    +          P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
220410    +          Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
220411    +          Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
220412    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220413    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220414    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220415    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220416    +          END;
MPRINT(EM_DIAGRAM):   END;
220417    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220418    +              0.13553922283853 <= RANGE_LOG_Total_Trans_Amt  AND
220419    +          RANGE_LOG_Total_Trans_Amt  <      0.1494269099783 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.13553922283853 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.1494269099783 THEN DO;
220420    +          _NODE_  =                  341;
MPRINT(EM_DIAGRAM):   _NODE_ = 341;
220421    +          _LEAF_  =                   68;
MPRINT(EM_DIAGRAM):   _LEAF_ = 68;
220422    +          P_Attrition_Flag0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.28571428571428;
220423    +          P_Attrition_Flag1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.71428571428571;
220424    +          Q_Attrition_Flag0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.28571428571428;
220425    +          Q_Attrition_Flag1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.71428571428571;
220426    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220427    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220428    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220429    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220430    +          END;
MPRINT(EM_DIAGRAM):   END;
220431    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220432    +               0.1494269099783 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.1494269099783 <= RANGE_LOG_Total_Trans_Amt THEN DO;
220433    +          _NODE_  =                  342;
MPRINT(EM_DIAGRAM):   _NODE_ = 342;
220434    +          _LEAF_  =                   69;
MPRINT(EM_DIAGRAM):   _LEAF_ = 69;
220435    +          P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
220436    +          P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
220437    +          Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
220438    +          Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
220439    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220440    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220441    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220442    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220443    +          END;
MPRINT(EM_DIAGRAM):   END;
220444    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220445    +          _NODE_  =                  339;
MPRINT(EM_DIAGRAM):   _NODE_ = 339;
220446    +          _LEAF_  =                   66;
MPRINT(EM_DIAGRAM):   _LEAF_ = 66;
220447    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220448    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220449    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220450    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220451    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220452    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220453    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220454    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220455    +          END;
MPRINT(EM_DIAGRAM):   END;
220456    +        END;
MPRINT(EM_DIAGRAM):   END;
220457    +      ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
220458    +        _NODE_  =                  223;
MPRINT(EM_DIAGRAM):   _NODE_ = 223;
220459    +        _LEAF_  =                   70;
MPRINT(EM_DIAGRAM):   _LEAF_ = 70;
220460    +        P_Attrition_Flag0  =     0.85185185185185;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85185185185185;
220461    +        P_Attrition_Flag1  =     0.14814814814814;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14814814814814;
220462    +        Q_Attrition_Flag0  =     0.85185185185185;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85185185185185;
220463    +        Q_Attrition_Flag1  =     0.14814814814814;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14814814814814;
220464    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220465    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220466    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220467    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220468    +        END;
MPRINT(EM_DIAGRAM):   END;
220469    +      ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
220470    +        _NODE_  =                  224;
MPRINT(EM_DIAGRAM):   _NODE_ = 224;
220471    +        _LEAF_  =                   71;
MPRINT(EM_DIAGRAM):   _LEAF_ = 71;
220472    +        P_Attrition_Flag0  =                 0.88;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88;
220473    +        P_Attrition_Flag1  =                 0.12;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.12;
220474    +        Q_Attrition_Flag0  =                 0.88;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88;
220475    +        Q_Attrition_Flag1  =                 0.12;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.12;
220476    +        V_Attrition_Flag0  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.78571428571428;
220477    +        V_Attrition_Flag1  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.21428571428571;
220478    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220479    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220480    +        END;
MPRINT(EM_DIAGRAM):   END;
220481    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220482    +        _NODE_  =                  225;
MPRINT(EM_DIAGRAM):   _NODE_ = 225;
220483    +        _LEAF_  =                   72;
MPRINT(EM_DIAGRAM):   _LEAF_ = 72;
220484    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220485    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220486    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220487    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220488    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220489    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220490    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220491    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220492    +        END;
MPRINT(EM_DIAGRAM):   END;
220493    +      END;
MPRINT(EM_DIAGRAM):   END;
220494    +    END;
MPRINT(EM_DIAGRAM):   END;
220495    +  END;
MPRINT(EM_DIAGRAM):   END;
220496    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220497    +      0.34217286191838 <= RANGE_LOG_Total_Trans_Amt  AND
220498    +  RANGE_LOG_Total_Trans_Amt  <     0.68217373468557 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.34217286191838 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.68217373468557 THEN DO;
220499    +  _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
220500    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
220501    +  IF _ARBFMT_12 IN ('7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('7' ) THEN DO;
220502    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220503    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.41391728109155 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.41391728109155 THEN DO;
220504    +      _NODE_  =                  117;
MPRINT(EM_DIAGRAM):   _NODE_ = 117;
220505    +      _LEAF_  =                  112;
MPRINT(EM_DIAGRAM):   _LEAF_ = 112;
220506    +      P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
220507    +      P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
220508    +      Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
220509    +      Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
220510    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220511    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220512    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220513    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220514    +      END;
MPRINT(EM_DIAGRAM):   END;
220515    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220516    +          0.46404421875696 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220517    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49236141178893 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.46404421875696 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49236141178893 THEN DO;
220518    +      IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
220519    +            0.40626434564763 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
220520    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <       0.414627277319 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.40626434564763 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.414627277319 THEN DO;
220521    +        _NODE_  =                  268;
MPRINT(EM_DIAGRAM):   _NODE_ = 268;
220522    +        _LEAF_  =                  115;
MPRINT(EM_DIAGRAM):   _LEAF_ = 115;
220523    +        P_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88888888888888;
220524    +        P_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.11111111111111;
220525    +        Q_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88888888888888;
220526    +        Q_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.11111111111111;
220527    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220528    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220529    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220530    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220531    +        END;
MPRINT(EM_DIAGRAM):   END;
220532    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
220533    +              0.414627277319 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
220534    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.44120909888919 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.414627277319 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.44120909888919 THEN DO;
220535    +        _NODE_  =                  269;
MPRINT(EM_DIAGRAM):   _NODE_ = 269;
220536    +        _LEAF_  =                  116;
MPRINT(EM_DIAGRAM):   _LEAF_ = 116;
220537    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220538    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220539    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220540    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220541    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220542    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220543    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220544    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220545    +        END;
MPRINT(EM_DIAGRAM):   END;
220546    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
220547    +            0.44120909888919 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
220548    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.45384692453765 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.44120909888919 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.45384692453765 THEN DO;
220549    +        _NODE_  =                  270;
MPRINT(EM_DIAGRAM):   _NODE_ = 270;
220550    +        _LEAF_  =                  117;
MPRINT(EM_DIAGRAM):   _LEAF_ = 117;
220551    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
220552    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
220553    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
220554    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
220555    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220556    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220557    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220558    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220559    +        END;
MPRINT(EM_DIAGRAM):   END;
220560    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
220561    +            0.45384692453765 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
220562    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.51563086231801 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.45384692453765 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.51563086231801 THEN DO;
220563    +        IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
220564    +          RANGE_Total_Revolving_Bal  <     0.20679380214541 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.20679380214541 THEN DO;
220565    +          _NODE_  =                  360;
MPRINT(EM_DIAGRAM):   _NODE_ = 360;
220566    +          _LEAF_  =                  118;
MPRINT(EM_DIAGRAM):   _LEAF_ = 118;
220567    +          P_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.375;
220568    +          P_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.625;
220569    +          Q_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.375;
220570    +          Q_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.625;
220571    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220572    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220573    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220574    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220575    +          END;
MPRINT(EM_DIAGRAM):   END;
220576    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220577    +          _NODE_  =                  361;
MPRINT(EM_DIAGRAM):   _NODE_ = 361;
220578    +          _LEAF_  =                  119;
MPRINT(EM_DIAGRAM):   _LEAF_ = 119;
220579    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220580    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220581    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220582    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220583    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220584    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220585    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220586    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220587    +          END;
MPRINT(EM_DIAGRAM):   END;
220588    +        END;
MPRINT(EM_DIAGRAM):   END;
220589    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
220590    +            0.51563086231801 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.51563086231801 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
220591    +        _NODE_  =                  272;
MPRINT(EM_DIAGRAM):   _NODE_ = 272;
220592    +        _LEAF_  =                  120;
MPRINT(EM_DIAGRAM):   _LEAF_ = 120;
220593    +        P_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.16666666666666;
220594    +        P_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.83333333333333;
220595    +        Q_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.16666666666666;
220596    +        Q_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.83333333333333;
220597    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
220598    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
220599    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220600    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220601    +        END;
MPRINT(EM_DIAGRAM):   END;
220602    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220603    +        _NODE_  =                  267;
MPRINT(EM_DIAGRAM):   _NODE_ = 267;
220604    +        _LEAF_  =                  114;
MPRINT(EM_DIAGRAM):   _LEAF_ = 114;
220605    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220606    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220607    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220608    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220609    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220610    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220611    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220612    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220613    +        END;
MPRINT(EM_DIAGRAM):   END;
220614    +      END;
MPRINT(EM_DIAGRAM):   END;
220615    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220616    +          0.49236141178893 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220617    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49474718712517 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49236141178893 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49474718712517 THEN DO;
220618    +      _NODE_  =                  120;
MPRINT(EM_DIAGRAM):   _NODE_ = 120;
220619    +      _LEAF_  =                  121;
MPRINT(EM_DIAGRAM):   _LEAF_ = 121;
220620    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220621    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220622    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220623    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220624    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220625    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220626    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220627    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220628    +      END;
MPRINT(EM_DIAGRAM):   END;
220629    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220630    +          0.49474718712517 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220631    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51814270095588 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49474718712517 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51814270095588 THEN DO;
220632    +      _NODE_  =                  121;
MPRINT(EM_DIAGRAM):   _NODE_ = 121;
220633    +      _LEAF_  =                  122;
MPRINT(EM_DIAGRAM):   _LEAF_ = 122;
220634    +      P_Attrition_Flag0  =               0.7875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.7875;
220635    +      P_Attrition_Flag1  =               0.2125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2125;
220636    +      Q_Attrition_Flag0  =               0.7875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.7875;
220637    +      Q_Attrition_Flag1  =               0.2125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2125;
220638    +      V_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.88888888888888;
220639    +      V_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.11111111111111;
220640    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220641    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220642    +      END;
MPRINT(EM_DIAGRAM):   END;
220643    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220644    +          0.51814270095588 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51814270095588 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
220645    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220646    +            0.23344859718855 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220647    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.36684918977335 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.23344859718855 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.36684918977335 THEN DO;
220648    +        _NODE_  =                  280;
MPRINT(EM_DIAGRAM):   _NODE_ = 280;
220649    +        _LEAF_  =                  124;
MPRINT(EM_DIAGRAM):   _LEAF_ = 124;
220650    +        P_Attrition_Flag0  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.55555555555555;
220651    +        P_Attrition_Flag1  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.44444444444444;
220652    +        Q_Attrition_Flag0  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.55555555555555;
220653    +        Q_Attrition_Flag1  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.44444444444444;
220654    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220655    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220656    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220657    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220658    +        END;
MPRINT(EM_DIAGRAM):   END;
220659    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220660    +            0.36684918977335 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220661    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.56904143807919 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.36684918977335 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.56904143807919 THEN DO;
220662    +        _NODE_  =                  281;
MPRINT(EM_DIAGRAM):   _NODE_ = 281;
220663    +        _LEAF_  =                  125;
MPRINT(EM_DIAGRAM):   _LEAF_ = 125;
220664    +        P_Attrition_Flag0  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.125;
220665    +        P_Attrition_Flag1  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.875;
220666    +        Q_Attrition_Flag0  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.125;
220667    +        Q_Attrition_Flag1  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.875;
220668    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220669    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220670    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220671    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220672    +        END;
MPRINT(EM_DIAGRAM):   END;
220673    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220674    +            0.56904143807919 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220675    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.62360840241109 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.56904143807919 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.62360840241109 THEN DO;
220676    +        _NODE_  =                  282;
MPRINT(EM_DIAGRAM):   _NODE_ = 282;
220677    +        _LEAF_  =                  126;
MPRINT(EM_DIAGRAM):   _LEAF_ = 126;
220678    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
220679    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
220680    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
220681    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
220682    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220683    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220684    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220685    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220686    +        END;
MPRINT(EM_DIAGRAM):   END;
220687    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220688    +            0.62360840241109 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.62360840241109 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
220689    +        _NODE_  =                  283;
MPRINT(EM_DIAGRAM):   _NODE_ = 283;
220690    +        _LEAF_  =                  127;
MPRINT(EM_DIAGRAM):   _LEAF_ = 127;
220691    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220692    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220693    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220694    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220695    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220696    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220697    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220698    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220699    +        END;
MPRINT(EM_DIAGRAM):   END;
220700    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220701    +        _NODE_  =                  279;
MPRINT(EM_DIAGRAM):   _NODE_ = 279;
220702    +        _LEAF_  =                  123;
MPRINT(EM_DIAGRAM):   _LEAF_ = 123;
220703    +        P_Attrition_Flag0  =     0.10526315789473;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.10526315789473;
220704    +        P_Attrition_Flag1  =     0.89473684210526;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.89473684210526;
220705    +        Q_Attrition_Flag0  =     0.10526315789473;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.10526315789473;
220706    +        Q_Attrition_Flag1  =     0.89473684210526;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.89473684210526;
220707    +        V_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.09090909090909;
220708    +        V_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.9090909090909;
220709    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220710    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220711    +        END;
MPRINT(EM_DIAGRAM):   END;
220712    +      END;
MPRINT(EM_DIAGRAM):   END;
220713    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220714    +      _NODE_  =                  118;
MPRINT(EM_DIAGRAM):   _NODE_ = 118;
220715    +      _LEAF_  =                  113;
MPRINT(EM_DIAGRAM):   _LEAF_ = 113;
220716    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220717    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220718    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220719    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220720    +      V_Attrition_Flag0  =     0.97727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97727272727272;
220721    +      V_Attrition_Flag1  =     0.02272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02272727272727;
220722    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220723    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220724    +      END;
MPRINT(EM_DIAGRAM):   END;
220725    +    END;
MPRINT(EM_DIAGRAM):   END;
220726    +  ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
220727    +    IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220728    +      RANGE_LOG_Total_Trans_Amt  <     0.36569662840787 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.36569662840787 THEN DO;
220729    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220730    +            0.50720030994984 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.50720030994984 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
220731    +        _NODE_  =                  285;
MPRINT(EM_DIAGRAM):   _NODE_ = 285;
220732    +        _LEAF_  =                  129;
MPRINT(EM_DIAGRAM):   _LEAF_ = 129;
220733    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
220734    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
220735    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
220736    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
220737    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220738    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220739    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220740    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220741    +        END;
MPRINT(EM_DIAGRAM):   END;
220742    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220743    +        _NODE_  =                  284;
MPRINT(EM_DIAGRAM):   _NODE_ = 284;
220744    +        _LEAF_  =                  128;
MPRINT(EM_DIAGRAM):   _LEAF_ = 128;
220745    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220746    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220747    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220748    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220749    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220750    +        V_Attrition_Flag1  =                    0;
The SAS System
 
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220751    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220752    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220753    +        END;
MPRINT(EM_DIAGRAM):   END;
220754    +      END;
MPRINT(EM_DIAGRAM):   END;
220755    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220756    +          0.36569662840787 <= RANGE_LOG_Total_Trans_Amt  AND
220757    +      RANGE_LOG_Total_Trans_Amt  <     0.47182669343092 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.36569662840787 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.47182669343092 THEN DO;
220758    +      _NODE_  =                  124;
MPRINT(EM_DIAGRAM):   _NODE_ = 124;
220759    +      _LEAF_  =                  130;
MPRINT(EM_DIAGRAM):   _LEAF_ = 130;
220760    +      P_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05263157894736;
220761    +      P_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94736842105263;
220762    +      Q_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05263157894736;
220763    +      Q_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94736842105263;
220764    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220765    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220766    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220767    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220768    +      END;
MPRINT(EM_DIAGRAM):   END;
220769    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220770    +          0.47182669343092 <= RANGE_LOG_Total_Trans_Amt  AND
220771    +      RANGE_LOG_Total_Trans_Amt  <     0.50438753588262 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.47182669343092 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.50438753588262 THEN DO;
220772    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220773    +            0.29700429664855 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
220774    +        RANGE_SQRT_Avg_Utilization_Ratio  <      0.4291652643428 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.29700429664855 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.4291652643428 THEN DO;
220775    +        _NODE_  =                  289;
MPRINT(EM_DIAGRAM):   _NODE_ = 289;
220776    +        _LEAF_  =                  132;
MPRINT(EM_DIAGRAM):   _LEAF_ = 132;
220777    +        P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
220778    +        P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
220779    +        Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
220780    +        Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
220781    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220782    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220783    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220784    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220785    +        END;
MPRINT(EM_DIAGRAM):   END;
220786    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
220787    +             0.4291652643428 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.4291652643428 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
220788    +        _NODE_  =                  290;
MPRINT(EM_DIAGRAM):   _NODE_ = 290;
220789    +        _LEAF_  =                  133;
MPRINT(EM_DIAGRAM):   _LEAF_ = 133;
220790    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
220791    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
220792    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
220793    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
220794    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220795    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220796    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220797    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220798    +        END;
MPRINT(EM_DIAGRAM):   END;
220799    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220800    +        _NODE_  =                  288;
MPRINT(EM_DIAGRAM):   _NODE_ = 288;
220801    +        _LEAF_  =                  131;
MPRINT(EM_DIAGRAM):   _LEAF_ = 131;
220802    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
220803    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
220804    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
220805    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
220806    +        V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
220807    +        V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
220808    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220809    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220810    +        END;
MPRINT(EM_DIAGRAM):   END;
220811    +      END;
MPRINT(EM_DIAGRAM):   END;
220812    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220813    +          0.50438753588262 <= RANGE_LOG_Total_Trans_Amt  AND
220814    +      RANGE_LOG_Total_Trans_Amt  <     0.51369397376905 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.50438753588262 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.51369397376905 THEN DO;
220815    +      _NODE_  =                  126;
MPRINT(EM_DIAGRAM):   _NODE_ = 126;
220816    +      _LEAF_  =                  134;
MPRINT(EM_DIAGRAM):   _LEAF_ = 134;
220817    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
220818    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
220819    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
220820    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
220821    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220822    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220823    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220824    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220825    +      END;
MPRINT(EM_DIAGRAM):   END;
220826    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220827    +          0.51369397376905 <= RANGE_LOG_Total_Trans_Amt  AND
220828    +      RANGE_LOG_Total_Trans_Amt  <     0.52246573452757 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.51369397376905 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.52246573452757 THEN DO;
220829    +      _NODE_  =                  127;
MPRINT(EM_DIAGRAM):   _NODE_ = 127;
220830    +      _LEAF_  =                  135;
MPRINT(EM_DIAGRAM):   _LEAF_ = 135;
220831    +      P_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.14285714285714;
220832    +      P_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.85714285714285;
220833    +      Q_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.14285714285714;
220834    +      Q_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.85714285714285;
220835    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220836    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220837    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220838    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220839    +      END;
MPRINT(EM_DIAGRAM):   END;
220840    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220841    +      _NODE_  =                  128;
MPRINT(EM_DIAGRAM):   _NODE_ = 128;
220842    +      _LEAF_  =                  136;
MPRINT(EM_DIAGRAM):   _LEAF_ = 136;
220843    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
220844    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
220845    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
220846    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
220847    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220848    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220849    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220850    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220851    +      END;
MPRINT(EM_DIAGRAM):   END;
220852    +    END;
MPRINT(EM_DIAGRAM):   END;
220853    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220854    +    _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
220855    +    _LEAF_  =                  137;
MPRINT(EM_DIAGRAM):   _LEAF_ = 137;
220856    +    P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
220857    +    P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
220858    +    Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
220859    +    Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
220860    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220861    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220862    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220863    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220864    +    END;
MPRINT(EM_DIAGRAM):   END;
220865    +  END;
MPRINT(EM_DIAGRAM):   END;
220866    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220867    +      0.68217373468557 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.68217373468557 <= RANGE_LOG_Total_Trans_Amt THEN DO;
220868    +  _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
220869    +  _LEAF_  =                  138;
MPRINT(EM_DIAGRAM):   _LEAF_ = 138;
220870    +  P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220871    +  P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220872    +  Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220873    +  Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220874    +  V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220875    +  V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220876    +  I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220877    +  U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220878    +  END;
MPRINT(EM_DIAGRAM):   END;
220879    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220880    +  _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
220881    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
220882    +  IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('6' ) THEN DO;
220883    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220884    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.32866954130237 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.32866954130237 THEN DO;
220885    +      _NODE_  =                   95;
MPRINT(EM_DIAGRAM):   _NODE_ = 95;
220886    +      _LEAF_  =                   91;
MPRINT(EM_DIAGRAM):   _LEAF_ = 91;
220887    +      P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
220888    +      P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
220889    +      Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
220890    +      Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
220891    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220892    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220893    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220894    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220895    +      END;
MPRINT(EM_DIAGRAM):   END;
220896    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220897    +          0.49771332446437 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220898    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.53889078520273 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49771332446437 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.53889078520273 THEN DO;
220899    +      _NODE_  =                   97;
MPRINT(EM_DIAGRAM):   _NODE_ = 97;
220900    +      _LEAF_  =                   93;
MPRINT(EM_DIAGRAM):   _LEAF_ = 93;
220901    +      P_Attrition_Flag0  =     0.98477157360406;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98477157360406;
220902    +      P_Attrition_Flag1  =     0.01522842639593;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01522842639593;
220903    +      Q_Attrition_Flag0  =     0.98477157360406;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98477157360406;
220904    +      Q_Attrition_Flag1  =     0.01522842639593;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01522842639593;
220905    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220906    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220907    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220908    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220909    +      END;
MPRINT(EM_DIAGRAM):   END;
220910    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220911    +          0.53889078520273 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220912    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.54997522870133 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.53889078520273 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.54997522870133 THEN DO;
220913    +      _NODE_  =                   98;
MPRINT(EM_DIAGRAM):   _NODE_ = 98;
220914    +      _LEAF_  =                   94;
MPRINT(EM_DIAGRAM):   _LEAF_ = 94;
220915    +      P_Attrition_Flag0  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93939393939393;
220916    +      P_Attrition_Flag1  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06060606060606;
220917    +      Q_Attrition_Flag0  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93939393939393;
220918    +      Q_Attrition_Flag1  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06060606060606;
220919    +      V_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.75;
220920    +      V_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.25;
220921    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220922    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220923    +      END;
MPRINT(EM_DIAGRAM):   END;
220924    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220925    +          0.54997522870133 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
220926    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.55688995780149 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.54997522870133 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.55688995780149 THEN DO;
220927    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220928    +            0.30723523386139 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.30723523386139 <= RANGE_LOG_Total_Trans_Amt THEN DO;
220929    +        _NODE_  =                  259;
MPRINT(EM_DIAGRAM):   _NODE_ = 259;
220930    +        _LEAF_  =                   96;
MPRINT(EM_DIAGRAM):   _LEAF_ = 96;
220931    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
220932    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
220933    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
220934    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
220935    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
220936    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
220937    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
220938    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
220939    +        END;
MPRINT(EM_DIAGRAM):   END;
220940    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220941    +        _NODE_  =                  258;
MPRINT(EM_DIAGRAM):   _NODE_ = 258;
220942    +        _LEAF_  =                   95;
MPRINT(EM_DIAGRAM):   _LEAF_ = 95;
220943    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220944    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220945    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220946    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220947    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220948    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220949    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220950    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220951    +        END;
MPRINT(EM_DIAGRAM):   END;
220952    +      END;
MPRINT(EM_DIAGRAM):   END;
220953    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
220954    +          0.55688995780149 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.55688995780149 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
220955    +      _NODE_  =                  100;
MPRINT(EM_DIAGRAM):   _NODE_ = 100;
220956    +      _LEAF_  =                   97;
MPRINT(EM_DIAGRAM):   _LEAF_ = 97;
220957    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220958    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220959    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220960    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220961    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220962    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220963    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220964    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220965    +      END;
MPRINT(EM_DIAGRAM):   END;
220966    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220967    +      _NODE_  =                   96;
MPRINT(EM_DIAGRAM):   _NODE_ = 96;
220968    +      _LEAF_  =                   92;
MPRINT(EM_DIAGRAM):   _LEAF_ = 92;
220969    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220970    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220971    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220972    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220973    +      V_Attrition_Flag0  =      0.9957627118644;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9957627118644;
220974    +      V_Attrition_Flag1  =     0.00423728813559;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.00423728813559;
220975    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220976    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220977    +      END;
MPRINT(EM_DIAGRAM):   END;
220978    +    END;
MPRINT(EM_DIAGRAM):   END;
220979    +  ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
220980    +    IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220981    +      RANGE_LOG_Total_Trans_Amt  <     0.19111919629034 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.19111919629034 THEN DO;
220982    +      _NODE_  =                  101;
MPRINT(EM_DIAGRAM):   _NODE_ = 101;
220983    +      _LEAF_  =                   98;
MPRINT(EM_DIAGRAM):   _LEAF_ = 98;
220984    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
220985    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
220986    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
220987    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
220988    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
220989    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
220990    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
220991    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
220992    +      END;
MPRINT(EM_DIAGRAM):   END;
220993    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
220994    +          0.19111919629034 <= RANGE_LOG_Total_Trans_Amt  AND
220995    +      RANGE_LOG_Total_Trans_Amt  <     0.19806285116569 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.19111919629034 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.19806285116569 THEN DO;
220996    +      _NODE_  =                  102;
MPRINT(EM_DIAGRAM):   _NODE_ = 102;
220997    +      _LEAF_  =                   99;
MPRINT(EM_DIAGRAM):   _LEAF_ = 99;
220998    +      P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
220999    +      P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
221000    +      Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
221001    +      Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
221002    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221003    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221004    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221005    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221006    +      END;
MPRINT(EM_DIAGRAM):   END;
221007    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221008    +          0.28857193112075 <= RANGE_LOG_Total_Trans_Amt  AND
221009    +      RANGE_LOG_Total_Trans_Amt  <     0.29437391726552 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.28857193112075 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.29437391726552 THEN DO;
221010    +      _NODE_  =                  104;
MPRINT(EM_DIAGRAM):   _NODE_ = 104;
221011    +      _LEAF_  =                  101;
MPRINT(EM_DIAGRAM):   _LEAF_ = 101;
221012    +      P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
221013    +      P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
221014    +      Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
221015    +      Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
221016    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221017    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221018    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221019    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221020    +      END;
MPRINT(EM_DIAGRAM):   END;
221021    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221022    +          0.29437391726552 <= RANGE_LOG_Total_Trans_Amt  AND
221023    +      RANGE_LOG_Total_Trans_Amt  <     0.31658857703879 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.29437391726552 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.31658857703879 THEN DO;
221024    +      _NODE_  =                  105;
MPRINT(EM_DIAGRAM):   _NODE_ = 105;
221025    +      _LEAF_  =                  102;
MPRINT(EM_DIAGRAM):   _LEAF_ = 102;
221026    +      P_Attrition_Flag0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.44444444444444;
221027    +      P_Attrition_Flag1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.55555555555555;
221028    +      Q_Attrition_Flag0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.44444444444444;
221029    +      Q_Attrition_Flag1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.55555555555555;
221030    +      V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
221031    +      V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
221032    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221033    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221034    +      END;
MPRINT(EM_DIAGRAM):   END;
221035    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221036    +          0.31658857703879 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.31658857703879 <= RANGE_LOG_Total_Trans_Amt THEN DO;
221037    +      _NODE_  =                  106;
MPRINT(EM_DIAGRAM):   _NODE_ = 106;
221038    +      _LEAF_  =                  103;
MPRINT(EM_DIAGRAM):   _LEAF_ = 103;
221039    +      P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
221040    +      P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
221041    +      Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
221042    +      Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
221043    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221044    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221045    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221046    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221047    +      END;
MPRINT(EM_DIAGRAM):   END;
221048    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221049    +      _NODE_  =                  103;
MPRINT(EM_DIAGRAM):   _NODE_ = 103;
221050    +      _LEAF_  =                  100;
MPRINT(EM_DIAGRAM):   _LEAF_ = 100;
221051    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221052    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221053    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221054    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221055    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221056    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221057    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221058    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221059    +      END;
MPRINT(EM_DIAGRAM):   END;
221060    +    END;
MPRINT(EM_DIAGRAM):   END;
221061    +  ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
221062    +    _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
221063    +    _LEAF_  =                  104;
MPRINT(EM_DIAGRAM):   _LEAF_ = 104;
221064    +    P_Attrition_Flag0  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.73076923076923;
221065    +    P_Attrition_Flag1  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.26923076923076;
221066    +    Q_Attrition_Flag0  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.73076923076923;
221067    +    Q_Attrition_Flag1  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.26923076923076;
221068    +    V_Attrition_Flag0  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.69565217391304;
221069    +    V_Attrition_Flag1  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.30434782608695;
221070    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221071    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221072    +    END;
MPRINT(EM_DIAGRAM):   END;
221073    +  ELSE IF _ARBFMT_12 IN ('3' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ,'2' ) THEN DO;
221074    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221075    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.36414099724008 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.36414099724008 THEN DO;
221076    +      _NODE_  =                  111;
MPRINT(EM_DIAGRAM):   _NODE_ = 111;
221077    +      _LEAF_  =                  105;
MPRINT(EM_DIAGRAM):   _LEAF_ = 105;
221078    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
221079    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
221080    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
221081    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
221082    +      V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
221083    +      V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
221084    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221085    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221086    +      END;
MPRINT(EM_DIAGRAM):   END;
221087    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221088    +          0.36414099724008 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221089    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.41087323297028 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.36414099724008 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.41087323297028 THEN DO;
221090    +      _NODE_  =                  112;
MPRINT(EM_DIAGRAM):   _NODE_ = 112;
221091    +      _LEAF_  =                  106;
MPRINT(EM_DIAGRAM):   _LEAF_ = 106;
221092    +      P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
221093    +      P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
221094    +      Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
221095    +      Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
221096    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221097    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221098    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221099    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221100    +      END;
MPRINT(EM_DIAGRAM):   END;
221101    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221102    +          0.41087323297028 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221103    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.42740380032422 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.41087323297028 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.42740380032422 THEN DO;
221104    +      _NODE_  =                  113;
MPRINT(EM_DIAGRAM):   _NODE_ = 113;
221105    +      _LEAF_  =                  107;
MPRINT(EM_DIAGRAM):   _LEAF_ = 107;
221106    +      P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
221107    +      P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
221108    +      Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
221109    +      Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
221110    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221111    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221112    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221113    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221114    +      END;
MPRINT(EM_DIAGRAM):   END;
221115    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221116    +          0.42740380032422 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221117    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.47370187464616 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.42740380032422 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.47370187464616 THEN DO;
221118    +      _NODE_  =                  114;
MPRINT(EM_DIAGRAM):   _NODE_ = 114;
221119    +      _LEAF_  =                  108;
MPRINT(EM_DIAGRAM):   _LEAF_ = 108;
221120    +      P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
221121    +      P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
221122    +      Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
221123    +      Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
221124    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221125    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221126    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221127    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221128    +      END;
MPRINT(EM_DIAGRAM):   END;
221129    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221130    +          0.47370187464616 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221131    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.50814574678553 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.47370187464616 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.50814574678553 THEN DO;
221132    +      _NODE_  =                  115;
MPRINT(EM_DIAGRAM):   _NODE_ = 115;
221133    +      _LEAF_  =                  109;
MPRINT(EM_DIAGRAM):   _LEAF_ = 109;
221134    +      P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
221135    +      P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
221136    +      Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
221137    +      Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
221138    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221139    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221140    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221141    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221142    +      END;
MPRINT(EM_DIAGRAM):   END;
221143    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221144    +      _NODE_  =                  116;
MPRINT(EM_DIAGRAM):   _NODE_ = 116;
221145    +      _LEAF_  =                  110;
MPRINT(EM_DIAGRAM):   _LEAF_ = 110;
221146    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221147    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221148    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221149    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221150    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221151    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221152    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221153    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221154    +      END;
MPRINT(EM_DIAGRAM):   END;
221155    +    END;
MPRINT(EM_DIAGRAM):   END;
221156    +  ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
221157    +    _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
221158    +    _LEAF_  =                  111;
MPRINT(EM_DIAGRAM):   _LEAF_ = 111;
221159    +    P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
221160    +    P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
221161    +    Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
221162    +    Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
221163    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221164    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221165    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221166    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221167    +    END;
MPRINT(EM_DIAGRAM):   END;
221168    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221169    +    _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
221170    +    _LEAF_  =                   90;
MPRINT(EM_DIAGRAM):   _LEAF_ = 90;
221171    +    P_Attrition_Flag0  =     0.99945945945945;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.99945945945945;
221172    +    P_Attrition_Flag1  =     0.00054054054054;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.00054054054054;
221173    +    Q_Attrition_Flag0  =     0.99945945945945;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.99945945945945;
221174    +    Q_Attrition_Flag1  =     0.00054054054054;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.00054054054054;
221175    +    V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221176    +    V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221177    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221178    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221179    +    END;
MPRINT(EM_DIAGRAM):   END;
221180    +  END;
MPRINT(EM_DIAGRAM):   END;
221181    +
221182    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
221183    +IF  F_Attrition_Flag  NE '0'
221184    +AND F_Attrition_Flag  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Attrition_Flag NE '0' AND F_Attrition_Flag NE '1' THEN DO;
221185    +        R_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = .;
221186    +        R_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = .;
221187    + END;
MPRINT(EM_DIAGRAM):   END;
221188    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221189    +       R_Attrition_Flag0  =  -P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = -P_Attrition_Flag0 ;
221190    +       R_Attrition_Flag1  =  -P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = -P_Attrition_Flag1 ;
221191    +       SELECT( F_Attrition_Flag  );
MPRINT(EM_DIAGRAM):   SELECT( F_Attrition_Flag );
221192    +          WHEN( '0'  ) R_Attrition_Flag0  = R_Attrition_Flag0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_Attrition_Flag0 = R_Attrition_Flag0 +1;
221193    +          WHEN( '1'  ) R_Attrition_Flag1  = R_Attrition_Flag1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_Attrition_Flag1 = R_Attrition_Flag1 +1;
221194    +       END;
MPRINT(EM_DIAGRAM):   END;
221195    + END;
MPRINT(EM_DIAGRAM):   END;
221196    +
221197    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
221198    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
221199    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
221200    +
221201    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
221202     run;
 
NOTE: DATA STEP view saved on file EMWS1.TREE3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
221203     quit;
221204     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
221205     filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221206     *------------------------------------------------------------*;
221207     * Tree3: Scoring VALIDATE data;
221208     *------------------------------------------------------------*;
221209     data EMWS1.Tree3_VALIDATE
221210     / view=EMWS1.Tree3_VALIDATE
221211     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_VALIDATE / view=EMWS1.Tree3_VALIDATE ;
221212     set EMWS1.Part2_VALIDATE
221213     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_VALIDATE ;
221214     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas.
221215    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
221216    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
221217    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
221218    +
221219    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
221220    +LENGTH F_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH F_Attrition_Flag $ 17;
221221    +LENGTH I_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH I_Attrition_Flag $ 17;
221222    +LENGTH U_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH U_Attrition_Flag $ 17;
221223    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
221224    +
221225    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
221226    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
221227    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
221228    +label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
221229    +label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
221230    +label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
221231    +label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
221232    +label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
221233    +label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
221234    +label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
221235    +label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
221236    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
221237    +label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
221238    +label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
221239    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
221240    +
221241    +
221242    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
221243    +LENGTH _ARBFMT_17 $     17; DROP _ARBFMT_17;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_17 $ 17;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_17;
221244    +_ARBFMT_17 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = ' ';
221245    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
221246    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
221247    +
221248    +
221249    +_ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
221250    + %DMNORMCP( _ARBFMT_17, F_Attrition_Flag );
MPRINT(DMNORMCP):   F_Attrition_Flag=dmnorm(_ARBFMT_17,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
221251    +
221252    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
221253    +IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221254    +  RANGE_LOG_Total_Trans_Amt  <     0.03868641322523 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03868641322523 THEN DO;
221255    +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
221256    +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
221257    +  P_Attrition_Flag0  =     0.09649122807017;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09649122807017;
221258    +  P_Attrition_Flag1  =     0.90350877192982;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.90350877192982;
221259    +  Q_Attrition_Flag0  =     0.09649122807017;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09649122807017;
221260    +  Q_Attrition_Flag1  =     0.90350877192982;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.90350877192982;
221261    +  V_Attrition_Flag0  =     0.16129032258064;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.16129032258064;
221262    +  V_Attrition_Flag1  =     0.83870967741935;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.83870967741935;
221263    +  I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221264    +  U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221265    +  END;
MPRINT(EM_DIAGRAM):   END;
221266    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221267    +      0.03868641322523 <= RANGE_LOG_Total_Trans_Amt  AND
221268    +  RANGE_LOG_Total_Trans_Amt  <     0.10171724739083 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.03868641322523 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.10171724739083 THEN DO;
221269    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221270    +    RANGE_Total_Revolving_Bal  <      0.2119586809694 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.2119586809694 THEN DO;
221271    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221272    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.35308417471738 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.35308417471738 THEN DO;
221273    +      _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
221274    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
221275    +      P_Attrition_Flag0  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.06060606060606;
221276    +      P_Attrition_Flag1  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.93939393939393;
221277    +      Q_Attrition_Flag0  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.06060606060606;
221278    +      Q_Attrition_Flag1  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.93939393939393;
221279    +      V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
221280    +      V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
221281    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221282    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221283    +      END;
MPRINT(EM_DIAGRAM):   END;
221284    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221285    +          0.40292534213823 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221286    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4402808888078 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.40292534213823 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4402808888078 THEN DO;
221287    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221288    +            0.07441989599977 <= RANGE_LOG_Total_Trans_Amt  AND
221289    +        RANGE_LOG_Total_Trans_Amt  <     0.09331394044198 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.07441989599977 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.09331394044198 THEN DO;
221290    +        _NODE_  =                  139;
MPRINT(EM_DIAGRAM):   _NODE_ = 139;
221291    +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
221292    +        P_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.57142857142857;
221293    +        P_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.42857142857142;
221294    +        Q_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.57142857142857;
221295    +        Q_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.42857142857142;
221296    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
221297    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
221298    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221299    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221300    +        END;
MPRINT(EM_DIAGRAM):   END;
221301    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221302    +            0.09331394044198 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.09331394044198 <= RANGE_LOG_Total_Trans_Amt THEN DO;
221303    +        _NODE_  =                  140;
MPRINT(EM_DIAGRAM):   _NODE_ = 140;
221304    +        _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
221305    +        P_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.16666666666666;
221306    +        P_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.83333333333333;
221307    +        Q_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.16666666666666;
221308    +        Q_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.83333333333333;
221309    +        V_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.25;
221310    +        V_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.75;
221311    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221312    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221313    +        END;
MPRINT(EM_DIAGRAM):   END;
221314    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221315    +        _NODE_  =                  138;
MPRINT(EM_DIAGRAM):   _NODE_ = 138;
221316    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
221317    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221318    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221319    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221320    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221321    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221322    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221323    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221324    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221325    +        END;
MPRINT(EM_DIAGRAM):   END;
221326    +      END;
MPRINT(EM_DIAGRAM):   END;
221327    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221328    +           0.4402808888078 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221329    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49116234999183 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.4402808888078 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49116234999183 THEN DO;
221330    +      _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
221331    +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
221332    +      P_Attrition_Flag0  =     0.92682926829268;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.92682926829268;
221333    +      P_Attrition_Flag1  =     0.07317073170731;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.07317073170731;
221334    +      Q_Attrition_Flag0  =     0.92682926829268;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.92682926829268;
221335    +      Q_Attrition_Flag1  =     0.07317073170731;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.07317073170731;
221336    +      V_Attrition_Flag0  =      0.8095238095238;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8095238095238;
221337    +      V_Attrition_Flag1  =     0.19047619047619;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.19047619047619;
221338    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221339    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221340    +      END;
MPRINT(EM_DIAGRAM):   END;
221341    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221342    +          0.49116234999183 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221343    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <       0.557550219255 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49116234999183 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.557550219255 THEN DO;
221344    +      _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
221345    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
221346    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
221347    +        _NODE_  =                  143;
MPRINT(EM_DIAGRAM):   _NODE_ = 143;
221348    +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
221349    +        P_Attrition_Flag0  =                  0.1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.1;
221350    +        P_Attrition_Flag1  =                  0.9;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9;
221351    +        Q_Attrition_Flag0  =                  0.1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.1;
221352    +        Q_Attrition_Flag1  =                  0.9;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9;
221353    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221354    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221355    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221356    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221357    +        END;
MPRINT(EM_DIAGRAM):   END;
221358    +      ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
221359    +        IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221360    +              0.46047296215175 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.46047296215175 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
221361    +          _NODE_  =                  298;
MPRINT(EM_DIAGRAM):   _NODE_ = 298;
221362    +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
221363    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221364    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221365    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221366    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221367    +          V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
221368    +          V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
221369    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221370    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221371    +          END;
MPRINT(EM_DIAGRAM):   END;
221372    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221373    +          _NODE_  =                  297;
MPRINT(EM_DIAGRAM):   _NODE_ = 297;
221374    +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
221375    +          P_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.3;
221376    +          P_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7;
221377    +          Q_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.3;
221378    +          Q_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7;
221379    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221380    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221381    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221382    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221383    +          END;
MPRINT(EM_DIAGRAM):   END;
221384    +        END;
MPRINT(EM_DIAGRAM):   END;
221385    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221386    +        _NODE_  =                  145;
MPRINT(EM_DIAGRAM):   _NODE_ = 145;
221387    +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
221388    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
221389    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
221390    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
221391    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
221392    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221393    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221394    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221395    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221396    +        END;
MPRINT(EM_DIAGRAM):   END;
221397    +      END;
MPRINT(EM_DIAGRAM):   END;
221398    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221399    +            0.557550219255 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.557550219255 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
221400    +      _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
221401    +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
221402    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221403    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221404    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221405    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221406    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221407    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221408    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221409    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221410    +      END;
MPRINT(EM_DIAGRAM):   END;
221411    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221412    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221413    +        RANGE_LOG_Total_Trans_Amt  <     0.05631631675079 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.05631631675079 THEN DO;
221414    +        _NODE_  =                  132;
MPRINT(EM_DIAGRAM):   _NODE_ = 132;
221415    +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
221416    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221417    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221418    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221419    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221420    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221421    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221422    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221423    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221424    +        END;
MPRINT(EM_DIAGRAM):   END;
221425    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221426    +            0.05631631675079 <= RANGE_LOG_Total_Trans_Amt  AND
221427    +        RANGE_LOG_Total_Trans_Amt  <     0.06681486255192 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.05631631675079 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.06681486255192 THEN DO;
221428    +        _NODE_  =                  133;
MPRINT(EM_DIAGRAM):   _NODE_ = 133;
221429    +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
221430    +        P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
221431    +        P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
221432    +        Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
221433    +        Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
221434    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221435    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221436    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221437    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221438    +        END;
MPRINT(EM_DIAGRAM):   END;
221439    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221440    +            0.08042955729796 <= RANGE_LOG_Total_Trans_Amt  AND
221441    +        RANGE_LOG_Total_Trans_Amt  <     0.08898235450693 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08042955729796 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.08898235450693 THEN DO;
221442    +        _NODE_  =                  135;
MPRINT(EM_DIAGRAM):   _NODE_ = 135;
221443    +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
221444    +        P_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.11111111111111;
221445    +        P_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.88888888888888;
221446    +        Q_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.11111111111111;
221447    +        Q_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.88888888888888;
221448    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
221449    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
221450    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221451    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221452    +        END;
MPRINT(EM_DIAGRAM):   END;
221453    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221454    +            0.08898235450693 <= RANGE_LOG_Total_Trans_Amt  AND
221455    +        RANGE_LOG_Total_Trans_Amt  <     0.09350307119369 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08898235450693 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.09350307119369 THEN DO;
221456    +        _NODE_  =                  136;
MPRINT(EM_DIAGRAM):   _NODE_ = 136;
221457    +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
221458    +        P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
221459    +        P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
221460    +        Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
221461    +        Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
221462    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221463    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221464    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221465    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221466    +        END;
MPRINT(EM_DIAGRAM):   END;
221467    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221468    +            0.09350307119369 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.09350307119369 <= RANGE_LOG_Total_Trans_Amt THEN DO;
221469    +        _NODE_  =                  137;
MPRINT(EM_DIAGRAM):   _NODE_ = 137;
221470    +        _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
221471    +        P_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.11111111111111;
221472    +        P_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.88888888888888;
221473    +        Q_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.11111111111111;
221474    +        Q_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.88888888888888;
221475    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221476    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221477    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221478    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221479    +        END;
MPRINT(EM_DIAGRAM):   END;
221480    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221481    +        _ARBFMT_12 = PUT( G_Months_on_book , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_on_book , BEST12.);
221482    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
221483    +        IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
221484    +          _NODE_  =                  291;
MPRINT(EM_DIAGRAM):   _NODE_ = 291;
221485    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
221486    +          P_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.14285714285714;
221487    +          P_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.85714285714285;
221488    +          Q_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.14285714285714;
221489    +          Q_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.85714285714285;
221490    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221491    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221492    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221493    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221494    +          END;
MPRINT(EM_DIAGRAM):   END;
221495    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221496    +          _NODE_  =                  292;
MPRINT(EM_DIAGRAM):   _NODE_ = 292;
221497    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
221498    +          P_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.71428571428571;
221499    +          P_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.28571428571428;
221500    +          Q_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.71428571428571;
221501    +          Q_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.28571428571428;
221502    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221503    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221504    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221505    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221506    +          END;
MPRINT(EM_DIAGRAM):   END;
221507    +        END;
MPRINT(EM_DIAGRAM):   END;
221508    +      END;
MPRINT(EM_DIAGRAM):   END;
221509    +    END;
MPRINT(EM_DIAGRAM):   END;
221510    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221511    +         0.2119586809694 <= RANGE_Total_Revolving_Bal  AND
221512    +    RANGE_Total_Revolving_Bal  <      0.4487485101311 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.2119586809694 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.4487485101311 THEN DO;
221513    +    _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
221514    +    _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
221515    +    P_Attrition_Flag0  =     0.88554216867469;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88554216867469;
221516    +    P_Attrition_Flag1  =      0.1144578313253;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1144578313253;
221517    +    Q_Attrition_Flag0  =     0.88554216867469;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88554216867469;
221518    +    Q_Attrition_Flag1  =      0.1144578313253;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.1144578313253;
221519    +    V_Attrition_Flag0  =     0.94545454545454;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.94545454545454;
221520    +    V_Attrition_Flag1  =     0.05454545454545;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.05454545454545;
221521    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221522    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221523    +    END;
MPRINT(EM_DIAGRAM):   END;
221524    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221525    +        0.70421136273341 <= RANGE_Total_Revolving_Bal  AND
221526    +    RANGE_Total_Revolving_Bal  <     0.81664680174811 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.70421136273341 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.81664680174811 THEN DO;
221527    +    _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
221528    +    _LEAF_  =                   27;
MPRINT(EM_DIAGRAM):   _LEAF_ = 27;
221529    +    P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221530    +    P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221531    +    Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221532    +    Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221533    +    V_Attrition_Flag0  =                0.975;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.975;
221534    +    V_Attrition_Flag1  =                0.025;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.025;
221535    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221536    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221537    +    END;
MPRINT(EM_DIAGRAM):   END;
221538    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221539    +        0.81664680174811 <= RANGE_Total_Revolving_Bal  AND
221540    +    RANGE_Total_Revolving_Bal  <      0.9487485101311 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.81664680174811 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.9487485101311 THEN DO;
221541    +    _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
221542    +    _LEAF_  =                   28;
MPRINT(EM_DIAGRAM):   _LEAF_ = 28;
221543    +    P_Attrition_Flag0  =                 0.97;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97;
221544    +    P_Attrition_Flag1  =                 0.03;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.03;
221545    +    Q_Attrition_Flag0  =                 0.97;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97;
221546    +    Q_Attrition_Flag1  =                 0.03;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.03;
221547    +    V_Attrition_Flag0  =     0.97297297297297;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97297297297297;
221548    +    V_Attrition_Flag1  =     0.02702702702702;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02702702702702;
221549    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221550    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221551    +    END;
MPRINT(EM_DIAGRAM):   END;
221552    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221553    +         0.9487485101311 <= RANGE_Total_Revolving_Bal  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.9487485101311 <= RANGE_Total_Revolving_Bal THEN DO;
221554    +    _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
221555    +    _LEAF_  =                   29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 29;
221556    +    P_Attrition_Flag0  =      0.8090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8090909090909;
221557    +    P_Attrition_Flag1  =     0.19090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.19090909090909;
221558    +    Q_Attrition_Flag0  =      0.8090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8090909090909;
221559    +    Q_Attrition_Flag1  =     0.19090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.19090909090909;
221560    +    V_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.875;
221561    +    V_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.125;
221562    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221563    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221564    +    END;
MPRINT(EM_DIAGRAM):   END;
221565    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221566    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221567    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.26609968837987 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.26609968837987 THEN DO;
221568    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221569    +            0.38536068026685 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.38536068026685 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
221570    +        _NODE_  =                  154;
MPRINT(EM_DIAGRAM):   _NODE_ = 154;
221571    +        _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
221572    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221573    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221574    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221575    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221576    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221577    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221578    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221579    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221580    +        END;
MPRINT(EM_DIAGRAM):   END;
221581    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221582    +        _NODE_  =                  153;
MPRINT(EM_DIAGRAM):   _NODE_ = 153;
221583    +        _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
221584    +        P_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.375;
221585    +        P_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.625;
221586    +        Q_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.375;
221587    +        Q_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.625;
221588    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
221589    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
221590    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221591    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221592    +        END;
MPRINT(EM_DIAGRAM):   END;
221593    +      END;
MPRINT(EM_DIAGRAM):   END;
221594    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221595    +          0.26609968837987 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221596    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.29648254109501 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.26609968837987 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.29648254109501 THEN DO;
221597    +      _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
221598    +      _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
221599    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221600    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221601    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221602    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221603    +      V_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.83333333333333;
221604    +      V_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.16666666666666;
221605    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221606    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221607    +      END;
MPRINT(EM_DIAGRAM):   END;
221608    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221609    +          0.29648254109501 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221610    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.30763852920187 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.29648254109501 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.30763852920187 THEN DO;
221611    +      _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
221612    +      _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
221613    +      P_Attrition_Flag0  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.77777777777777;
221614    +      P_Attrition_Flag1  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.22222222222222;
221615    +      Q_Attrition_Flag0  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.77777777777777;
221616    +      Q_Attrition_Flag1  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.22222222222222;
221617    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221618    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221619    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221620    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221621    +      END;
MPRINT(EM_DIAGRAM):   END;
221622    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221623    +          0.30763852920187 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221624    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.33548019013549 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.30763852920187 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.33548019013549 THEN DO;
221625    +      _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
221626    +      _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
221627    +      P_Attrition_Flag0  =                0.925;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.925;
221628    +      P_Attrition_Flag1  =                0.075;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.075;
221629    +      Q_Attrition_Flag0  =                0.925;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.925;
221630    +      Q_Attrition_Flag1  =                0.075;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.075;
221631    +      V_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.85714285714285;
221632    +      V_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.14285714285714;
221633    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221634    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221635    +      END;
MPRINT(EM_DIAGRAM):   END;
221636    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
221637    +          0.33548019013549 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
221638    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.37597459920657 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.33548019013549 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.37597459920657 THEN DO;
221639    +      _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
221640    +      _LEAF_  =                   25;
MPRINT(EM_DIAGRAM):   _LEAF_ = 25;
221641    +      P_Attrition_Flag0  =     0.98630136986301;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98630136986301;
221642    +      P_Attrition_Flag1  =     0.01369863013698;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01369863013698;
221643    +      Q_Attrition_Flag0  =     0.98630136986301;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98630136986301;
221644    +      Q_Attrition_Flag1  =     0.01369863013698;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01369863013698;
221645    +      V_Attrition_Flag0  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.94444444444444;
221646    +      V_Attrition_Flag1  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.05555555555555;
221647    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221648    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221649    +      END;
MPRINT(EM_DIAGRAM):   END;
221650    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221651    +      _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
221652    +      _LEAF_  =                   26;
MPRINT(EM_DIAGRAM):   _LEAF_ = 26;
221653    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221654    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221655    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221656    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221657    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221658    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221659    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221660    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221661    +      END;
MPRINT(EM_DIAGRAM):   END;
221662    +    END;
MPRINT(EM_DIAGRAM):   END;
221663    +  END;
MPRINT(EM_DIAGRAM):   END;
221664    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221665    +      0.10171724739083 <= RANGE_LOG_Total_Trans_Amt  AND
221666    +  RANGE_LOG_Total_Trans_Amt  <     0.18180873549344 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.10171724739083 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.18180873549344 THEN DO;
221667    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221668    +    RANGE_Total_Revolving_Bal  <     0.05542312276519 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.05542312276519 THEN DO;
221669    +    _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
221670    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
221671    +    IF _ARBFMT_12 IN ('7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('7' ) THEN DO;
221672    +      _NODE_  =                   65;
MPRINT(EM_DIAGRAM):   _NODE_ = 65;
221673    +      _LEAF_  =                   30;
MPRINT(EM_DIAGRAM):   _LEAF_ = 30;
221674    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221675    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221676    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221677    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221678    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221679    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221680    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221681    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221682    +      END;
MPRINT(EM_DIAGRAM):   END;
221683    +    ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
221684    +      _NODE_  =                   66;
MPRINT(EM_DIAGRAM):   _NODE_ = 66;
221685    +      _LEAF_  =                   31;
MPRINT(EM_DIAGRAM):   _LEAF_ = 31;
221686    +      P_Attrition_Flag0  =     0.93023255813953;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93023255813953;
221687    +      P_Attrition_Flag1  =     0.06976744186046;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06976744186046;
221688    +      Q_Attrition_Flag0  =     0.93023255813953;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93023255813953;
221689    +      Q_Attrition_Flag1  =     0.06976744186046;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06976744186046;
221690    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
221691    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
221692    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221693    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221694    +      END;
MPRINT(EM_DIAGRAM):   END;
221695    +    ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
221696    +      _NODE_  =                   67;
MPRINT(EM_DIAGRAM):   _NODE_ = 67;
221697    +      _LEAF_  =                   32;
MPRINT(EM_DIAGRAM):   _LEAF_ = 32;
221698    +      P_Attrition_Flag0  =             0.296875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.296875;
221699    +      P_Attrition_Flag1  =             0.703125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.703125;
221700    +      Q_Attrition_Flag0  =             0.296875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.296875;
221701    +      Q_Attrition_Flag1  =             0.703125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.703125;
221702    +      V_Attrition_Flag0  =     0.27777777777777;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.27777777777777;
221703    +      V_Attrition_Flag1  =     0.72222222222222;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.72222222222222;
221704    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221705    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221706    +      END;
MPRINT(EM_DIAGRAM):   END;
221707    +    ELSE IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
221708    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221709    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.39237639480992 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.39237639480992 THEN DO;
221710    +        _NODE_  =                  178;
MPRINT(EM_DIAGRAM):   _NODE_ = 178;
221711    +        _LEAF_  =                   33;
MPRINT(EM_DIAGRAM):   _LEAF_ = 33;
221712    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
221713    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
221714    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
221715    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
221716    +        V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
221717    +        V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
221718    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221719    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221720    +        END;
MPRINT(EM_DIAGRAM):   END;
221721    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221722    +            0.39237639480992 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221723    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.40656129467709 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.39237639480992 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.40656129467709 THEN DO;
221724    +        _NODE_  =                  179;
MPRINT(EM_DIAGRAM):   _NODE_ = 179;
221725    +        _LEAF_  =                   34;
MPRINT(EM_DIAGRAM):   _LEAF_ = 34;
221726    +        P_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.3;
221727    +        P_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7;
221728    +        Q_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.3;
221729    +        Q_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7;
221730    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221731    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221732    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221733    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221734    +        END;
MPRINT(EM_DIAGRAM):   END;
221735    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221736    +            0.45539942631941 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221737    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4679918630084 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.45539942631941 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4679918630084 THEN DO;
221738    +        _NODE_  =                  181;
MPRINT(EM_DIAGRAM):   _NODE_ = 181;
221739    +        _LEAF_  =                   36;
MPRINT(EM_DIAGRAM):   _LEAF_ = 36;
221740    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
221741    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
221742    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
221743    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
221744    +        V_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.16666666666666;
221745    +        V_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.83333333333333;
221746    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221747    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221748    +        END;
MPRINT(EM_DIAGRAM):   END;
221749    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221750    +             0.4679918630084 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221751    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.52798824045043 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.4679918630084 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.52798824045043 THEN DO;
221752    +        _NODE_  =                  182;
MPRINT(EM_DIAGRAM):   _NODE_ = 182;
221753    +        _LEAF_  =                   37;
MPRINT(EM_DIAGRAM):   _LEAF_ = 37;
221754    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
221755    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
221756    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
221757    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
221758    +        V_Attrition_Flag0  =     0.31578947368421;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.31578947368421;
221759    +        V_Attrition_Flag1  =     0.68421052631578;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.68421052631578;
221760    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221761    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221762    +        END;
MPRINT(EM_DIAGRAM):   END;
221763    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221764    +            0.52798824045043 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.52798824045043 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
221765    +        _NODE_  =                  183;
MPRINT(EM_DIAGRAM):   _NODE_ = 183;
221766    +        _LEAF_  =                   38;
MPRINT(EM_DIAGRAM):   _LEAF_ = 38;
221767    +        P_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85714285714285;
221768    +        P_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14285714285714;
221769    +        Q_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85714285714285;
221770    +        Q_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14285714285714;
221771    +        V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
221772    +        V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
221773    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221774    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221775    +        END;
MPRINT(EM_DIAGRAM):   END;
221776    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221777    +        _NODE_  =                  180;
MPRINT(EM_DIAGRAM):   _NODE_ = 180;
221778    +        _LEAF_  =                   35;
MPRINT(EM_DIAGRAM):   _LEAF_ = 35;
221779    +        P_Attrition_Flag0  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.08333333333333;
221780    +        P_Attrition_Flag1  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.91666666666666;
221781    +        Q_Attrition_Flag0  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.08333333333333;
221782    +        Q_Attrition_Flag1  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.91666666666666;
221783    +        V_Attrition_Flag0  =      0.1578947368421;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.1578947368421;
221784    +        V_Attrition_Flag1  =     0.84210526315789;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.84210526315789;
221785    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221786    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221787    +        END;
MPRINT(EM_DIAGRAM):   END;
221788    +      END;
MPRINT(EM_DIAGRAM):   END;
221789    +    ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
221790    +      _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
221791    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
221792    +      IF _ARBFMT_12 IN ('5' ,'6' ,'7' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'7' ,'3' ) THEN DO;
221793    +        _NODE_  =                  190;
MPRINT(EM_DIAGRAM):   _NODE_ = 190;
221794    +        _LEAF_  =                   40;
MPRINT(EM_DIAGRAM):   _LEAF_ = 40;
221795    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
221796    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
221797    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
221798    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
221799    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221800    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221801    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221802    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221803    +        END;
MPRINT(EM_DIAGRAM):   END;
221804    +      ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
221805    +        _NODE_  =                  191;
MPRINT(EM_DIAGRAM):   _NODE_ = 191;
221806    +        _LEAF_  =                   41;
MPRINT(EM_DIAGRAM):   _LEAF_ = 41;
221807    +        P_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05263157894736;
221808    +        P_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94736842105263;
221809    +        Q_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05263157894736;
221810    +        Q_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94736842105263;
221811    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221812    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221813    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221814    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221815    +        END;
MPRINT(EM_DIAGRAM):   END;
221816    +      ELSE IF _ARBFMT_12 IN ('8' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('8' ) THEN DO;
221817    +        _NODE_  =                  192;
MPRINT(EM_DIAGRAM):   _NODE_ = 192;
221818    +        _LEAF_  =                   42;
MPRINT(EM_DIAGRAM):   _LEAF_ = 42;
221819    +        P_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.57142857142857;
221820    +        P_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.42857142857142;
221821    +        Q_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.57142857142857;
221822    +        Q_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.42857142857142;
221823    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
221824    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
221825    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221826    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221827    +        END;
MPRINT(EM_DIAGRAM):   END;
221828    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221829    +        _NODE_  =                  193;
MPRINT(EM_DIAGRAM):   _NODE_ = 193;
221830    +        _LEAF_  =                   43;
MPRINT(EM_DIAGRAM):   _LEAF_ = 43;
221831    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
221832    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
221833    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
221834    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
221835    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221836    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221837    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221838    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221839    +        END;
MPRINT(EM_DIAGRAM):   END;
221840    +      END;
MPRINT(EM_DIAGRAM):   END;
221841    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221842    +      _NODE_  =                   69;
MPRINT(EM_DIAGRAM):   _NODE_ = 69;
221843    +      _LEAF_  =                   39;
MPRINT(EM_DIAGRAM):   _LEAF_ = 39;
221844    +      P_Attrition_Flag0  =     0.12781954887218;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.12781954887218;
221845    +      P_Attrition_Flag1  =     0.87218045112781;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.87218045112781;
221846    +      Q_Attrition_Flag0  =     0.12781954887218;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.12781954887218;
221847    +      Q_Attrition_Flag1  =     0.87218045112781;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.87218045112781;
221848    +      V_Attrition_Flag0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.17647058823529;
221849    +      V_Attrition_Flag1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8235294117647;
221850    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221851    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221852    +      END;
MPRINT(EM_DIAGRAM):   END;
221853    +    END;
MPRINT(EM_DIAGRAM):   END;
221854    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221855    +        0.05542312276519 <= RANGE_Total_Revolving_Bal  AND
221856    +    RANGE_Total_Revolving_Bal  <     0.17381803734604 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.05542312276519 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.17381803734604 THEN DO;
221857    +    _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
221858    +    _LEAF_  =                   44;
MPRINT(EM_DIAGRAM):   _LEAF_ = 44;
221859    +    P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
221860    +    P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
221861    +    Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
221862    +    Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
221863    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221864    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221865    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221866    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221867    +    END;
MPRINT(EM_DIAGRAM):   END;
221868    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221869    +        0.17381803734604 <= RANGE_Total_Revolving_Bal  AND
221870    +    RANGE_Total_Revolving_Bal  <     0.23182359952324 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.17381803734604 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.23182359952324 THEN DO;
221871    +    _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
221872    +    _LEAF_  =                   45;
MPRINT(EM_DIAGRAM):   _LEAF_ = 45;
221873    +    P_Attrition_Flag0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.23529411764705;
221874    +    P_Attrition_Flag1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.76470588235294;
221875    +    Q_Attrition_Flag0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.23529411764705;
221876    +    Q_Attrition_Flag1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.76470588235294;
221877    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221878    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221879    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221880    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221881    +    END;
MPRINT(EM_DIAGRAM):   END;
221882    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
221883    +        0.23182359952324 <= RANGE_Total_Revolving_Bal  AND
221884    +    RANGE_Total_Revolving_Bal  <     0.44378228049265 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.23182359952324 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.44378228049265 THEN DO;
221885    +    _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
221886    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
221887    +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
221888    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221889    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4326596741372 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4326596741372 THEN DO;
221890    +        _NODE_  =                  194;
MPRINT(EM_DIAGRAM):   _NODE_ = 194;
221891    +        _LEAF_  =                   46;
MPRINT(EM_DIAGRAM):   _LEAF_ = 46;
221892    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
221893    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
221894    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
221895    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
221896    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221897    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221898    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221899    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221900    +        END;
MPRINT(EM_DIAGRAM):   END;
221901    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221902    +            0.49070999374543 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49070999374543 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
221903    +        _NODE_  =                  196;
MPRINT(EM_DIAGRAM):   _NODE_ = 196;
221904    +        _LEAF_  =                   48;
MPRINT(EM_DIAGRAM):   _LEAF_ = 48;
221905    +        P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
221906    +        P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
221907    +        Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
221908    +        Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
221909    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221910    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221911    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221912    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221913    +        END;
MPRINT(EM_DIAGRAM):   END;
221914    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221915    +        _NODE_  =                  195;
MPRINT(EM_DIAGRAM):   _NODE_ = 195;
221916    +        _LEAF_  =                   47;
MPRINT(EM_DIAGRAM):   _LEAF_ = 47;
221917    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
221918    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
221919    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
221920    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
221921    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
221922    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
221923    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221924    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221925    +        END;
MPRINT(EM_DIAGRAM):   END;
221926    +      END;
MPRINT(EM_DIAGRAM):   END;
221927    +    ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
221928    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221929    +            0.43708075565352 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221930    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.47032331248188 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.43708075565352 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.47032331248188 THEN DO;
221931    +        _NODE_  =                  198;
MPRINT(EM_DIAGRAM):   _NODE_ = 198;
221932    +        _LEAF_  =                   50;
MPRINT(EM_DIAGRAM):   _LEAF_ = 50;
221933    +        P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
221934    +        P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
221935    +        Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
221936    +        Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
221937    +        V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
221938    +        V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
221939    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221940    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221941    +        END;
MPRINT(EM_DIAGRAM):   END;
221942    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221943    +            0.47032331248188 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221944    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.48206386496214 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.47032331248188 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.48206386496214 THEN DO;
221945    +        _NODE_  =                  199;
MPRINT(EM_DIAGRAM):   _NODE_ = 199;
221946    +        _LEAF_  =                   51;
MPRINT(EM_DIAGRAM):   _LEAF_ = 51;
221947    +        P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
221948    +        P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
221949    +        Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
221950    +        Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
221951    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221952    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221953    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221954    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221955    +        END;
MPRINT(EM_DIAGRAM):   END;
221956    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221957    +            0.48206386496214 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
221958    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51541574834001 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48206386496214 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51541574834001 THEN DO;
221959    +        _NODE_  =                  200;
MPRINT(EM_DIAGRAM):   _NODE_ = 200;
221960    +        _LEAF_  =                   52;
MPRINT(EM_DIAGRAM):   _LEAF_ = 52;
221961    +        P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
221962    +        P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
221963    +        Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
221964    +        Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
221965    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
221966    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
221967    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221968    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221969    +        END;
MPRINT(EM_DIAGRAM):   END;
221970    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
221971    +            0.51541574834001 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51541574834001 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
221972    +        _NODE_  =                  201;
MPRINT(EM_DIAGRAM):   _NODE_ = 201;
221973    +        _LEAF_  =                   53;
MPRINT(EM_DIAGRAM):   _LEAF_ = 53;
221974    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
221975    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
221976    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
221977    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
221978    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
221979    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
221980    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
221981    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
221982    +        END;
MPRINT(EM_DIAGRAM):   END;
221983    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
221984    +        _NODE_  =                  197;
MPRINT(EM_DIAGRAM):   _NODE_ = 197;
221985    +        _LEAF_  =                   49;
MPRINT(EM_DIAGRAM):   _LEAF_ = 49;
221986    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
221987    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
221988    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
221989    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
221990    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
221991    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
221992    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
221993    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
221994    +        END;
MPRINT(EM_DIAGRAM):   END;
221995    +      END;
MPRINT(EM_DIAGRAM):   END;
221996    +    ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
221997    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
221998    +        RANGE_LOG_Total_Trans_Amt  <     0.10973593714649 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.10973593714649 THEN DO;
221999    +        _NODE_  =                  202;
MPRINT(EM_DIAGRAM):   _NODE_ = 202;
222000    +        _LEAF_  =                   54;
MPRINT(EM_DIAGRAM):   _LEAF_ = 54;
222001    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222002    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222003    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222004    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222005    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
222006    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
222007    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222008    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222009    +        END;
MPRINT(EM_DIAGRAM):   END;
222010    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222011    +            0.12729564500095 <= RANGE_LOG_Total_Trans_Amt  AND
222012    +        RANGE_LOG_Total_Trans_Amt  <     0.14613124197535 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.12729564500095 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.14613124197535 THEN DO;
222013    +        _NODE_  =                  204;
MPRINT(EM_DIAGRAM):   _NODE_ = 204;
222014    +        _LEAF_  =                   56;
MPRINT(EM_DIAGRAM):   _LEAF_ = 56;
222015    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
222016    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
222017    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
222018    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
222019    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222020    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222021    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222022    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222023    +        END;
MPRINT(EM_DIAGRAM):   END;
222024    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222025    +            0.14613124197535 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.14613124197535 <= RANGE_LOG_Total_Trans_Amt THEN DO;
222026    +        _NODE_  =                  205;
MPRINT(EM_DIAGRAM):   _NODE_ = 205;
222027    +        _LEAF_  =                   57;
MPRINT(EM_DIAGRAM):   _LEAF_ = 57;
222028    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
222029    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
222030    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
222031    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
222032    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
222033    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
222034    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222035    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222036    +        END;
MPRINT(EM_DIAGRAM):   END;
222037    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222038    +        _NODE_  =                  203;
MPRINT(EM_DIAGRAM):   _NODE_ = 203;
222039    +        _LEAF_  =                   55;
MPRINT(EM_DIAGRAM):   _LEAF_ = 55;
222040    +        P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
222041    +        P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
222042    +        Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
222043    +        Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
222044    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
222045    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
222046    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222047    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222048    +        END;
MPRINT(EM_DIAGRAM):   END;
222049    +      END;
MPRINT(EM_DIAGRAM):   END;
222050    +    ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
222051    +      _NODE_  =                   78;
MPRINT(EM_DIAGRAM):   _NODE_ = 78;
222052    +      _LEAF_  =                   58;
MPRINT(EM_DIAGRAM):   _LEAF_ = 58;
222053    +      P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
222054    +      P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
222055    +      Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
222056    +      Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
222057    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
222058    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
222059    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222060    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222061    +      END;
MPRINT(EM_DIAGRAM):   END;
222062    +    ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
222063    +      _NODE_  =                   79;
MPRINT(EM_DIAGRAM):   _NODE_ = 79;
222064    +      _LEAF_  =                   59;
MPRINT(EM_DIAGRAM):   _LEAF_ = 59;
222065    +      P_Attrition_Flag0  =     0.96296296296296;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.96296296296296;
222066    +      P_Attrition_Flag1  =     0.03703703703703;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.03703703703703;
222067    +      Q_Attrition_Flag0  =     0.96296296296296;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.96296296296296;
222068    +      Q_Attrition_Flag1  =     0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.03703703703703;
222069    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
222070    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
222071    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222072    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222073    +      END;
MPRINT(EM_DIAGRAM):   END;
222074    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222075    +      _NODE_  =                   80;
MPRINT(EM_DIAGRAM):   _NODE_ = 80;
222076    +      _LEAF_  =                   60;
MPRINT(EM_DIAGRAM):   _LEAF_ = 60;
222077    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222078    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222079    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222080    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222081    +      V_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.71428571428571;
222082    +      V_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.28571428571428;
222083    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222084    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222085    +      END;
MPRINT(EM_DIAGRAM):   END;
222086    +    END;
MPRINT(EM_DIAGRAM):   END;
222087    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
222088    +        0.94616607071911 <= RANGE_Total_Revolving_Bal  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.94616607071911 <= RANGE_Total_Revolving_Bal THEN DO;
222089    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222090    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.41675012341901 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.41675012341901 THEN DO;
222091    +      _NODE_  =                   87;
MPRINT(EM_DIAGRAM):   _NODE_ = 87;
222092    +      _LEAF_  =                   81;
MPRINT(EM_DIAGRAM):   _LEAF_ = 81;
222093    +      P_Attrition_Flag0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.26923076923076;
222094    +      P_Attrition_Flag1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.73076923076923;
222095    +      Q_Attrition_Flag0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.26923076923076;
222096    +      Q_Attrition_Flag1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.73076923076923;
222097    +      V_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.11111111111111;
222098    +      V_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.88888888888888;
222099    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222100    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222101    +      END;
MPRINT(EM_DIAGRAM):   END;
222102    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222103    +          0.41675012341901 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222104    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.43201250224123 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.41675012341901 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.43201250224123 THEN DO;
222105    +      _NODE_  =                   88;
MPRINT(EM_DIAGRAM):   _NODE_ = 88;
222106    +      _LEAF_  =                   82;
MPRINT(EM_DIAGRAM):   _LEAF_ = 82;
222107    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
222108    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
222109    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
222110    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
222111    +      V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
222112    +      V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
222113    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222114    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222115    +      END;
MPRINT(EM_DIAGRAM):   END;
222116    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222117    +          0.43201250224123 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222118    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.45199138620858 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.43201250224123 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.45199138620858 THEN DO;
222119    +      _NODE_  =                   89;
MPRINT(EM_DIAGRAM):   _NODE_ = 89;
222120    +      _LEAF_  =                   83;
MPRINT(EM_DIAGRAM):   _LEAF_ = 83;
222121    +      P_Attrition_Flag0  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.30434782608695;
222122    +      P_Attrition_Flag1  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.69565217391304;
222123    +      Q_Attrition_Flag0  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.30434782608695;
222124    +      Q_Attrition_Flag1  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.69565217391304;
222125    +      V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
222126    +      V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
222127    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222128    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222129    +      END;
MPRINT(EM_DIAGRAM):   END;
222130    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222131    +          0.45199138620858 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222132    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.46277307645394 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.45199138620858 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.46277307645394 THEN DO;
222133    +      _NODE_  =                   90;
MPRINT(EM_DIAGRAM):   _NODE_ = 90;
222134    +      _LEAF_  =                   84;
MPRINT(EM_DIAGRAM):   _LEAF_ = 84;
222135    +      P_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09090909090909;
222136    +      P_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9090909090909;
222137    +      Q_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09090909090909;
222138    +      Q_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9090909090909;
222139    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222140    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222141    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222142    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222143    +      END;
MPRINT(EM_DIAGRAM):   END;
222144    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222145    +          0.54065639603327 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.54065639603327 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
222146    +      _NODE_  =                   92;
MPRINT(EM_DIAGRAM):   _NODE_ = 92;
222147    +      _LEAF_  =                   89;
MPRINT(EM_DIAGRAM):   _LEAF_ = 89;
222148    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222149    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222150    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222151    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222152    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222153    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222154    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222155    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222156    +      END;
MPRINT(EM_DIAGRAM):   END;
222157    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222158    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222159    +            0.13751080906898 <= RANGE_LOG_Total_Trans_Amt  AND
222160    +        RANGE_LOG_Total_Trans_Amt  <     0.15664697005632 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.13751080906898 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.15664697005632 THEN DO;
222161    +        _NODE_  =                  249;
MPRINT(EM_DIAGRAM):   _NODE_ = 249;
222162    +        _LEAF_  =                   86;
MPRINT(EM_DIAGRAM):   _LEAF_ = 86;
222163    +        P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
222164    +        P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
222165    +        Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
222166    +        Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
222167    +        V_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.2;
222168    +        V_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8;
222169    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222170    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222171    +        END;
MPRINT(EM_DIAGRAM):   END;
222172    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222173    +            0.15664697005632 <= RANGE_LOG_Total_Trans_Amt  AND
222174    +        RANGE_LOG_Total_Trans_Amt  <     0.16314894488569 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.15664697005632 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.16314894488569 THEN DO;
222175    +        _NODE_  =                  250;
MPRINT(EM_DIAGRAM):   _NODE_ = 250;
222176    +        _LEAF_  =                   87;
MPRINT(EM_DIAGRAM):   _LEAF_ = 87;
222177    +        P_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.22222222222222;
222178    +        P_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.77777777777777;
222179    +        Q_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.22222222222222;
222180    +        Q_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.77777777777777;
222181    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222182    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222183    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222184    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222185    +        END;
MPRINT(EM_DIAGRAM):   END;
222186    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222187    +            0.16314894488569 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.16314894488569 <= RANGE_LOG_Total_Trans_Amt THEN DO;
222188    +        _NODE_  =                  251;
MPRINT(EM_DIAGRAM):   _NODE_ = 251;
222189    +        _LEAF_  =                   88;
MPRINT(EM_DIAGRAM):   _LEAF_ = 88;
222190    +        P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
222191    +        P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
222192    +        Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
222193    +        Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
222194    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222195    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222196    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222197    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222198    +        END;
MPRINT(EM_DIAGRAM):   END;
222199    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222200    +        _NODE_  =                  248;
MPRINT(EM_DIAGRAM):   _NODE_ = 248;
222201    +        _LEAF_  =                   85;
MPRINT(EM_DIAGRAM):   _LEAF_ = 85;
222202    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222203    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222204    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222205    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222206    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
222207    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
222208    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222209    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222210    +        END;
MPRINT(EM_DIAGRAM):   END;
222211    +      END;
MPRINT(EM_DIAGRAM):   END;
222212    +    END;
MPRINT(EM_DIAGRAM):   END;
222213    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222214    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222215    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.39722304151513 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.39722304151513 THEN DO;
222216    +      _NODE_  =                   81;
MPRINT(EM_DIAGRAM):   _NODE_ = 81;
222217    +      _LEAF_  =                   61;
MPRINT(EM_DIAGRAM):   _LEAF_ = 61;
222218    +      P_Attrition_Flag0  =     0.41509433962264;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.41509433962264;
222219    +      P_Attrition_Flag1  =     0.58490566037735;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.58490566037735;
222220    +      Q_Attrition_Flag0  =     0.41509433962264;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.41509433962264;
222221    +      Q_Attrition_Flag1  =     0.58490566037735;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.58490566037735;
222222    +      V_Attrition_Flag0  =     0.27272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.27272727272727;
222223    +      V_Attrition_Flag1  =     0.72727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.72727272727272;
222224    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222225    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222226    +      END;
MPRINT(EM_DIAGRAM):   END;
222227    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222228    +          0.39722304151513 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222229    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.40310815789239 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.39722304151513 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.40310815789239 THEN DO;
222230    +      _NODE_  =                   82;
MPRINT(EM_DIAGRAM):   _NODE_ = 82;
222231    +      _LEAF_  =                   62;
MPRINT(EM_DIAGRAM):   _LEAF_ = 62;
222232    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222233    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222234    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222235    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222236    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222237    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222238    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222239    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222240    +      END;
MPRINT(EM_DIAGRAM):   END;
222241    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222242    +          0.48285277403813 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222243    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.48815824887731 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48285277403813 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.48815824887731 THEN DO;
222244    +      _NODE_  =                   84;
MPRINT(EM_DIAGRAM):   _NODE_ = 84;
222245    +      _LEAF_  =                   73;
MPRINT(EM_DIAGRAM):   _LEAF_ = 73;
222246    +      P_Attrition_Flag0  =     0.95652173913043;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.95652173913043;
222247    +      P_Attrition_Flag1  =     0.04347826086956;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.04347826086956;
222248    +      Q_Attrition_Flag0  =     0.95652173913043;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.95652173913043;
222249    +      Q_Attrition_Flag1  =     0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.04347826086956;
222250    +      V_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8;
222251    +      V_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.2;
222252    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222253    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222254    +      END;
MPRINT(EM_DIAGRAM):   END;
222255    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222256    +          0.48815824887731 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222257    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51127980701015 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48815824887731 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51127980701015 THEN DO;
222258    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222259    +            0.37166695401491 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222260    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.44854901735868 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.37166695401491 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.44854901735868 THEN DO;
222261    +        _NODE_  =                  229;
MPRINT(EM_DIAGRAM):   _NODE_ = 229;
222262    +        _LEAF_  =                   75;
MPRINT(EM_DIAGRAM):   _LEAF_ = 75;
222263    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
222264    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
222265    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
222266    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
222267    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222268    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222269    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222270    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222271    +        END;
MPRINT(EM_DIAGRAM):   END;
222272    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222273    +            0.44854901735868 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222274    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.58116784979219 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.44854901735868 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.58116784979219 THEN DO;
222275    +        _NODE_  =                  230;
MPRINT(EM_DIAGRAM):   _NODE_ = 230;
222276    +        _LEAF_  =                   76;
MPRINT(EM_DIAGRAM):   _LEAF_ = 76;
222277    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
222278    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
222279    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
222280    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
222281    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222282    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222283    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222284    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222285    +        END;
MPRINT(EM_DIAGRAM):   END;
222286    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222287    +            0.58116784979219 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222288    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.82532759775396 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.58116784979219 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.82532759775396 THEN DO;
222289    +        _NODE_  =                  231;
MPRINT(EM_DIAGRAM):   _NODE_ = 231;
222290    +        _LEAF_  =                   77;
MPRINT(EM_DIAGRAM):   _LEAF_ = 77;
222291    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
222292    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
222293    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
222294    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
222295    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222296    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222297    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222298    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222299    +        END;
MPRINT(EM_DIAGRAM):   END;
222300    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222301    +            0.82532759775396 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222302    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.89487316725644 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.82532759775396 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.89487316725644 THEN DO;
222303    +        _NODE_  =                  232;
MPRINT(EM_DIAGRAM):   _NODE_ = 232;
222304    +        _LEAF_  =                   78;
MPRINT(EM_DIAGRAM):   _LEAF_ = 78;
222305    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
222306    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
222307    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
222308    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
222309    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222310    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222311    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222312    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222313    +        END;
MPRINT(EM_DIAGRAM):   END;
222314    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222315    +            0.89487316725644 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.89487316725644 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
222316    +        _NODE_  =                  233;
MPRINT(EM_DIAGRAM):   _NODE_ = 233;
222317    +        _LEAF_  =                   79;
MPRINT(EM_DIAGRAM):   _LEAF_ = 79;
222318    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
222319    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
222320    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
222321    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
222322    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222323    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222324    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222325    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222326    +        END;
MPRINT(EM_DIAGRAM):   END;
222327    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222328    +        _NODE_  =                  228;
MPRINT(EM_DIAGRAM):   _NODE_ = 228;
222329    +        _LEAF_  =                   74;
MPRINT(EM_DIAGRAM):   _LEAF_ = 74;
222330    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222331    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222332    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222333    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222334    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222335    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222336    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222337    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222338    +        END;
MPRINT(EM_DIAGRAM):   END;
222339    +      END;
MPRINT(EM_DIAGRAM):   END;
222340    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222341    +          0.51127980701015 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51127980701015 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
222342    +      _NODE_  =                   86;
MPRINT(EM_DIAGRAM):   _NODE_ = 86;
222343    +      _LEAF_  =                   80;
MPRINT(EM_DIAGRAM):   _LEAF_ = 80;
222344    +      P_Attrition_Flag0  =     0.97029702970297;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97029702970297;
222345    +      P_Attrition_Flag1  =     0.02970297029702;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.02970297029702;
222346    +      Q_Attrition_Flag0  =     0.97029702970297;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97029702970297;
222347    +      Q_Attrition_Flag1  =     0.02970297029702;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.02970297029702;
222348    +      V_Attrition_Flag0  =     0.98360655737704;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.98360655737704;
222349    +      V_Attrition_Flag1  =     0.01639344262295;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.01639344262295;
222350    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222351    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222352    +      END;
MPRINT(EM_DIAGRAM):   END;
222353    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222354    +      _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
222355    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
222356    +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
222357    +        _NODE_  =                  220;
MPRINT(EM_DIAGRAM):   _NODE_ = 220;
222358    +        _LEAF_  =                   63;
MPRINT(EM_DIAGRAM):   _LEAF_ = 63;
222359    +        P_Attrition_Flag0  =     0.54166666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.54166666666666;
222360    +        P_Attrition_Flag1  =     0.45833333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.45833333333333;
222361    +        Q_Attrition_Flag0  =     0.54166666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.54166666666666;
222362    +        Q_Attrition_Flag1  =     0.45833333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.45833333333333;
222363    +        V_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.875;
222364    +        V_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.125;
222365    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222366    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222367    +        END;
MPRINT(EM_DIAGRAM):   END;
222368    +      ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
222369    +        _NODE_  =                  221;
MPRINT(EM_DIAGRAM):   _NODE_ = 221;
222370    +        _LEAF_  =                   64;
MPRINT(EM_DIAGRAM):   _LEAF_ = 64;
222371    +        P_Attrition_Flag0  =     0.59523809523809;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.59523809523809;
222372    +        P_Attrition_Flag1  =      0.4047619047619;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4047619047619;
222373    +        Q_Attrition_Flag0  =     0.59523809523809;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.59523809523809;
222374    +        Q_Attrition_Flag1  =      0.4047619047619;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4047619047619;
222375    +        V_Attrition_Flag0  =     0.72727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.72727272727272;
222376    +        V_Attrition_Flag1  =     0.27272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.27272727272727;
222377    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222378    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222379    +        END;
MPRINT(EM_DIAGRAM):   END;
222380    +      ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
222381    +        IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222382    +          RANGE_LOG_Total_Trans_Amt  <     0.10847073353612 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.10847073353612 THEN DO;
222383    +          _NODE_  =                  338;
MPRINT(EM_DIAGRAM):   _NODE_ = 338;
222384    +          _LEAF_  =                   65;
MPRINT(EM_DIAGRAM):   _LEAF_ = 65;
222385    +          P_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85714285714285;
222386    +          P_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14285714285714;
222387    +          Q_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85714285714285;
222388    +          Q_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14285714285714;
222389    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222390    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222391    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222392    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222393    +          END;
MPRINT(EM_DIAGRAM):   END;
222394    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222395    +              0.12140456226343 <= RANGE_LOG_Total_Trans_Amt  AND
222396    +          RANGE_LOG_Total_Trans_Amt  <     0.13553922283853 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.12140456226343 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.13553922283853 THEN DO;
222397    +          _NODE_  =                  340;
MPRINT(EM_DIAGRAM):   _NODE_ = 340;
222398    +          _LEAF_  =                   67;
MPRINT(EM_DIAGRAM):   _LEAF_ = 67;
222399    +          P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
222400    +          P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
222401    +          Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
222402    +          Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
222403    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222404    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222405    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222406    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222407    +          END;
MPRINT(EM_DIAGRAM):   END;
222408    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222409    +              0.13553922283853 <= RANGE_LOG_Total_Trans_Amt  AND
222410    +          RANGE_LOG_Total_Trans_Amt  <      0.1494269099783 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.13553922283853 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.1494269099783 THEN DO;
222411    +          _NODE_  =                  341;
MPRINT(EM_DIAGRAM):   _NODE_ = 341;
222412    +          _LEAF_  =                   68;
MPRINT(EM_DIAGRAM):   _LEAF_ = 68;
222413    +          P_Attrition_Flag0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.28571428571428;
222414    +          P_Attrition_Flag1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.71428571428571;
222415    +          Q_Attrition_Flag0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.28571428571428;
222416    +          Q_Attrition_Flag1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.71428571428571;
222417    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222418    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222419    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222420    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222421    +          END;
MPRINT(EM_DIAGRAM):   END;
222422    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222423    +               0.1494269099783 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.1494269099783 <= RANGE_LOG_Total_Trans_Amt THEN DO;
222424    +          _NODE_  =                  342;
MPRINT(EM_DIAGRAM):   _NODE_ = 342;
222425    +          _LEAF_  =                   69;
MPRINT(EM_DIAGRAM):   _LEAF_ = 69;
222426    +          P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
222427    +          P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
222428    +          Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
222429    +          Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
222430    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222431    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222432    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222433    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222434    +          END;
MPRINT(EM_DIAGRAM):   END;
222435    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222436    +          _NODE_  =                  339;
MPRINT(EM_DIAGRAM):   _NODE_ = 339;
222437    +          _LEAF_  =                   66;
MPRINT(EM_DIAGRAM):   _LEAF_ = 66;
222438    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222439    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222440    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222441    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222442    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222443    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222444    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222445    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222446    +          END;
MPRINT(EM_DIAGRAM):   END;
222447    +        END;
MPRINT(EM_DIAGRAM):   END;
222448    +      ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
222449    +        _NODE_  =                  223;
MPRINT(EM_DIAGRAM):   _NODE_ = 223;
222450    +        _LEAF_  =                   70;
MPRINT(EM_DIAGRAM):   _LEAF_ = 70;
222451    +        P_Attrition_Flag0  =     0.85185185185185;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85185185185185;
222452    +        P_Attrition_Flag1  =     0.14814814814814;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14814814814814;
222453    +        Q_Attrition_Flag0  =     0.85185185185185;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85185185185185;
222454    +        Q_Attrition_Flag1  =     0.14814814814814;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14814814814814;
222455    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222456    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222457    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222458    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222459    +        END;
MPRINT(EM_DIAGRAM):   END;
222460    +      ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
222461    +        _NODE_  =                  224;
MPRINT(EM_DIAGRAM):   _NODE_ = 224;
222462    +        _LEAF_  =                   71;
MPRINT(EM_DIAGRAM):   _LEAF_ = 71;
222463    +        P_Attrition_Flag0  =                 0.88;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88;
222464    +        P_Attrition_Flag1  =                 0.12;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.12;
222465    +        Q_Attrition_Flag0  =                 0.88;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88;
222466    +        Q_Attrition_Flag1  =                 0.12;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.12;
222467    +        V_Attrition_Flag0  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.78571428571428;
222468    +        V_Attrition_Flag1  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.21428571428571;
222469    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222470    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222471    +        END;
MPRINT(EM_DIAGRAM):   END;
222472    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222473    +        _NODE_  =                  225;
MPRINT(EM_DIAGRAM):   _NODE_ = 225;
222474    +        _LEAF_  =                   72;
MPRINT(EM_DIAGRAM):   _LEAF_ = 72;
222475    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222476    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222477    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222478    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222479    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222480    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222481    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222482    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222483    +        END;
MPRINT(EM_DIAGRAM):   END;
222484    +      END;
MPRINT(EM_DIAGRAM):   END;
222485    +    END;
MPRINT(EM_DIAGRAM):   END;
222486    +  END;
MPRINT(EM_DIAGRAM):   END;
222487    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222488    +      0.34217286191838 <= RANGE_LOG_Total_Trans_Amt  AND
222489    +  RANGE_LOG_Total_Trans_Amt  <     0.68217373468557 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.34217286191838 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.68217373468557 THEN DO;
222490    +  _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
222491    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
222492    +  IF _ARBFMT_12 IN ('7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('7' ) THEN DO;
222493    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222494    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.41391728109155 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.41391728109155 THEN DO;
222495    +      _NODE_  =                  117;
MPRINT(EM_DIAGRAM):   _NODE_ = 117;
222496    +      _LEAF_  =                  112;
MPRINT(EM_DIAGRAM):   _LEAF_ = 112;
222497    +      P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
222498    +      P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
222499    +      Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
222500    +      Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
222501    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222502    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222503    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222504    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222505    +      END;
MPRINT(EM_DIAGRAM):   END;
222506    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222507    +          0.46404421875696 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222508    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49236141178893 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.46404421875696 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49236141178893 THEN DO;
222509    +      IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
222510    +            0.40626434564763 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
222511    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <       0.414627277319 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.40626434564763 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.414627277319 THEN DO;
222512    +        _NODE_  =                  268;
MPRINT(EM_DIAGRAM):   _NODE_ = 268;
222513    +        _LEAF_  =                  115;
MPRINT(EM_DIAGRAM):   _LEAF_ = 115;
222514    +        P_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88888888888888;
222515    +        P_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.11111111111111;
222516    +        Q_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88888888888888;
222517    +        Q_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.11111111111111;
222518    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222519    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222520    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222521    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222522    +        END;
MPRINT(EM_DIAGRAM):   END;
222523    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
222524    +              0.414627277319 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
222525    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.44120909888919 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.414627277319 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.44120909888919 THEN DO;
222526    +        _NODE_  =                  269;
MPRINT(EM_DIAGRAM):   _NODE_ = 269;
222527    +        _LEAF_  =                  116;
MPRINT(EM_DIAGRAM):   _LEAF_ = 116;
222528    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222529    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222530    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222531    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222532    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222533    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222534    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222535    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222536    +        END;
MPRINT(EM_DIAGRAM):   END;
222537    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
222538    +            0.44120909888919 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
222539    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.45384692453765 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.44120909888919 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.45384692453765 THEN DO;
222540    +        _NODE_  =                  270;
MPRINT(EM_DIAGRAM):   _NODE_ = 270;
222541    +        _LEAF_  =                  117;
MPRINT(EM_DIAGRAM):   _LEAF_ = 117;
222542    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
222543    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
222544    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
222545    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
222546    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222547    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222548    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222549    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222550    +        END;
MPRINT(EM_DIAGRAM):   END;
222551    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
222552    +            0.45384692453765 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
222553    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.51563086231801 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.45384692453765 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.51563086231801 THEN DO;
222554    +        IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
222555    +          RANGE_Total_Revolving_Bal  <     0.20679380214541 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.20679380214541 THEN DO;
222556    +          _NODE_  =                  360;
MPRINT(EM_DIAGRAM):   _NODE_ = 360;
222557    +          _LEAF_  =                  118;
MPRINT(EM_DIAGRAM):   _LEAF_ = 118;
222558    +          P_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.375;
222559    +          P_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.625;
222560    +          Q_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.375;
222561    +          Q_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.625;
222562    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222563    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222564    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222565    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222566    +          END;
MPRINT(EM_DIAGRAM):   END;
222567    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222568    +          _NODE_  =                  361;
MPRINT(EM_DIAGRAM):   _NODE_ = 361;
222569    +          _LEAF_  =                  119;
MPRINT(EM_DIAGRAM):   _LEAF_ = 119;
222570    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222571    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222572    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222573    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222574    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222575    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222576    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222577    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222578    +          END;
MPRINT(EM_DIAGRAM):   END;
222579    +        END;
MPRINT(EM_DIAGRAM):   END;
222580    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
222581    +            0.51563086231801 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.51563086231801 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
222582    +        _NODE_  =                  272;
MPRINT(EM_DIAGRAM):   _NODE_ = 272;
222583    +        _LEAF_  =                  120;
MPRINT(EM_DIAGRAM):   _LEAF_ = 120;
222584    +        P_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.16666666666666;
222585    +        P_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.83333333333333;
222586    +        Q_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.16666666666666;
222587    +        Q_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.83333333333333;
222588    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
222589    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
222590    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222591    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222592    +        END;
MPRINT(EM_DIAGRAM):   END;
222593    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222594    +        _NODE_  =                  267;
MPRINT(EM_DIAGRAM):   _NODE_ = 267;
222595    +        _LEAF_  =                  114;
MPRINT(EM_DIAGRAM):   _LEAF_ = 114;
222596    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222597    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222598    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222599    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222600    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222601    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222602    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222603    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222604    +        END;
MPRINT(EM_DIAGRAM):   END;
222605    +      END;
MPRINT(EM_DIAGRAM):   END;
222606    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222607    +          0.49236141178893 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222608    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49474718712517 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49236141178893 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49474718712517 THEN DO;
222609    +      _NODE_  =                  120;
MPRINT(EM_DIAGRAM):   _NODE_ = 120;
222610    +      _LEAF_  =                  121;
MPRINT(EM_DIAGRAM):   _LEAF_ = 121;
222611    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222612    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222613    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222614    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222615    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222616    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222617    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222618    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222619    +      END;
MPRINT(EM_DIAGRAM):   END;
222620    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222621    +          0.49474718712517 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222622    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51814270095588 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49474718712517 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51814270095588 THEN DO;
222623    +      _NODE_  =                  121;
MPRINT(EM_DIAGRAM):   _NODE_ = 121;
222624    +      _LEAF_  =                  122;
MPRINT(EM_DIAGRAM):   _LEAF_ = 122;
222625    +      P_Attrition_Flag0  =               0.7875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.7875;
222626    +      P_Attrition_Flag1  =               0.2125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2125;
222627    +      Q_Attrition_Flag0  =               0.7875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.7875;
222628    +      Q_Attrition_Flag1  =               0.2125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2125;
222629    +      V_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.88888888888888;
222630    +      V_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.11111111111111;
222631    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222632    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222633    +      END;
MPRINT(EM_DIAGRAM):   END;
222634    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222635    +          0.51814270095588 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51814270095588 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
222636    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222637    +            0.23344859718855 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222638    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.36684918977335 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.23344859718855 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.36684918977335 THEN DO;
222639    +        _NODE_  =                  280;
MPRINT(EM_DIAGRAM):   _NODE_ = 280;
222640    +        _LEAF_  =                  124;
MPRINT(EM_DIAGRAM):   _LEAF_ = 124;
222641    +        P_Attrition_Flag0  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.55555555555555;
222642    +        P_Attrition_Flag1  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.44444444444444;
222643    +        Q_Attrition_Flag0  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.55555555555555;
222644    +        Q_Attrition_Flag1  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.44444444444444;
222645    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222646    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222647    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222648    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222649    +        END;
MPRINT(EM_DIAGRAM):   END;
222650    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222651    +            0.36684918977335 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222652    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.56904143807919 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.36684918977335 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.56904143807919 THEN DO;
222653    +        _NODE_  =                  281;
MPRINT(EM_DIAGRAM):   _NODE_ = 281;
222654    +        _LEAF_  =                  125;
MPRINT(EM_DIAGRAM):   _LEAF_ = 125;
222655    +        P_Attrition_Flag0  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.125;
222656    +        P_Attrition_Flag1  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.875;
222657    +        Q_Attrition_Flag0  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.125;
222658    +        Q_Attrition_Flag1  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.875;
222659    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222660    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222661    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222662    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222663    +        END;
MPRINT(EM_DIAGRAM):   END;
222664    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222665    +            0.56904143807919 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222666    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.62360840241109 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.56904143807919 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.62360840241109 THEN DO;
222667    +        _NODE_  =                  282;
MPRINT(EM_DIAGRAM):   _NODE_ = 282;
222668    +        _LEAF_  =                  126;
MPRINT(EM_DIAGRAM):   _LEAF_ = 126;
222669    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
222670    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
222671    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
222672    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
222673    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222674    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222675    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222676    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222677    +        END;
MPRINT(EM_DIAGRAM):   END;
222678    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222679    +            0.62360840241109 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.62360840241109 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
222680    +        _NODE_  =                  283;
MPRINT(EM_DIAGRAM):   _NODE_ = 283;
222681    +        _LEAF_  =                  127;
MPRINT(EM_DIAGRAM):   _LEAF_ = 127;
222682    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222683    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222684    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222685    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222686    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222687    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222688    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222689    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222690    +        END;
MPRINT(EM_DIAGRAM):   END;
222691    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222692    +        _NODE_  =                  279;
MPRINT(EM_DIAGRAM):   _NODE_ = 279;
222693    +        _LEAF_  =                  123;
MPRINT(EM_DIAGRAM):   _LEAF_ = 123;
222694    +        P_Attrition_Flag0  =     0.10526315789473;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.10526315789473;
222695    +        P_Attrition_Flag1  =     0.89473684210526;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.89473684210526;
222696    +        Q_Attrition_Flag0  =     0.10526315789473;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.10526315789473;
222697    +        Q_Attrition_Flag1  =     0.89473684210526;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.89473684210526;
222698    +        V_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.09090909090909;
222699    +        V_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.9090909090909;
222700    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222701    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222702    +        END;
MPRINT(EM_DIAGRAM):   END;
222703    +      END;
MPRINT(EM_DIAGRAM):   END;
222704    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222705    +      _NODE_  =                  118;
MPRINT(EM_DIAGRAM):   _NODE_ = 118;
222706    +      _LEAF_  =                  113;
MPRINT(EM_DIAGRAM):   _LEAF_ = 113;
222707    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222708    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222709    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222710    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222711    +      V_Attrition_Flag0  =     0.97727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97727272727272;
222712    +      V_Attrition_Flag1  =     0.02272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02272727272727;
222713    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222714    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222715    +      END;
MPRINT(EM_DIAGRAM):   END;
222716    +    END;
MPRINT(EM_DIAGRAM):   END;
222717    +  ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
222718    +    IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222719    +      RANGE_LOG_Total_Trans_Amt  <     0.36569662840787 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.36569662840787 THEN DO;
222720    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222721    +            0.50720030994984 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.50720030994984 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
222722    +        _NODE_  =                  285;
MPRINT(EM_DIAGRAM):   _NODE_ = 285;
222723    +        _LEAF_  =                  129;
MPRINT(EM_DIAGRAM):   _LEAF_ = 129;
222724    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
222725    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
222726    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
222727    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
222728    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222729    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222730    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222731    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222732    +        END;
MPRINT(EM_DIAGRAM):   END;
222733    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222734    +        _NODE_  =                  284;
MPRINT(EM_DIAGRAM):   _NODE_ = 284;
222735    +        _LEAF_  =                  128;
MPRINT(EM_DIAGRAM):   _LEAF_ = 128;
222736    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222737    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222738    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222739    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222740    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222741    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222742    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222743    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222744    +        END;
MPRINT(EM_DIAGRAM):   END;
222745    +      END;
MPRINT(EM_DIAGRAM):   END;
222746    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222747    +          0.36569662840787 <= RANGE_LOG_Total_Trans_Amt  AND
222748    +      RANGE_LOG_Total_Trans_Amt  <     0.47182669343092 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.36569662840787 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.47182669343092 THEN DO;
222749    +      _NODE_  =                  124;
MPRINT(EM_DIAGRAM):   _NODE_ = 124;
222750    +      _LEAF_  =                  130;
MPRINT(EM_DIAGRAM):   _LEAF_ = 130;
222751    +      P_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05263157894736;
222752    +      P_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94736842105263;
222753    +      Q_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05263157894736;
222754    +      Q_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94736842105263;
222755    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222756    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222757    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222758    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222759    +      END;
MPRINT(EM_DIAGRAM):   END;
222760    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222761    +          0.47182669343092 <= RANGE_LOG_Total_Trans_Amt  AND
222762    +      RANGE_LOG_Total_Trans_Amt  <     0.50438753588262 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.47182669343092 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.50438753588262 THEN DO;
222763    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222764    +            0.29700429664855 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
222765    +        RANGE_SQRT_Avg_Utilization_Ratio  <      0.4291652643428 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.29700429664855 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.4291652643428 THEN DO;
222766    +        _NODE_  =                  289;
MPRINT(EM_DIAGRAM):   _NODE_ = 289;
222767    +        _LEAF_  =                  132;
MPRINT(EM_DIAGRAM):   _LEAF_ = 132;
222768    +        P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
222769    +        P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
222770    +        Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
222771    +        Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
222772    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222773    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222774    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222775    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222776    +        END;
MPRINT(EM_DIAGRAM):   END;
222777    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
222778    +             0.4291652643428 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.4291652643428 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
222779    +        _NODE_  =                  290;
MPRINT(EM_DIAGRAM):   _NODE_ = 290;
222780    +        _LEAF_  =                  133;
MPRINT(EM_DIAGRAM):   _LEAF_ = 133;
222781    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
222782    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
222783    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
222784    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
222785    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222786    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222787    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222788    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222789    +        END;
MPRINT(EM_DIAGRAM):   END;
222790    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222791    +        _NODE_  =                  288;
MPRINT(EM_DIAGRAM):   _NODE_ = 288;
222792    +        _LEAF_  =                  131;
MPRINT(EM_DIAGRAM):   _LEAF_ = 131;
222793    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
222794    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
222795    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
222796    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
222797    +        V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
222798    +        V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
222799    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222800    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222801    +        END;
MPRINT(EM_DIAGRAM):   END;
222802    +      END;
MPRINT(EM_DIAGRAM):   END;
222803    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222804    +          0.50438753588262 <= RANGE_LOG_Total_Trans_Amt  AND
222805    +      RANGE_LOG_Total_Trans_Amt  <     0.51369397376905 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.50438753588262 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.51369397376905 THEN DO;
222806    +      _NODE_  =                  126;
MPRINT(EM_DIAGRAM):   _NODE_ = 126;
222807    +      _LEAF_  =                  134;
MPRINT(EM_DIAGRAM):   _LEAF_ = 134;
222808    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
222809    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
222810    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
222811    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
222812    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222813    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222814    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222815    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222816    +      END;
MPRINT(EM_DIAGRAM):   END;
222817    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222818    +          0.51369397376905 <= RANGE_LOG_Total_Trans_Amt  AND
222819    +      RANGE_LOG_Total_Trans_Amt  <     0.52246573452757 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.51369397376905 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.52246573452757 THEN DO;
222820    +      _NODE_  =                  127;
MPRINT(EM_DIAGRAM):   _NODE_ = 127;
222821    +      _LEAF_  =                  135;
MPRINT(EM_DIAGRAM):   _LEAF_ = 135;
222822    +      P_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.14285714285714;
222823    +      P_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.85714285714285;
222824    +      Q_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.14285714285714;
222825    +      Q_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.85714285714285;
222826    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222827    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222828    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222829    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222830    +      END;
MPRINT(EM_DIAGRAM):   END;
222831    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222832    +      _NODE_  =                  128;
MPRINT(EM_DIAGRAM):   _NODE_ = 128;
222833    +      _LEAF_  =                  136;
MPRINT(EM_DIAGRAM):   _LEAF_ = 136;
222834    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
222835    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
222836    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
222837    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
222838    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222839    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222840    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222841    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222842    +      END;
MPRINT(EM_DIAGRAM):   END;
222843    +    END;
MPRINT(EM_DIAGRAM):   END;
222844    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222845    +    _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
222846    +    _LEAF_  =                  137;
MPRINT(EM_DIAGRAM):   _LEAF_ = 137;
222847    +    P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
222848    +    P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
222849    +    Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
222850    +    Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
222851    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222852    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222853    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222854    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222855    +    END;
MPRINT(EM_DIAGRAM):   END;
222856    +  END;
MPRINT(EM_DIAGRAM):   END;
222857    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222858    +      0.68217373468557 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.68217373468557 <= RANGE_LOG_Total_Trans_Amt THEN DO;
222859    +  _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
222860    +  _LEAF_  =                  138;
MPRINT(EM_DIAGRAM):   _LEAF_ = 138;
222861    +  P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222862    +  P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222863    +  Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222864    +  Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222865    +  V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222866    +  V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222867    +  I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222868    +  U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222869    +  END;
MPRINT(EM_DIAGRAM):   END;
222870    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222871    +  _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
222872    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
222873    +  IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('6' ) THEN DO;
222874    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222875    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.32866954130237 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.32866954130237 THEN DO;
222876    +      _NODE_  =                   95;
MPRINT(EM_DIAGRAM):   _NODE_ = 95;
222877    +      _LEAF_  =                   91;
MPRINT(EM_DIAGRAM):   _LEAF_ = 91;
222878    +      P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
222879    +      P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
222880    +      Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
222881    +      Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
222882    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222883    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222884    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222885    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222886    +      END;
MPRINT(EM_DIAGRAM):   END;
222887    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222888    +          0.49771332446437 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222889    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.53889078520273 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49771332446437 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.53889078520273 THEN DO;
222890    +      _NODE_  =                   97;
MPRINT(EM_DIAGRAM):   _NODE_ = 97;
222891    +      _LEAF_  =                   93;
MPRINT(EM_DIAGRAM):   _LEAF_ = 93;
222892    +      P_Attrition_Flag0  =     0.98477157360406;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98477157360406;
222893    +      P_Attrition_Flag1  =     0.01522842639593;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01522842639593;
222894    +      Q_Attrition_Flag0  =     0.98477157360406;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98477157360406;
222895    +      Q_Attrition_Flag1  =     0.01522842639593;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01522842639593;
222896    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222897    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222898    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222899    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222900    +      END;
MPRINT(EM_DIAGRAM):   END;
222901    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222902    +          0.53889078520273 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222903    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.54997522870133 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.53889078520273 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.54997522870133 THEN DO;
222904    +      _NODE_  =                   98;
MPRINT(EM_DIAGRAM):   _NODE_ = 98;
222905    +      _LEAF_  =                   94;
MPRINT(EM_DIAGRAM):   _LEAF_ = 94;
222906    +      P_Attrition_Flag0  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93939393939393;
222907    +      P_Attrition_Flag1  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06060606060606;
222908    +      Q_Attrition_Flag0  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93939393939393;
222909    +      Q_Attrition_Flag1  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06060606060606;
222910    +      V_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.75;
222911    +      V_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.25;
222912    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222913    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222914    +      END;
MPRINT(EM_DIAGRAM):   END;
222915    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222916    +          0.54997522870133 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
222917    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.55688995780149 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.54997522870133 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.55688995780149 THEN DO;
222918    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222919    +            0.30723523386139 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.30723523386139 <= RANGE_LOG_Total_Trans_Amt THEN DO;
222920    +        _NODE_  =                  259;
MPRINT(EM_DIAGRAM):   _NODE_ = 259;
222921    +        _LEAF_  =                   96;
MPRINT(EM_DIAGRAM):   _LEAF_ = 96;
222922    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
222923    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
222924    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
222925    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
222926    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
222927    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
222928    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
222929    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
222930    +        END;
MPRINT(EM_DIAGRAM):   END;
222931    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222932    +        _NODE_  =                  258;
MPRINT(EM_DIAGRAM):   _NODE_ = 258;
222933    +        _LEAF_  =                   95;
MPRINT(EM_DIAGRAM):   _LEAF_ = 95;
222934    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222935    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222936    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222937    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222938    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222939    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222940    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222941    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222942    +        END;
MPRINT(EM_DIAGRAM):   END;
222943    +      END;
MPRINT(EM_DIAGRAM):   END;
222944    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
222945    +          0.55688995780149 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.55688995780149 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
222946    +      _NODE_  =                  100;
MPRINT(EM_DIAGRAM):   _NODE_ = 100;
222947    +      _LEAF_  =                   97;
MPRINT(EM_DIAGRAM):   _LEAF_ = 97;
222948    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222949    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222950    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222951    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222952    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222953    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222954    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222955    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222956    +      END;
MPRINT(EM_DIAGRAM):   END;
222957    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
222958    +      _NODE_  =                   96;
MPRINT(EM_DIAGRAM):   _NODE_ = 96;
222959    +      _LEAF_  =                   92;
MPRINT(EM_DIAGRAM):   _LEAF_ = 92;
222960    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222961    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222962    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222963    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222964    +      V_Attrition_Flag0  =      0.9957627118644;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9957627118644;
222965    +      V_Attrition_Flag1  =     0.00423728813559;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.00423728813559;
222966    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222967    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222968    +      END;
MPRINT(EM_DIAGRAM):   END;
222969    +    END;
MPRINT(EM_DIAGRAM):   END;
222970    +  ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
222971    +    IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222972    +      RANGE_LOG_Total_Trans_Amt  <     0.19111919629034 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.19111919629034 THEN DO;
222973    +      _NODE_  =                  101;
MPRINT(EM_DIAGRAM):   _NODE_ = 101;
222974    +      _LEAF_  =                   98;
MPRINT(EM_DIAGRAM):   _LEAF_ = 98;
222975    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
222976    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
222977    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
222978    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
222979    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222980    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222981    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222982    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222983    +      END;
MPRINT(EM_DIAGRAM):   END;
222984    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222985    +          0.19111919629034 <= RANGE_LOG_Total_Trans_Amt  AND
222986    +      RANGE_LOG_Total_Trans_Amt  <     0.19806285116569 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.19111919629034 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.19806285116569 THEN DO;
222987    +      _NODE_  =                  102;
MPRINT(EM_DIAGRAM):   _NODE_ = 102;
222988    +      _LEAF_  =                   99;
MPRINT(EM_DIAGRAM):   _LEAF_ = 99;
222989    +      P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
222990    +      P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
222991    +      Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
222992    +      Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
222993    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
222994    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
222995    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
222996    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
222997    +      END;
MPRINT(EM_DIAGRAM):   END;
222998    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
222999    +          0.28857193112075 <= RANGE_LOG_Total_Trans_Amt  AND
223000    +      RANGE_LOG_Total_Trans_Amt  <     0.29437391726552 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.28857193112075 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.29437391726552 THEN DO;
223001    +      _NODE_  =                  104;
MPRINT(EM_DIAGRAM):   _NODE_ = 104;
223002    +      _LEAF_  =                  101;
MPRINT(EM_DIAGRAM):   _LEAF_ = 101;
223003    +      P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
223004    +      P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
223005    +      Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
223006    +      Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
223007    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223008    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223009    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223010    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223011    +      END;
MPRINT(EM_DIAGRAM):   END;
223012    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223013    +          0.29437391726552 <= RANGE_LOG_Total_Trans_Amt  AND
223014    +      RANGE_LOG_Total_Trans_Amt  <     0.31658857703879 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.29437391726552 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.31658857703879 THEN DO;
223015    +      _NODE_  =                  105;
MPRINT(EM_DIAGRAM):   _NODE_ = 105;
223016    +      _LEAF_  =                  102;
MPRINT(EM_DIAGRAM):   _LEAF_ = 102;
223017    +      P_Attrition_Flag0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.44444444444444;
223018    +      P_Attrition_Flag1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.55555555555555;
223019    +      Q_Attrition_Flag0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.44444444444444;
223020    +      Q_Attrition_Flag1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.55555555555555;
223021    +      V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
223022    +      V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
223023    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223024    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223025    +      END;
MPRINT(EM_DIAGRAM):   END;
223026    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223027    +          0.31658857703879 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.31658857703879 <= RANGE_LOG_Total_Trans_Amt THEN DO;
223028    +      _NODE_  =                  106;
MPRINT(EM_DIAGRAM):   _NODE_ = 106;
223029    +      _LEAF_  =                  103;
MPRINT(EM_DIAGRAM):   _LEAF_ = 103;
223030    +      P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
223031    +      P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
223032    +      Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
223033    +      Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
223034    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223035    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223036    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223037    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223038    +      END;
MPRINT(EM_DIAGRAM):   END;
223039    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223040    +      _NODE_  =                  103;
MPRINT(EM_DIAGRAM):   _NODE_ = 103;
223041    +      _LEAF_  =                  100;
MPRINT(EM_DIAGRAM):   _LEAF_ = 100;
223042    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223043    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223044    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223045    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223046    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223047    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223048    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223049    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223050    +      END;
MPRINT(EM_DIAGRAM):   END;
223051    +    END;
MPRINT(EM_DIAGRAM):   END;
223052    +  ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
223053    +    _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
223054    +    _LEAF_  =                  104;
MPRINT(EM_DIAGRAM):   _LEAF_ = 104;
223055    +    P_Attrition_Flag0  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.73076923076923;
223056    +    P_Attrition_Flag1  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.26923076923076;
223057    +    Q_Attrition_Flag0  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.73076923076923;
223058    +    Q_Attrition_Flag1  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.26923076923076;
223059    +    V_Attrition_Flag0  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.69565217391304;
223060    +    V_Attrition_Flag1  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.30434782608695;
223061    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223062    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223063    +    END;
MPRINT(EM_DIAGRAM):   END;
223064    +  ELSE IF _ARBFMT_12 IN ('3' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ,'2' ) THEN DO;
223065    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223066    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.36414099724008 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.36414099724008 THEN DO;
223067    +      _NODE_  =                  111;
MPRINT(EM_DIAGRAM):   _NODE_ = 111;
223068    +      _LEAF_  =                  105;
MPRINT(EM_DIAGRAM):   _LEAF_ = 105;
223069    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
223070    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
223071    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
223072    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
223073    +      V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
223074    +      V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
223075    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223076    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223077    +      END;
MPRINT(EM_DIAGRAM):   END;
223078    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223079    +          0.36414099724008 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223080    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.41087323297028 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.36414099724008 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.41087323297028 THEN DO;
223081    +      _NODE_  =                  112;
MPRINT(EM_DIAGRAM):   _NODE_ = 112;
223082    +      _LEAF_  =                  106;
MPRINT(EM_DIAGRAM):   _LEAF_ = 106;
223083    +      P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
223084    +      P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
223085    +      Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
223086    +      Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
223087    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223088    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223089    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223090    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223091    +      END;
MPRINT(EM_DIAGRAM):   END;
223092    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223093    +          0.41087323297028 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223094    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.42740380032422 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.41087323297028 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.42740380032422 THEN DO;
223095    +      _NODE_  =                  113;
MPRINT(EM_DIAGRAM):   _NODE_ = 113;
223096    +      _LEAF_  =                  107;
MPRINT(EM_DIAGRAM):   _LEAF_ = 107;
223097    +      P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
223098    +      P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
223099    +      Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
223100    +      Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
223101    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223102    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223103    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223104    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223105    +      END;
MPRINT(EM_DIAGRAM):   END;
223106    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223107    +          0.42740380032422 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223108    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.47370187464616 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.42740380032422 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.47370187464616 THEN DO;
223109    +      _NODE_  =                  114;
MPRINT(EM_DIAGRAM):   _NODE_ = 114;
223110    +      _LEAF_  =                  108;
MPRINT(EM_DIAGRAM):   _LEAF_ = 108;
223111    +      P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
223112    +      P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
223113    +      Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
223114    +      Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
223115    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223116    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223117    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223118    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223119    +      END;
MPRINT(EM_DIAGRAM):   END;
223120    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223121    +          0.47370187464616 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223122    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.50814574678553 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.47370187464616 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.50814574678553 THEN DO;
223123    +      _NODE_  =                  115;
MPRINT(EM_DIAGRAM):   _NODE_ = 115;
223124    +      _LEAF_  =                  109;
MPRINT(EM_DIAGRAM):   _LEAF_ = 109;
223125    +      P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
223126    +      P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
223127    +      Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
223128    +      Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
223129    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223130    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223131    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223132    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223133    +      END;
MPRINT(EM_DIAGRAM):   END;
223134    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223135    +      _NODE_  =                  116;
MPRINT(EM_DIAGRAM):   _NODE_ = 116;
223136    +      _LEAF_  =                  110;
MPRINT(EM_DIAGRAM):   _LEAF_ = 110;
223137    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223138    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223139    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223140    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223141    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223142    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223143    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223144    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223145    +      END;
MPRINT(EM_DIAGRAM):   END;
223146    +    END;
MPRINT(EM_DIAGRAM):   END;
223147    +  ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
223148    +    _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
223149    +    _LEAF_  =                  111;
MPRINT(EM_DIAGRAM):   _LEAF_ = 111;
223150    +    P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
223151    +    P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
223152    +    Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
223153    +    Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
223154    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223155    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223156    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223157    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223158    +    END;
MPRINT(EM_DIAGRAM):   END;
223159    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223160    +    _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
223161    +    _LEAF_  =                   90;
MPRINT(EM_DIAGRAM):   _LEAF_ = 90;
223162    +    P_Attrition_Flag0  =     0.99945945945945;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.99945945945945;
223163    +    P_Attrition_Flag1  =     0.00054054054054;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.00054054054054;
223164    +    Q_Attrition_Flag0  =     0.99945945945945;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.99945945945945;
223165    +    Q_Attrition_Flag1  =     0.00054054054054;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.00054054054054;
223166    +    V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223167    +    V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223168    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223169    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223170    +    END;
MPRINT(EM_DIAGRAM):   END;
223171    +  END;
MPRINT(EM_DIAGRAM):   END;
223172    +
223173    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
223174    +IF  F_Attrition_Flag  NE '0'
223175    +AND F_Attrition_Flag  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Attrition_Flag NE '0' AND F_Attrition_Flag NE '1' THEN DO;
223176    +        R_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = .;
223177    +        R_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = .;
223178    + END;
MPRINT(EM_DIAGRAM):   END;
223179    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223180    +       R_Attrition_Flag0  =  -P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = -P_Attrition_Flag0 ;
223181    +       R_Attrition_Flag1  =  -P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = -P_Attrition_Flag1 ;
223182    +       SELECT( F_Attrition_Flag  );
MPRINT(EM_DIAGRAM):   SELECT( F_Attrition_Flag );
223183    +          WHEN( '0'  ) R_Attrition_Flag0  = R_Attrition_Flag0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_Attrition_Flag0 = R_Attrition_Flag0 +1;
223184    +          WHEN( '1'  ) R_Attrition_Flag1  = R_Attrition_Flag1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_Attrition_Flag1 = R_Attrition_Flag1 +1;
223185    +       END;
MPRINT(EM_DIAGRAM):   END;
223186    + END;
MPRINT(EM_DIAGRAM):   END;
223187    +
223188    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
223189    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
223190    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
223191    +
223192    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
223193     run;
 
NOTE: DATA STEP view saved on file EMWS1.TREE3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
223194     quit;
223195     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
223196     filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223197     *------------------------------------------------------------*;
223198     * Tree3: Scoring TEST data;
223199     *------------------------------------------------------------*;
223200     data EMWS1.Tree3_TEST
223201     / view=EMWS1.Tree3_TEST
223202     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_TEST / view=EMWS1.Tree3_TEST ;
223203     set EMWS1.Part2_TEST
223204     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TEST ;
223205     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMFLOWSCORE.sas.
223206    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
223207    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
223208    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
223209    +
223210    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
223211    +LENGTH F_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH F_Attrition_Flag $ 17;
223212    +LENGTH I_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH I_Attrition_Flag $ 17;
223213    +LENGTH U_Attrition_Flag  $   17;
MPRINT(EM_DIAGRAM):   LENGTH U_Attrition_Flag $ 17;
223214    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
223215    +
223216    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
223217    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
223218    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
223219    +label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
223220    +label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
223221    +label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag0 = 'Unadjusted P: Attrition_Flag=0' ;
223222    +label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label Q_Attrition_Flag1 = 'Unadjusted P: Attrition_Flag=1' ;
223223    +label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag0 = 'Validated: Attrition_Flag=0' ;
223224    +label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label V_Attrition_Flag1 = 'Validated: Attrition_Flag=1' ;
223225    +label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
223226    +label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
223227    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
223228    +label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
223229    +label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
223230    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
223231    +
223232    +
223233    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
223234    +LENGTH _ARBFMT_17 $     17; DROP _ARBFMT_17;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_17 $ 17;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_17;
223235    +_ARBFMT_17 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = ' ';
223236    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
223237    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
223238    +
223239    +
223240    +_ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
MPRINT(EM_DIAGRAM):   _ARBFMT_17 = PUT( Attrition_Flag , $CHAR17.);
223241    + %DMNORMCP( _ARBFMT_17, F_Attrition_Flag );
MPRINT(DMNORMCP):   F_Attrition_Flag=dmnorm(_ARBFMT_17,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223242    +
223243    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
223244    +IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223245    +  RANGE_LOG_Total_Trans_Amt  <     0.03868641322523 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.03868641322523 THEN DO;
223246    +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
223247    +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
223248    +  P_Attrition_Flag0  =     0.09649122807017;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09649122807017;
223249    +  P_Attrition_Flag1  =     0.90350877192982;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.90350877192982;
223250    +  Q_Attrition_Flag0  =     0.09649122807017;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09649122807017;
223251    +  Q_Attrition_Flag1  =     0.90350877192982;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.90350877192982;
223252    +  V_Attrition_Flag0  =     0.16129032258064;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.16129032258064;
223253    +  V_Attrition_Flag1  =     0.83870967741935;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.83870967741935;
223254    +  I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223255    +  U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223256    +  END;
MPRINT(EM_DIAGRAM):   END;
223257    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223258    +      0.03868641322523 <= RANGE_LOG_Total_Trans_Amt  AND
223259    +  RANGE_LOG_Total_Trans_Amt  <     0.10171724739083 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.03868641322523 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.10171724739083 THEN DO;
223260    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223261    +    RANGE_Total_Revolving_Bal  <      0.2119586809694 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.2119586809694 THEN DO;
223262    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223263    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.35308417471738 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.35308417471738 THEN DO;
223264    +      _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
223265    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
223266    +      P_Attrition_Flag0  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.06060606060606;
223267    +      P_Attrition_Flag1  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.93939393939393;
223268    +      Q_Attrition_Flag0  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.06060606060606;
223269    +      Q_Attrition_Flag1  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.93939393939393;
223270    +      V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
223271    +      V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
223272    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223273    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223274    +      END;
MPRINT(EM_DIAGRAM):   END;
223275    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223276    +          0.40292534213823 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223277    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4402808888078 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.40292534213823 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4402808888078 THEN DO;
223278    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223279    +            0.07441989599977 <= RANGE_LOG_Total_Trans_Amt  AND
223280    +        RANGE_LOG_Total_Trans_Amt  <     0.09331394044198 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.07441989599977 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.09331394044198 THEN DO;
223281    +        _NODE_  =                  139;
MPRINT(EM_DIAGRAM):   _NODE_ = 139;
223282    +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
223283    +        P_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.57142857142857;
223284    +        P_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.42857142857142;
223285    +        Q_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.57142857142857;
223286    +        Q_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.42857142857142;
223287    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223288    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223289    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223290    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223291    +        END;
MPRINT(EM_DIAGRAM):   END;
223292    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223293    +            0.09331394044198 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.09331394044198 <= RANGE_LOG_Total_Trans_Amt THEN DO;
223294    +        _NODE_  =                  140;
MPRINT(EM_DIAGRAM):   _NODE_ = 140;
223295    +        _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
223296    +        P_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.16666666666666;
223297    +        P_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.83333333333333;
223298    +        Q_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.16666666666666;
223299    +        Q_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.83333333333333;
223300    +        V_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.25;
223301    +        V_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.75;
223302    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223303    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223304    +        END;
MPRINT(EM_DIAGRAM):   END;
223305    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223306    +        _NODE_  =                  138;
MPRINT(EM_DIAGRAM):   _NODE_ = 138;
223307    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
223308    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223309    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223310    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223311    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223312    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223313    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223314    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223315    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223316    +        END;
MPRINT(EM_DIAGRAM):   END;
223317    +      END;
MPRINT(EM_DIAGRAM):   END;
223318    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223319    +           0.4402808888078 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223320    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49116234999183 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.4402808888078 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49116234999183 THEN DO;
223321    +      _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
223322    +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
223323    +      P_Attrition_Flag0  =     0.92682926829268;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.92682926829268;
223324    +      P_Attrition_Flag1  =     0.07317073170731;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.07317073170731;
223325    +      Q_Attrition_Flag0  =     0.92682926829268;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.92682926829268;
223326    +      Q_Attrition_Flag1  =     0.07317073170731;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.07317073170731;
223327    +      V_Attrition_Flag0  =      0.8095238095238;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8095238095238;
223328    +      V_Attrition_Flag1  =     0.19047619047619;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.19047619047619;
223329    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223330    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223331    +      END;
MPRINT(EM_DIAGRAM):   END;
223332    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223333    +          0.49116234999183 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223334    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <       0.557550219255 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49116234999183 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.557550219255 THEN DO;
223335    +      _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Relationship_Count , BEST12.);
223336    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
223337    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
223338    +        _NODE_  =                  143;
MPRINT(EM_DIAGRAM):   _NODE_ = 143;
223339    +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
223340    +        P_Attrition_Flag0  =                  0.1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.1;
223341    +        P_Attrition_Flag1  =                  0.9;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9;
223342    +        Q_Attrition_Flag0  =                  0.1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.1;
223343    +        Q_Attrition_Flag1  =                  0.9;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9;
223344    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223345    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223346    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223347    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223348    +        END;
MPRINT(EM_DIAGRAM):   END;
223349    +      ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
223350    +        IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223351    +              0.46047296215175 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.46047296215175 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
223352    +          _NODE_  =                  298;
MPRINT(EM_DIAGRAM):   _NODE_ = 298;
223353    +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
223354    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223355    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223356    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223357    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223358    +          V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223359    +          V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223360    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223361    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223362    +          END;
MPRINT(EM_DIAGRAM):   END;
223363    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223364    +          _NODE_  =                  297;
MPRINT(EM_DIAGRAM):   _NODE_ = 297;
223365    +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
223366    +          P_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.3;
223367    +          P_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7;
223368    +          Q_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.3;
223369    +          Q_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7;
223370    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223371    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223372    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223373    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223374    +          END;
MPRINT(EM_DIAGRAM):   END;
223375    +        END;
MPRINT(EM_DIAGRAM):   END;
223376    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223377    +        _NODE_  =                  145;
MPRINT(EM_DIAGRAM):   _NODE_ = 145;
223378    +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
223379    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
223380    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
223381    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
223382    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
223383    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223384    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223385    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223386    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223387    +        END;
MPRINT(EM_DIAGRAM):   END;
223388    +      END;
MPRINT(EM_DIAGRAM):   END;
223389    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223390    +            0.557550219255 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.557550219255 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
223391    +      _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
223392    +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
223393    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223394    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223395    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223396    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223397    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223398    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223399    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223400    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223401    +      END;
MPRINT(EM_DIAGRAM):   END;
223402    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223403    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223404    +        RANGE_LOG_Total_Trans_Amt  <     0.05631631675079 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.05631631675079 THEN DO;
223405    +        _NODE_  =                  132;
MPRINT(EM_DIAGRAM):   _NODE_ = 132;
223406    +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
223407    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223408    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223409    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223410    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223411    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223412    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223413    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223414    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223415    +        END;
MPRINT(EM_DIAGRAM):   END;
223416    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223417    +            0.05631631675079 <= RANGE_LOG_Total_Trans_Amt  AND
223418    +        RANGE_LOG_Total_Trans_Amt  <     0.06681486255192 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.05631631675079 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.06681486255192 THEN DO;
223419    +        _NODE_  =                  133;
MPRINT(EM_DIAGRAM):   _NODE_ = 133;
223420    +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
223421    +        P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
223422    +        P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
223423    +        Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
223424    +        Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
223425    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223426    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223427    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223428    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223429    +        END;
MPRINT(EM_DIAGRAM):   END;
223430    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223431    +            0.08042955729796 <= RANGE_LOG_Total_Trans_Amt  AND
223432    +        RANGE_LOG_Total_Trans_Amt  <     0.08898235450693 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08042955729796 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.08898235450693 THEN DO;
223433    +        _NODE_  =                  135;
MPRINT(EM_DIAGRAM):   _NODE_ = 135;
223434    +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
223435    +        P_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.11111111111111;
223436    +        P_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.88888888888888;
223437    +        Q_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.11111111111111;
223438    +        Q_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.88888888888888;
223439    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223440    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223441    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223442    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223443    +        END;
MPRINT(EM_DIAGRAM):   END;
223444    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223445    +            0.08898235450693 <= RANGE_LOG_Total_Trans_Amt  AND
223446    +        RANGE_LOG_Total_Trans_Amt  <     0.09350307119369 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.08898235450693 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.09350307119369 THEN DO;
223447    +        _NODE_  =                  136;
MPRINT(EM_DIAGRAM):   _NODE_ = 136;
223448    +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
223449    +        P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
223450    +        P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
223451    +        Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
223452    +        Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
223453    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223454    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223455    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223456    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223457    +        END;
MPRINT(EM_DIAGRAM):   END;
223458    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223459    +            0.09350307119369 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.09350307119369 <= RANGE_LOG_Total_Trans_Amt THEN DO;
223460    +        _NODE_  =                  137;
MPRINT(EM_DIAGRAM):   _NODE_ = 137;
223461    +        _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
223462    +        P_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.11111111111111;
223463    +        P_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.88888888888888;
223464    +        Q_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.11111111111111;
223465    +        Q_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.88888888888888;
223466    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223467    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223468    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223469    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223470    +        END;
MPRINT(EM_DIAGRAM):   END;
223471    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223472    +        _ARBFMT_12 = PUT( G_Months_on_book , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Months_on_book , BEST12.);
223473    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
223474    +        IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
223475    +          _NODE_  =                  291;
MPRINT(EM_DIAGRAM):   _NODE_ = 291;
223476    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
223477    +          P_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.14285714285714;
223478    +          P_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.85714285714285;
223479    +          Q_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.14285714285714;
223480    +          Q_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.85714285714285;
223481    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223482    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223483    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223484    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223485    +          END;
MPRINT(EM_DIAGRAM):   END;
223486    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223487    +          _NODE_  =                  292;
MPRINT(EM_DIAGRAM):   _NODE_ = 292;
223488    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
223489    +          P_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.71428571428571;
223490    +          P_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.28571428571428;
223491    +          Q_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.71428571428571;
223492    +          Q_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.28571428571428;
223493    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223494    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223495    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223496    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223497    +          END;
MPRINT(EM_DIAGRAM):   END;
223498    +        END;
MPRINT(EM_DIAGRAM):   END;
223499    +      END;
MPRINT(EM_DIAGRAM):   END;
223500    +    END;
MPRINT(EM_DIAGRAM):   END;
223501    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223502    +         0.2119586809694 <= RANGE_Total_Revolving_Bal  AND
223503    +    RANGE_Total_Revolving_Bal  <      0.4487485101311 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.2119586809694 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.4487485101311 THEN DO;
223504    +    _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
223505    +    _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
223506    +    P_Attrition_Flag0  =     0.88554216867469;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88554216867469;
223507    +    P_Attrition_Flag1  =      0.1144578313253;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1144578313253;
223508    +    Q_Attrition_Flag0  =     0.88554216867469;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88554216867469;
223509    +    Q_Attrition_Flag1  =      0.1144578313253;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.1144578313253;
223510    +    V_Attrition_Flag0  =     0.94545454545454;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.94545454545454;
223511    +    V_Attrition_Flag1  =     0.05454545454545;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.05454545454545;
223512    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223513    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223514    +    END;
MPRINT(EM_DIAGRAM):   END;
223515    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223516    +        0.70421136273341 <= RANGE_Total_Revolving_Bal  AND
223517    +    RANGE_Total_Revolving_Bal  <     0.81664680174811 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.70421136273341 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.81664680174811 THEN DO;
223518    +    _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
223519    +    _LEAF_  =                   27;
MPRINT(EM_DIAGRAM):   _LEAF_ = 27;
223520    +    P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223521    +    P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223522    +    Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223523    +    Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223524    +    V_Attrition_Flag0  =                0.975;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.975;
223525    +    V_Attrition_Flag1  =                0.025;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.025;
223526    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223527    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223528    +    END;
MPRINT(EM_DIAGRAM):   END;
223529    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223530    +        0.81664680174811 <= RANGE_Total_Revolving_Bal  AND
223531    +    RANGE_Total_Revolving_Bal  <      0.9487485101311 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.81664680174811 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.9487485101311 THEN DO;
223532    +    _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
223533    +    _LEAF_  =                   28;
MPRINT(EM_DIAGRAM):   _LEAF_ = 28;
223534    +    P_Attrition_Flag0  =                 0.97;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97;
223535    +    P_Attrition_Flag1  =                 0.03;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.03;
223536    +    Q_Attrition_Flag0  =                 0.97;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97;
223537    +    Q_Attrition_Flag1  =                 0.03;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.03;
223538    +    V_Attrition_Flag0  =     0.97297297297297;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97297297297297;
223539    +    V_Attrition_Flag1  =     0.02702702702702;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02702702702702;
223540    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223541    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223542    +    END;
MPRINT(EM_DIAGRAM):   END;
223543    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223544    +         0.9487485101311 <= RANGE_Total_Revolving_Bal  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.9487485101311 <= RANGE_Total_Revolving_Bal THEN DO;
223545    +    _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
223546    +    _LEAF_  =                   29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 29;
223547    +    P_Attrition_Flag0  =      0.8090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8090909090909;
223548    +    P_Attrition_Flag1  =     0.19090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.19090909090909;
223549    +    Q_Attrition_Flag0  =      0.8090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8090909090909;
223550    +    Q_Attrition_Flag1  =     0.19090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.19090909090909;
223551    +    V_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.875;
223552    +    V_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.125;
223553    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223554    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223555    +    END;
MPRINT(EM_DIAGRAM):   END;
223556    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223557    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223558    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.26609968837987 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.26609968837987 THEN DO;
223559    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223560    +            0.38536068026685 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.38536068026685 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
223561    +        _NODE_  =                  154;
MPRINT(EM_DIAGRAM):   _NODE_ = 154;
223562    +        _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
223563    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223564    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223565    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223566    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223567    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223568    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223569    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223570    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223571    +        END;
MPRINT(EM_DIAGRAM):   END;
223572    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223573    +        _NODE_  =                  153;
MPRINT(EM_DIAGRAM):   _NODE_ = 153;
223574    +        _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
223575    +        P_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.375;
223576    +        P_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.625;
223577    +        Q_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.375;
223578    +        Q_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.625;
223579    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
223580    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
223581    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223582    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223583    +        END;
MPRINT(EM_DIAGRAM):   END;
223584    +      END;
MPRINT(EM_DIAGRAM):   END;
223585    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223586    +          0.26609968837987 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223587    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.29648254109501 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.26609968837987 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.29648254109501 THEN DO;
223588    +      _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
223589    +      _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
223590    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223591    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223592    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223593    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223594    +      V_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.83333333333333;
223595    +      V_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.16666666666666;
223596    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223597    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223598    +      END;
MPRINT(EM_DIAGRAM):   END;
223599    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223600    +          0.29648254109501 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223601    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.30763852920187 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.29648254109501 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.30763852920187 THEN DO;
223602    +      _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
223603    +      _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
223604    +      P_Attrition_Flag0  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.77777777777777;
223605    +      P_Attrition_Flag1  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.22222222222222;
223606    +      Q_Attrition_Flag0  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.77777777777777;
223607    +      Q_Attrition_Flag1  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.22222222222222;
223608    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223609    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223610    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223611    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223612    +      END;
MPRINT(EM_DIAGRAM):   END;
223613    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223614    +          0.30763852920187 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223615    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.33548019013549 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.30763852920187 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.33548019013549 THEN DO;
223616    +      _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
223617    +      _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
223618    +      P_Attrition_Flag0  =                0.925;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.925;
223619    +      P_Attrition_Flag1  =                0.075;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.075;
223620    +      Q_Attrition_Flag0  =                0.925;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.925;
223621    +      Q_Attrition_Flag1  =                0.075;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.075;
223622    +      V_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.85714285714285;
223623    +      V_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.14285714285714;
223624    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223625    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223626    +      END;
MPRINT(EM_DIAGRAM):   END;
223627    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
223628    +          0.33548019013549 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
223629    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.37597459920657 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.33548019013549 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.37597459920657 THEN DO;
223630    +      _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
223631    +      _LEAF_  =                   25;
MPRINT(EM_DIAGRAM):   _LEAF_ = 25;
223632    +      P_Attrition_Flag0  =     0.98630136986301;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98630136986301;
223633    +      P_Attrition_Flag1  =     0.01369863013698;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01369863013698;
223634    +      Q_Attrition_Flag0  =     0.98630136986301;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98630136986301;
223635    +      Q_Attrition_Flag1  =     0.01369863013698;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01369863013698;
223636    +      V_Attrition_Flag0  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.94444444444444;
223637    +      V_Attrition_Flag1  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.05555555555555;
223638    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223639    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223640    +      END;
MPRINT(EM_DIAGRAM):   END;
223641    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223642    +      _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
223643    +      _LEAF_  =                   26;
MPRINT(EM_DIAGRAM):   _LEAF_ = 26;
223644    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223645    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223646    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223647    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223648    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223649    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223650    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223651    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223652    +      END;
MPRINT(EM_DIAGRAM):   END;
223653    +    END;
MPRINT(EM_DIAGRAM):   END;
223654    +  END;
MPRINT(EM_DIAGRAM):   END;
223655    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223656    +      0.10171724739083 <= RANGE_LOG_Total_Trans_Amt  AND
223657    +  RANGE_LOG_Total_Trans_Amt  <     0.18180873549344 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.10171724739083 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.18180873549344 THEN DO;
223658    +  IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223659    +    RANGE_Total_Revolving_Bal  <     0.05542312276519 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.05542312276519 THEN DO;
223660    +    _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
223661    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
223662    +    IF _ARBFMT_12 IN ('7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('7' ) THEN DO;
223663    +      _NODE_  =                   65;
MPRINT(EM_DIAGRAM):   _NODE_ = 65;
223664    +      _LEAF_  =                   30;
MPRINT(EM_DIAGRAM):   _LEAF_ = 30;
223665    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223666    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223667    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223668    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223669    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223670    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223671    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223672    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223673    +      END;
MPRINT(EM_DIAGRAM):   END;
223674    +    ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
223675    +      _NODE_  =                   66;
MPRINT(EM_DIAGRAM):   _NODE_ = 66;
223676    +      _LEAF_  =                   31;
MPRINT(EM_DIAGRAM):   _LEAF_ = 31;
223677    +      P_Attrition_Flag0  =     0.93023255813953;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93023255813953;
223678    +      P_Attrition_Flag1  =     0.06976744186046;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06976744186046;
223679    +      Q_Attrition_Flag0  =     0.93023255813953;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93023255813953;
223680    +      Q_Attrition_Flag1  =     0.06976744186046;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06976744186046;
223681    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
223682    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
223683    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223684    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223685    +      END;
MPRINT(EM_DIAGRAM):   END;
223686    +    ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
223687    +      _NODE_  =                   67;
MPRINT(EM_DIAGRAM):   _NODE_ = 67;
223688    +      _LEAF_  =                   32;
MPRINT(EM_DIAGRAM):   _LEAF_ = 32;
223689    +      P_Attrition_Flag0  =             0.296875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.296875;
223690    +      P_Attrition_Flag1  =             0.703125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.703125;
223691    +      Q_Attrition_Flag0  =             0.296875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.296875;
223692    +      Q_Attrition_Flag1  =             0.703125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.703125;
223693    +      V_Attrition_Flag0  =     0.27777777777777;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.27777777777777;
223694    +      V_Attrition_Flag1  =     0.72222222222222;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.72222222222222;
223695    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223696    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223697    +      END;
MPRINT(EM_DIAGRAM):   END;
223698    +    ELSE IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
223699    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223700    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.39237639480992 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.39237639480992 THEN DO;
223701    +        _NODE_  =                  178;
MPRINT(EM_DIAGRAM):   _NODE_ = 178;
223702    +        _LEAF_  =                   33;
MPRINT(EM_DIAGRAM):   _LEAF_ = 33;
223703    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
223704    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
223705    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
223706    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
223707    +        V_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.14285714285714;
223708    +        V_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.85714285714285;
223709    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223710    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223711    +        END;
MPRINT(EM_DIAGRAM):   END;
223712    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223713    +            0.39237639480992 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223714    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.40656129467709 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.39237639480992 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.40656129467709 THEN DO;
223715    +        _NODE_  =                  179;
MPRINT(EM_DIAGRAM):   _NODE_ = 179;
223716    +        _LEAF_  =                   34;
MPRINT(EM_DIAGRAM):   _LEAF_ = 34;
223717    +        P_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.3;
223718    +        P_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.7;
223719    +        Q_Attrition_Flag0  =                  0.3;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.3;
223720    +        Q_Attrition_Flag1  =                  0.7;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.7;
223721    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223722    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223723    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223724    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223725    +        END;
MPRINT(EM_DIAGRAM):   END;
223726    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223727    +            0.45539942631941 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223728    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4679918630084 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.45539942631941 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4679918630084 THEN DO;
223729    +        _NODE_  =                  181;
MPRINT(EM_DIAGRAM):   _NODE_ = 181;
223730    +        _LEAF_  =                   36;
MPRINT(EM_DIAGRAM):   _LEAF_ = 36;
223731    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
223732    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
223733    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
223734    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
223735    +        V_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.16666666666666;
223736    +        V_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.83333333333333;
223737    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223738    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223739    +        END;
MPRINT(EM_DIAGRAM):   END;
223740    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223741    +             0.4679918630084 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223742    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.52798824045043 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.4679918630084 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.52798824045043 THEN DO;
223743    +        _NODE_  =                  182;
MPRINT(EM_DIAGRAM):   _NODE_ = 182;
223744    +        _LEAF_  =                   37;
MPRINT(EM_DIAGRAM):   _LEAF_ = 37;
223745    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
223746    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
223747    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
223748    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
223749    +        V_Attrition_Flag0  =     0.31578947368421;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.31578947368421;
223750    +        V_Attrition_Flag1  =     0.68421052631578;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.68421052631578;
223751    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223752    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223753    +        END;
MPRINT(EM_DIAGRAM):   END;
223754    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223755    +            0.52798824045043 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.52798824045043 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
223756    +        _NODE_  =                  183;
MPRINT(EM_DIAGRAM):   _NODE_ = 183;
223757    +        _LEAF_  =                   38;
MPRINT(EM_DIAGRAM):   _LEAF_ = 38;
223758    +        P_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85714285714285;
223759    +        P_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14285714285714;
223760    +        Q_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85714285714285;
223761    +        Q_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14285714285714;
223762    +        V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
223763    +        V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
223764    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223765    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223766    +        END;
MPRINT(EM_DIAGRAM):   END;
223767    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223768    +        _NODE_  =                  180;
MPRINT(EM_DIAGRAM):   _NODE_ = 180;
223769    +        _LEAF_  =                   35;
MPRINT(EM_DIAGRAM):   _LEAF_ = 35;
223770    +        P_Attrition_Flag0  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.08333333333333;
223771    +        P_Attrition_Flag1  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.91666666666666;
223772    +        Q_Attrition_Flag0  =     0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.08333333333333;
223773    +        Q_Attrition_Flag1  =     0.91666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.91666666666666;
223774    +        V_Attrition_Flag0  =      0.1578947368421;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.1578947368421;
223775    +        V_Attrition_Flag1  =     0.84210526315789;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.84210526315789;
223776    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223777    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223778    +        END;
MPRINT(EM_DIAGRAM):   END;
223779    +      END;
MPRINT(EM_DIAGRAM):   END;
223780    +    ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
223781    +      _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Customer_Age , BEST12.);
223782    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
223783    +      IF _ARBFMT_12 IN ('5' ,'6' ,'7' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'7' ,'3' ) THEN DO;
223784    +        _NODE_  =                  190;
MPRINT(EM_DIAGRAM):   _NODE_ = 190;
223785    +        _LEAF_  =                   40;
MPRINT(EM_DIAGRAM):   _LEAF_ = 40;
223786    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
223787    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
223788    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
223789    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
223790    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223791    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223792    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223793    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223794    +        END;
MPRINT(EM_DIAGRAM):   END;
223795    +      ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
223796    +        _NODE_  =                  191;
MPRINT(EM_DIAGRAM):   _NODE_ = 191;
223797    +        _LEAF_  =                   41;
MPRINT(EM_DIAGRAM):   _LEAF_ = 41;
223798    +        P_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05263157894736;
223799    +        P_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94736842105263;
223800    +        Q_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05263157894736;
223801    +        Q_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94736842105263;
223802    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223803    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223804    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223805    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223806    +        END;
MPRINT(EM_DIAGRAM):   END;
223807    +      ELSE IF _ARBFMT_12 IN ('8' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('8' ) THEN DO;
223808    +        _NODE_  =                  192;
MPRINT(EM_DIAGRAM):   _NODE_ = 192;
223809    +        _LEAF_  =                   42;
MPRINT(EM_DIAGRAM):   _LEAF_ = 42;
223810    +        P_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.57142857142857;
223811    +        P_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.42857142857142;
223812    +        Q_Attrition_Flag0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.57142857142857;
223813    +        Q_Attrition_Flag1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.42857142857142;
223814    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223815    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223816    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223817    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223818    +        END;
MPRINT(EM_DIAGRAM):   END;
223819    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223820    +        _NODE_  =                  193;
MPRINT(EM_DIAGRAM):   _NODE_ = 193;
223821    +        _LEAF_  =                   43;
MPRINT(EM_DIAGRAM):   _LEAF_ = 43;
223822    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
223823    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
223824    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
223825    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
223826    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223827    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223828    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223829    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223830    +        END;
MPRINT(EM_DIAGRAM):   END;
223831    +      END;
MPRINT(EM_DIAGRAM):   END;
223832    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223833    +      _NODE_  =                   69;
MPRINT(EM_DIAGRAM):   _NODE_ = 69;
223834    +      _LEAF_  =                   39;
MPRINT(EM_DIAGRAM):   _LEAF_ = 39;
223835    +      P_Attrition_Flag0  =     0.12781954887218;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.12781954887218;
223836    +      P_Attrition_Flag1  =     0.87218045112781;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.87218045112781;
223837    +      Q_Attrition_Flag0  =     0.12781954887218;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.12781954887218;
223838    +      Q_Attrition_Flag1  =     0.87218045112781;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.87218045112781;
223839    +      V_Attrition_Flag0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.17647058823529;
223840    +      V_Attrition_Flag1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8235294117647;
223841    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223842    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223843    +      END;
MPRINT(EM_DIAGRAM):   END;
223844    +    END;
MPRINT(EM_DIAGRAM):   END;
223845    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223846    +        0.05542312276519 <= RANGE_Total_Revolving_Bal  AND
223847    +    RANGE_Total_Revolving_Bal  <     0.17381803734604 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.05542312276519 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.17381803734604 THEN DO;
223848    +    _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
223849    +    _LEAF_  =                   44;
MPRINT(EM_DIAGRAM):   _LEAF_ = 44;
223850    +    P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
223851    +    P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
223852    +    Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
223853    +    Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
223854    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223855    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223856    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223857    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223858    +    END;
MPRINT(EM_DIAGRAM):   END;
223859    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223860    +        0.17381803734604 <= RANGE_Total_Revolving_Bal  AND
223861    +    RANGE_Total_Revolving_Bal  <     0.23182359952324 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.17381803734604 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.23182359952324 THEN DO;
223862    +    _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
223863    +    _LEAF_  =                   45;
MPRINT(EM_DIAGRAM):   _LEAF_ = 45;
223864    +    P_Attrition_Flag0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.23529411764705;
223865    +    P_Attrition_Flag1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.76470588235294;
223866    +    Q_Attrition_Flag0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.23529411764705;
223867    +    Q_Attrition_Flag1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.76470588235294;
223868    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223869    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223870    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223871    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223872    +    END;
MPRINT(EM_DIAGRAM):   END;
223873    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
223874    +        0.23182359952324 <= RANGE_Total_Revolving_Bal  AND
223875    +    RANGE_Total_Revolving_Bal  <     0.44378228049265 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.23182359952324 <= RANGE_Total_Revolving_Bal AND RANGE_Total_Revolving_Bal < 0.44378228049265 THEN DO;
223876    +    _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
223877    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
223878    +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
223879    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223880    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <      0.4326596741372 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.4326596741372 THEN DO;
223881    +        _NODE_  =                  194;
MPRINT(EM_DIAGRAM):   _NODE_ = 194;
223882    +        _LEAF_  =                   46;
MPRINT(EM_DIAGRAM):   _LEAF_ = 46;
223883    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
223884    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
223885    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
223886    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
223887    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223888    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223889    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223890    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223891    +        END;
MPRINT(EM_DIAGRAM):   END;
223892    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223893    +            0.49070999374543 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49070999374543 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
223894    +        _NODE_  =                  196;
MPRINT(EM_DIAGRAM):   _NODE_ = 196;
223895    +        _LEAF_  =                   48;
MPRINT(EM_DIAGRAM):   _LEAF_ = 48;
223896    +        P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
223897    +        P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
223898    +        Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
223899    +        Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
223900    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223901    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223902    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223903    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223904    +        END;
MPRINT(EM_DIAGRAM):   END;
223905    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223906    +        _NODE_  =                  195;
MPRINT(EM_DIAGRAM):   _NODE_ = 195;
223907    +        _LEAF_  =                   47;
MPRINT(EM_DIAGRAM):   _LEAF_ = 47;
223908    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
223909    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
223910    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
223911    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
223912    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223913    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223914    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223915    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223916    +        END;
MPRINT(EM_DIAGRAM):   END;
223917    +      END;
MPRINT(EM_DIAGRAM):   END;
223918    +    ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
223919    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223920    +            0.43708075565352 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223921    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.47032331248188 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.43708075565352 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.47032331248188 THEN DO;
223922    +        _NODE_  =                  198;
MPRINT(EM_DIAGRAM):   _NODE_ = 198;
223923    +        _LEAF_  =                   50;
MPRINT(EM_DIAGRAM):   _LEAF_ = 50;
223924    +        P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
223925    +        P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
223926    +        Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
223927    +        Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
223928    +        V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
223929    +        V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
223930    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223931    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223932    +        END;
MPRINT(EM_DIAGRAM):   END;
223933    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223934    +            0.47032331248188 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223935    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.48206386496214 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.47032331248188 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.48206386496214 THEN DO;
223936    +        _NODE_  =                  199;
MPRINT(EM_DIAGRAM):   _NODE_ = 199;
223937    +        _LEAF_  =                   51;
MPRINT(EM_DIAGRAM):   _LEAF_ = 51;
223938    +        P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
223939    +        P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
223940    +        Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
223941    +        Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
223942    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223943    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223944    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223945    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223946    +        END;
MPRINT(EM_DIAGRAM):   END;
223947    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223948    +            0.48206386496214 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
223949    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51541574834001 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48206386496214 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51541574834001 THEN DO;
223950    +        _NODE_  =                  200;
MPRINT(EM_DIAGRAM):   _NODE_ = 200;
223951    +        _LEAF_  =                   52;
MPRINT(EM_DIAGRAM):   _LEAF_ = 52;
223952    +        P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
223953    +        P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
223954    +        Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
223955    +        Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
223956    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223957    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223958    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223959    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223960    +        END;
MPRINT(EM_DIAGRAM):   END;
223961    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
223962    +            0.51541574834001 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51541574834001 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
223963    +        _NODE_  =                  201;
MPRINT(EM_DIAGRAM):   _NODE_ = 201;
223964    +        _LEAF_  =                   53;
MPRINT(EM_DIAGRAM):   _LEAF_ = 53;
223965    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223966    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223967    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223968    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223969    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
223970    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
223971    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223972    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
223973    +        END;
MPRINT(EM_DIAGRAM):   END;
223974    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
223975    +        _NODE_  =                  197;
MPRINT(EM_DIAGRAM):   _NODE_ = 197;
223976    +        _LEAF_  =                   49;
MPRINT(EM_DIAGRAM):   _LEAF_ = 49;
223977    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
223978    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
223979    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
223980    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
223981    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
223982    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
223983    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
223984    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
223985    +        END;
MPRINT(EM_DIAGRAM):   END;
223986    +      END;
MPRINT(EM_DIAGRAM):   END;
223987    +    ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
223988    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
223989    +        RANGE_LOG_Total_Trans_Amt  <     0.10973593714649 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.10973593714649 THEN DO;
223990    +        _NODE_  =                  202;
MPRINT(EM_DIAGRAM):   _NODE_ = 202;
223991    +        _LEAF_  =                   54;
MPRINT(EM_DIAGRAM):   _LEAF_ = 54;
223992    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
223993    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
223994    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
223995    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
223996    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
223997    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
223998    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
223999    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224000    +        END;
MPRINT(EM_DIAGRAM):   END;
224001    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224002    +            0.12729564500095 <= RANGE_LOG_Total_Trans_Amt  AND
224003    +        RANGE_LOG_Total_Trans_Amt  <     0.14613124197535 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.12729564500095 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.14613124197535 THEN DO;
224004    +        _NODE_  =                  204;
MPRINT(EM_DIAGRAM):   _NODE_ = 204;
224005    +        _LEAF_  =                   56;
MPRINT(EM_DIAGRAM):   _LEAF_ = 56;
224006    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
224007    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
224008    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
224009    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
224010    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224011    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224012    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224013    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224014    +        END;
MPRINT(EM_DIAGRAM):   END;
224015    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224016    +            0.14613124197535 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.14613124197535 <= RANGE_LOG_Total_Trans_Amt THEN DO;
224017    +        _NODE_  =                  205;
MPRINT(EM_DIAGRAM):   _NODE_ = 205;
224018    +        _LEAF_  =                   57;
MPRINT(EM_DIAGRAM):   _LEAF_ = 57;
224019    +        P_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.25;
224020    +        P_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.75;
224021    +        Q_Attrition_Flag0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.25;
224022    +        Q_Attrition_Flag1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.75;
224023    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
224024    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
224025    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224026    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224027    +        END;
MPRINT(EM_DIAGRAM):   END;
224028    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224029    +        _NODE_  =                  203;
MPRINT(EM_DIAGRAM):   _NODE_ = 203;
224030    +        _LEAF_  =                   55;
MPRINT(EM_DIAGRAM):   _LEAF_ = 55;
224031    +        P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
224032    +        P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
224033    +        Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
224034    +        Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
224035    +        V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
224036    +        V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
224037    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224038    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224039    +        END;
MPRINT(EM_DIAGRAM):   END;
224040    +      END;
MPRINT(EM_DIAGRAM):   END;
224041    +    ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
224042    +      _NODE_  =                   78;
MPRINT(EM_DIAGRAM):   _NODE_ = 78;
224043    +      _LEAF_  =                   58;
MPRINT(EM_DIAGRAM):   _LEAF_ = 58;
224044    +      P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
224045    +      P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
224046    +      Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
224047    +      Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
224048    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
224049    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
224050    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224051    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224052    +      END;
MPRINT(EM_DIAGRAM):   END;
224053    +    ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
224054    +      _NODE_  =                   79;
MPRINT(EM_DIAGRAM):   _NODE_ = 79;
224055    +      _LEAF_  =                   59;
MPRINT(EM_DIAGRAM):   _LEAF_ = 59;
224056    +      P_Attrition_Flag0  =     0.96296296296296;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.96296296296296;
224057    +      P_Attrition_Flag1  =     0.03703703703703;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.03703703703703;
224058    +      Q_Attrition_Flag0  =     0.96296296296296;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.96296296296296;
224059    +      Q_Attrition_Flag1  =     0.03703703703703;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.03703703703703;
224060    +      V_Attrition_Flag0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9090909090909;
224061    +      V_Attrition_Flag1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.09090909090909;
224062    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224063    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224064    +      END;
MPRINT(EM_DIAGRAM):   END;
224065    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224066    +      _NODE_  =                   80;
MPRINT(EM_DIAGRAM):   _NODE_ = 80;
224067    +      _LEAF_  =                   60;
MPRINT(EM_DIAGRAM):   _LEAF_ = 60;
224068    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224069    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224070    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224071    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224072    +      V_Attrition_Flag0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.71428571428571;
224073    +      V_Attrition_Flag1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.28571428571428;
224074    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224075    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224076    +      END;
MPRINT(EM_DIAGRAM):   END;
224077    +    END;
MPRINT(EM_DIAGRAM):   END;
224078    +  ELSE IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
224079    +        0.94616607071911 <= RANGE_Total_Revolving_Bal  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND 0.94616607071911 <= RANGE_Total_Revolving_Bal THEN DO;
224080    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224081    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.41675012341901 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.41675012341901 THEN DO;
224082    +      _NODE_  =                   87;
MPRINT(EM_DIAGRAM):   _NODE_ = 87;
224083    +      _LEAF_  =                   81;
MPRINT(EM_DIAGRAM):   _LEAF_ = 81;
224084    +      P_Attrition_Flag0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.26923076923076;
224085    +      P_Attrition_Flag1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.73076923076923;
224086    +      Q_Attrition_Flag0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.26923076923076;
224087    +      Q_Attrition_Flag1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.73076923076923;
224088    +      V_Attrition_Flag0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.11111111111111;
224089    +      V_Attrition_Flag1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.88888888888888;
224090    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224091    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224092    +      END;
MPRINT(EM_DIAGRAM):   END;
224093    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224094    +          0.41675012341901 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224095    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.43201250224123 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.41675012341901 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.43201250224123 THEN DO;
224096    +      _NODE_  =                   88;
MPRINT(EM_DIAGRAM):   _NODE_ = 88;
224097    +      _LEAF_  =                   82;
MPRINT(EM_DIAGRAM):   _LEAF_ = 82;
224098    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
224099    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
224100    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
224101    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
224102    +      V_Attrition_Flag0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.66666666666666;
224103    +      V_Attrition_Flag1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.33333333333333;
224104    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224105    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224106    +      END;
MPRINT(EM_DIAGRAM):   END;
224107    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224108    +          0.43201250224123 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224109    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.45199138620858 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.43201250224123 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.45199138620858 THEN DO;
224110    +      _NODE_  =                   89;
MPRINT(EM_DIAGRAM):   _NODE_ = 89;
224111    +      _LEAF_  =                   83;
MPRINT(EM_DIAGRAM):   _LEAF_ = 83;
224112    +      P_Attrition_Flag0  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.30434782608695;
224113    +      P_Attrition_Flag1  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.69565217391304;
224114    +      Q_Attrition_Flag0  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.30434782608695;
224115    +      Q_Attrition_Flag1  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.69565217391304;
224116    +      V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
224117    +      V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
224118    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224119    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224120    +      END;
MPRINT(EM_DIAGRAM):   END;
224121    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224122    +          0.45199138620858 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224123    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.46277307645394 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.45199138620858 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.46277307645394 THEN DO;
224124    +      _NODE_  =                   90;
MPRINT(EM_DIAGRAM):   _NODE_ = 90;
224125    +      _LEAF_  =                   84;
MPRINT(EM_DIAGRAM):   _LEAF_ = 84;
224126    +      P_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.09090909090909;
224127    +      P_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.9090909090909;
224128    +      Q_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.09090909090909;
224129    +      Q_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.9090909090909;
224130    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224131    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224132    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224133    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224134    +      END;
MPRINT(EM_DIAGRAM):   END;
224135    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224136    +          0.54065639603327 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.54065639603327 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
224137    +      _NODE_  =                   92;
MPRINT(EM_DIAGRAM):   _NODE_ = 92;
224138    +      _LEAF_  =                   89;
MPRINT(EM_DIAGRAM):   _LEAF_ = 89;
224139    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224140    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224141    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224142    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224143    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224144    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224145    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224146    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224147    +      END;
MPRINT(EM_DIAGRAM):   END;
224148    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224149    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224150    +            0.13751080906898 <= RANGE_LOG_Total_Trans_Amt  AND
224151    +        RANGE_LOG_Total_Trans_Amt  <     0.15664697005632 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.13751080906898 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.15664697005632 THEN DO;
224152    +        _NODE_  =                  249;
MPRINT(EM_DIAGRAM):   _NODE_ = 249;
224153    +        _LEAF_  =                   86;
MPRINT(EM_DIAGRAM):   _LEAF_ = 86;
224154    +        P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
224155    +        P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
224156    +        Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
224157    +        Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
224158    +        V_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.2;
224159    +        V_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.8;
224160    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224161    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224162    +        END;
MPRINT(EM_DIAGRAM):   END;
224163    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224164    +            0.15664697005632 <= RANGE_LOG_Total_Trans_Amt  AND
224165    +        RANGE_LOG_Total_Trans_Amt  <     0.16314894488569 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.15664697005632 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.16314894488569 THEN DO;
224166    +        _NODE_  =                  250;
MPRINT(EM_DIAGRAM):   _NODE_ = 250;
224167    +        _LEAF_  =                   87;
MPRINT(EM_DIAGRAM):   _LEAF_ = 87;
224168    +        P_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.22222222222222;
224169    +        P_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.77777777777777;
224170    +        Q_Attrition_Flag0  =     0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.22222222222222;
224171    +        Q_Attrition_Flag1  =     0.77777777777777;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.77777777777777;
224172    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224173    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224174    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224175    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224176    +        END;
MPRINT(EM_DIAGRAM):   END;
224177    +      ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224178    +            0.16314894488569 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.16314894488569 <= RANGE_LOG_Total_Trans_Amt THEN DO;
224179    +        _NODE_  =                  251;
MPRINT(EM_DIAGRAM):   _NODE_ = 251;
224180    +        _LEAF_  =                   88;
MPRINT(EM_DIAGRAM):   _LEAF_ = 88;
224181    +        P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
224182    +        P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
224183    +        Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
224184    +        Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
224185    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224186    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224187    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224188    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224189    +        END;
MPRINT(EM_DIAGRAM):   END;
224190    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224191    +        _NODE_  =                  248;
MPRINT(EM_DIAGRAM):   _NODE_ = 248;
224192    +        _LEAF_  =                   85;
MPRINT(EM_DIAGRAM):   _LEAF_ = 85;
224193    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224194    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224195    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224196    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224197    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
224198    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
224199    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224200    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224201    +        END;
MPRINT(EM_DIAGRAM):   END;
224202    +      END;
MPRINT(EM_DIAGRAM):   END;
224203    +    END;
MPRINT(EM_DIAGRAM):   END;
224204    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224205    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224206    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.39722304151513 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.39722304151513 THEN DO;
224207    +      _NODE_  =                   81;
MPRINT(EM_DIAGRAM):   _NODE_ = 81;
224208    +      _LEAF_  =                   61;
MPRINT(EM_DIAGRAM):   _LEAF_ = 61;
224209    +      P_Attrition_Flag0  =     0.41509433962264;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.41509433962264;
224210    +      P_Attrition_Flag1  =     0.58490566037735;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.58490566037735;
224211    +      Q_Attrition_Flag0  =     0.41509433962264;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.41509433962264;
224212    +      Q_Attrition_Flag1  =     0.58490566037735;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.58490566037735;
224213    +      V_Attrition_Flag0  =     0.27272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.27272727272727;
224214    +      V_Attrition_Flag1  =     0.72727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.72727272727272;
224215    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224216    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224217    +      END;
MPRINT(EM_DIAGRAM):   END;
224218    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224219    +          0.39722304151513 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224220    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.40310815789239 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.39722304151513 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.40310815789239 THEN DO;
224221    +      _NODE_  =                   82;
MPRINT(EM_DIAGRAM):   _NODE_ = 82;
224222    +      _LEAF_  =                   62;
MPRINT(EM_DIAGRAM):   _LEAF_ = 62;
224223    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224224    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224225    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224226    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224227    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224228    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224229    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224230    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224231    +      END;
MPRINT(EM_DIAGRAM):   END;
224232    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224233    +          0.48285277403813 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224234    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.48815824887731 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48285277403813 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.48815824887731 THEN DO;
224235    +      _NODE_  =                   84;
MPRINT(EM_DIAGRAM):   _NODE_ = 84;
224236    +      _LEAF_  =                   73;
MPRINT(EM_DIAGRAM):   _LEAF_ = 73;
224237    +      P_Attrition_Flag0  =     0.95652173913043;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.95652173913043;
224238    +      P_Attrition_Flag1  =     0.04347826086956;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.04347826086956;
224239    +      Q_Attrition_Flag0  =     0.95652173913043;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.95652173913043;
224240    +      Q_Attrition_Flag1  =     0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.04347826086956;
224241    +      V_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.8;
224242    +      V_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.2;
224243    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224244    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224245    +      END;
MPRINT(EM_DIAGRAM):   END;
224246    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224247    +          0.48815824887731 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224248    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51127980701015 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.48815824887731 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51127980701015 THEN DO;
224249    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224250    +            0.37166695401491 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224251    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.44854901735868 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.37166695401491 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.44854901735868 THEN DO;
224252    +        _NODE_  =                  229;
MPRINT(EM_DIAGRAM):   _NODE_ = 229;
224253    +        _LEAF_  =                   75;
MPRINT(EM_DIAGRAM):   _LEAF_ = 75;
224254    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
224255    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
224256    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
224257    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
224258    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224259    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224260    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224261    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224262    +        END;
MPRINT(EM_DIAGRAM):   END;
224263    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224264    +            0.44854901735868 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224265    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.58116784979219 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.44854901735868 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.58116784979219 THEN DO;
224266    +        _NODE_  =                  230;
MPRINT(EM_DIAGRAM):   _NODE_ = 230;
224267    +        _LEAF_  =                   76;
MPRINT(EM_DIAGRAM):   _LEAF_ = 76;
224268    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
224269    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
224270    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
224271    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
224272    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224273    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224274    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224275    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224276    +        END;
MPRINT(EM_DIAGRAM):   END;
224277    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224278    +            0.58116784979219 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224279    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.82532759775396 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.58116784979219 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.82532759775396 THEN DO;
224280    +        _NODE_  =                  231;
MPRINT(EM_DIAGRAM):   _NODE_ = 231;
224281    +        _LEAF_  =                   77;
MPRINT(EM_DIAGRAM):   _LEAF_ = 77;
224282    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
224283    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
224284    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
224285    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
224286    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224287    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224288    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224289    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224290    +        END;
MPRINT(EM_DIAGRAM):   END;
224291    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224292    +            0.82532759775396 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224293    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.89487316725644 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.82532759775396 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.89487316725644 THEN DO;
224294    +        _NODE_  =                  232;
MPRINT(EM_DIAGRAM):   _NODE_ = 232;
224295    +        _LEAF_  =                   78;
MPRINT(EM_DIAGRAM):   _LEAF_ = 78;
224296    +        P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
224297    +        P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
224298    +        Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
224299    +        Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
224300    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224301    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224302    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224303    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224304    +        END;
MPRINT(EM_DIAGRAM):   END;
224305    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224306    +            0.89487316725644 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.89487316725644 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
224307    +        _NODE_  =                  233;
MPRINT(EM_DIAGRAM):   _NODE_ = 233;
224308    +        _LEAF_  =                   79;
MPRINT(EM_DIAGRAM):   _LEAF_ = 79;
224309    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
224310    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
224311    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
224312    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
224313    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224314    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224315    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224316    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224317    +        END;
MPRINT(EM_DIAGRAM):   END;
224318    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224319    +        _NODE_  =                  228;
MPRINT(EM_DIAGRAM):   _NODE_ = 228;
224320    +        _LEAF_  =                   74;
MPRINT(EM_DIAGRAM):   _LEAF_ = 74;
224321    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224322    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224323    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224324    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224325    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224326    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224327    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224328    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224329    +        END;
MPRINT(EM_DIAGRAM):   END;
224330    +      END;
MPRINT(EM_DIAGRAM):   END;
224331    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224332    +          0.51127980701015 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51127980701015 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
224333    +      _NODE_  =                   86;
MPRINT(EM_DIAGRAM):   _NODE_ = 86;
224334    +      _LEAF_  =                   80;
MPRINT(EM_DIAGRAM):   _LEAF_ = 80;
224335    +      P_Attrition_Flag0  =     0.97029702970297;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.97029702970297;
224336    +      P_Attrition_Flag1  =     0.02970297029702;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.02970297029702;
224337    +      Q_Attrition_Flag0  =     0.97029702970297;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.97029702970297;
224338    +      Q_Attrition_Flag1  =     0.02970297029702;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.02970297029702;
224339    +      V_Attrition_Flag0  =     0.98360655737704;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.98360655737704;
224340    +      V_Attrition_Flag1  =     0.01639344262295;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.01639344262295;
224341    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224342    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224343    +      END;
MPRINT(EM_DIAGRAM):   END;
224344    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224345    +      _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
224346    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
224347    +      IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
224348    +        _NODE_  =                  220;
MPRINT(EM_DIAGRAM):   _NODE_ = 220;
224349    +        _LEAF_  =                   63;
MPRINT(EM_DIAGRAM):   _LEAF_ = 63;
224350    +        P_Attrition_Flag0  =     0.54166666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.54166666666666;
224351    +        P_Attrition_Flag1  =     0.45833333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.45833333333333;
224352    +        Q_Attrition_Flag0  =     0.54166666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.54166666666666;
224353    +        Q_Attrition_Flag1  =     0.45833333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.45833333333333;
224354    +        V_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.875;
224355    +        V_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.125;
224356    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224357    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224358    +        END;
MPRINT(EM_DIAGRAM):   END;
224359    +      ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('2' ) THEN DO;
224360    +        _NODE_  =                  221;
MPRINT(EM_DIAGRAM):   _NODE_ = 221;
224361    +        _LEAF_  =                   64;
MPRINT(EM_DIAGRAM):   _LEAF_ = 64;
224362    +        P_Attrition_Flag0  =     0.59523809523809;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.59523809523809;
224363    +        P_Attrition_Flag1  =      0.4047619047619;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4047619047619;
224364    +        Q_Attrition_Flag0  =     0.59523809523809;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.59523809523809;
224365    +        Q_Attrition_Flag1  =      0.4047619047619;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4047619047619;
224366    +        V_Attrition_Flag0  =     0.72727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.72727272727272;
224367    +        V_Attrition_Flag1  =     0.27272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.27272727272727;
224368    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224369    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224370    +        END;
MPRINT(EM_DIAGRAM):   END;
224371    +      ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ) THEN DO;
224372    +        IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224373    +          RANGE_LOG_Total_Trans_Amt  <     0.10847073353612 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.10847073353612 THEN DO;
224374    +          _NODE_  =                  338;
MPRINT(EM_DIAGRAM):   _NODE_ = 338;
224375    +          _LEAF_  =                   65;
MPRINT(EM_DIAGRAM):   _LEAF_ = 65;
224376    +          P_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85714285714285;
224377    +          P_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14285714285714;
224378    +          Q_Attrition_Flag0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85714285714285;
224379    +          Q_Attrition_Flag1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14285714285714;
224380    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224381    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224382    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224383    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224384    +          END;
MPRINT(EM_DIAGRAM):   END;
224385    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224386    +              0.12140456226343 <= RANGE_LOG_Total_Trans_Amt  AND
224387    +          RANGE_LOG_Total_Trans_Amt  <     0.13553922283853 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.12140456226343 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.13553922283853 THEN DO;
224388    +          _NODE_  =                  340;
MPRINT(EM_DIAGRAM):   _NODE_ = 340;
224389    +          _LEAF_  =                   67;
MPRINT(EM_DIAGRAM):   _LEAF_ = 67;
224390    +          P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
224391    +          P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
224392    +          Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
224393    +          Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
224394    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224395    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224396    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224397    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224398    +          END;
MPRINT(EM_DIAGRAM):   END;
224399    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224400    +              0.13553922283853 <= RANGE_LOG_Total_Trans_Amt  AND
224401    +          RANGE_LOG_Total_Trans_Amt  <      0.1494269099783 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.13553922283853 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.1494269099783 THEN DO;
224402    +          _NODE_  =                  341;
MPRINT(EM_DIAGRAM):   _NODE_ = 341;
224403    +          _LEAF_  =                   68;
MPRINT(EM_DIAGRAM):   _LEAF_ = 68;
224404    +          P_Attrition_Flag0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.28571428571428;
224405    +          P_Attrition_Flag1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.71428571428571;
224406    +          Q_Attrition_Flag0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.28571428571428;
224407    +          Q_Attrition_Flag1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.71428571428571;
224408    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224409    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224410    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224411    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224412    +          END;
MPRINT(EM_DIAGRAM):   END;
224413    +        ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224414    +               0.1494269099783 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.1494269099783 <= RANGE_LOG_Total_Trans_Amt THEN DO;
224415    +          _NODE_  =                  342;
MPRINT(EM_DIAGRAM):   _NODE_ = 342;
224416    +          _LEAF_  =                   69;
MPRINT(EM_DIAGRAM):   _LEAF_ = 69;
224417    +          P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
224418    +          P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
224419    +          Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
224420    +          Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
224421    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224422    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224423    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224424    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224425    +          END;
MPRINT(EM_DIAGRAM):   END;
224426    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224427    +          _NODE_  =                  339;
MPRINT(EM_DIAGRAM):   _NODE_ = 339;
224428    +          _LEAF_  =                   66;
MPRINT(EM_DIAGRAM):   _LEAF_ = 66;
224429    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224430    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224431    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224432    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224433    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224434    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224435    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224436    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224437    +          END;
MPRINT(EM_DIAGRAM):   END;
224438    +        END;
MPRINT(EM_DIAGRAM):   END;
224439    +      ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
224440    +        _NODE_  =                  223;
MPRINT(EM_DIAGRAM):   _NODE_ = 223;
224441    +        _LEAF_  =                   70;
MPRINT(EM_DIAGRAM):   _LEAF_ = 70;
224442    +        P_Attrition_Flag0  =     0.85185185185185;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.85185185185185;
224443    +        P_Attrition_Flag1  =     0.14814814814814;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.14814814814814;
224444    +        Q_Attrition_Flag0  =     0.85185185185185;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.85185185185185;
224445    +        Q_Attrition_Flag1  =     0.14814814814814;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.14814814814814;
224446    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224447    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224448    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224449    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224450    +        END;
MPRINT(EM_DIAGRAM):   END;
224451    +      ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
224452    +        _NODE_  =                  224;
MPRINT(EM_DIAGRAM):   _NODE_ = 224;
224453    +        _LEAF_  =                   71;
MPRINT(EM_DIAGRAM):   _LEAF_ = 71;
224454    +        P_Attrition_Flag0  =                 0.88;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88;
224455    +        P_Attrition_Flag1  =                 0.12;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.12;
224456    +        Q_Attrition_Flag0  =                 0.88;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88;
224457    +        Q_Attrition_Flag1  =                 0.12;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.12;
224458    +        V_Attrition_Flag0  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.78571428571428;
224459    +        V_Attrition_Flag1  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.21428571428571;
224460    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224461    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224462    +        END;
MPRINT(EM_DIAGRAM):   END;
224463    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224464    +        _NODE_  =                  225;
MPRINT(EM_DIAGRAM):   _NODE_ = 225;
224465    +        _LEAF_  =                   72;
MPRINT(EM_DIAGRAM):   _LEAF_ = 72;
224466    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224467    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224468    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224469    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224470    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224471    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224472    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224473    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224474    +        END;
MPRINT(EM_DIAGRAM):   END;
224475    +      END;
MPRINT(EM_DIAGRAM):   END;
224476    +    END;
MPRINT(EM_DIAGRAM):   END;
224477    +  END;
MPRINT(EM_DIAGRAM):   END;
224478    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224479    +      0.34217286191838 <= RANGE_LOG_Total_Trans_Amt  AND
224480    +  RANGE_LOG_Total_Trans_Amt  <     0.68217373468557 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.34217286191838 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.68217373468557 THEN DO;
224481    +  _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
224482    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
224483    +  IF _ARBFMT_12 IN ('7' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('7' ) THEN DO;
224484    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224485    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.41391728109155 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.41391728109155 THEN DO;
224486    +      _NODE_  =                  117;
MPRINT(EM_DIAGRAM):   _NODE_ = 117;
224487    +      _LEAF_  =                  112;
MPRINT(EM_DIAGRAM):   _LEAF_ = 112;
224488    +      P_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.5;
224489    +      P_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.5;
224490    +      Q_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.5;
224491    +      Q_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.5;
224492    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224493    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224494    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224495    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224496    +      END;
MPRINT(EM_DIAGRAM):   END;
224497    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224498    +          0.46404421875696 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224499    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49236141178893 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.46404421875696 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49236141178893 THEN DO;
224500    +      IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
224501    +            0.40626434564763 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
224502    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <       0.414627277319 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.40626434564763 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.414627277319 THEN DO;
224503    +        _NODE_  =                  268;
MPRINT(EM_DIAGRAM):   _NODE_ = 268;
224504    +        _LEAF_  =                  115;
MPRINT(EM_DIAGRAM):   _LEAF_ = 115;
224505    +        P_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.88888888888888;
224506    +        P_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.11111111111111;
224507    +        Q_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.88888888888888;
224508    +        Q_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.11111111111111;
224509    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224510    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224511    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224512    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224513    +        END;
MPRINT(EM_DIAGRAM):   END;
224514    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
224515    +              0.414627277319 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
224516    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.44120909888919 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.414627277319 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.44120909888919 THEN DO;
224517    +        _NODE_  =                  269;
MPRINT(EM_DIAGRAM):   _NODE_ = 269;
224518    +        _LEAF_  =                  116;
MPRINT(EM_DIAGRAM):   _LEAF_ = 116;
224519    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224520    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224521    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224522    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224523    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224524    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224525    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224526    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224527    +        END;
MPRINT(EM_DIAGRAM):   END;
224528    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
224529    +            0.44120909888919 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
224530    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.45384692453765 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.44120909888919 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.45384692453765 THEN DO;
224531    +        _NODE_  =                  270;
MPRINT(EM_DIAGRAM):   _NODE_ = 270;
224532    +        _LEAF_  =                  117;
MPRINT(EM_DIAGRAM):   _LEAF_ = 117;
224533    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
224534    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
224535    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
224536    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
224537    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224538    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224539    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224540    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224541    +        END;
MPRINT(EM_DIAGRAM):   END;
224542    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
224543    +            0.45384692453765 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
224544    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.51563086231801 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.45384692453765 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.51563086231801 THEN DO;
224545    +        IF  NOT MISSING(RANGE_Total_Revolving_Bal ) AND
224546    +          RANGE_Total_Revolving_Bal  <     0.20679380214541 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_Total_Revolving_Bal ) AND RANGE_Total_Revolving_Bal < 0.20679380214541 THEN DO;
224547    +          _NODE_  =                  360;
MPRINT(EM_DIAGRAM):   _NODE_ = 360;
224548    +          _LEAF_  =                  118;
MPRINT(EM_DIAGRAM):   _LEAF_ = 118;
224549    +          P_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.375;
224550    +          P_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.625;
224551    +          Q_Attrition_Flag0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.375;
224552    +          Q_Attrition_Flag1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.625;
224553    +          V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224554    +          V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224555    +          I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224556    +          U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224557    +          END;
MPRINT(EM_DIAGRAM):   END;
224558    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224559    +          _NODE_  =                  361;
MPRINT(EM_DIAGRAM):   _NODE_ = 361;
224560    +          _LEAF_  =                  119;
MPRINT(EM_DIAGRAM):   _LEAF_ = 119;
224561    +          P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224562    +          P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224563    +          Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224564    +          Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224565    +          V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224566    +          V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224567    +          I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224568    +          U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224569    +          END;
MPRINT(EM_DIAGRAM):   END;
224570    +        END;
MPRINT(EM_DIAGRAM):   END;
224571    +      ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
224572    +            0.51563086231801 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.51563086231801 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 THEN DO;
224573    +        _NODE_  =                  272;
MPRINT(EM_DIAGRAM):   _NODE_ = 272;
224574    +        _LEAF_  =                  120;
MPRINT(EM_DIAGRAM):   _LEAF_ = 120;
224575    +        P_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.16666666666666;
224576    +        P_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.83333333333333;
224577    +        Q_Attrition_Flag0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.16666666666666;
224578    +        Q_Attrition_Flag1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.83333333333333;
224579    +        V_Attrition_Flag0  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.5;
224580    +        V_Attrition_Flag1  =                  0.5;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.5;
224581    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224582    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224583    +        END;
MPRINT(EM_DIAGRAM):   END;
224584    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224585    +        _NODE_  =                  267;
MPRINT(EM_DIAGRAM):   _NODE_ = 267;
224586    +        _LEAF_  =                  114;
MPRINT(EM_DIAGRAM):   _LEAF_ = 114;
224587    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224588    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224589    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224590    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224591    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224592    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224593    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224594    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224595    +        END;
MPRINT(EM_DIAGRAM):   END;
224596    +      END;
MPRINT(EM_DIAGRAM):   END;
224597    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224598    +          0.49236141178893 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224599    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.49474718712517 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49236141178893 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.49474718712517 THEN DO;
224600    +      _NODE_  =                  120;
MPRINT(EM_DIAGRAM):   _NODE_ = 120;
224601    +      _LEAF_  =                  121;
MPRINT(EM_DIAGRAM):   _LEAF_ = 121;
224602    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224603    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224604    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224605    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224606    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224607    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224608    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224609    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224610    +      END;
MPRINT(EM_DIAGRAM):   END;
224611    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224612    +          0.49474718712517 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224613    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.51814270095588 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49474718712517 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.51814270095588 THEN DO;
224614    +      _NODE_  =                  121;
MPRINT(EM_DIAGRAM):   _NODE_ = 121;
224615    +      _LEAF_  =                  122;
MPRINT(EM_DIAGRAM):   _LEAF_ = 122;
224616    +      P_Attrition_Flag0  =               0.7875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.7875;
224617    +      P_Attrition_Flag1  =               0.2125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2125;
224618    +      Q_Attrition_Flag0  =               0.7875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.7875;
224619    +      Q_Attrition_Flag1  =               0.2125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2125;
224620    +      V_Attrition_Flag0  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.88888888888888;
224621    +      V_Attrition_Flag1  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.11111111111111;
224622    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224623    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224624    +      END;
MPRINT(EM_DIAGRAM):   END;
224625    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224626    +          0.51814270095588 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.51814270095588 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
224627    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224628    +            0.23344859718855 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224629    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.36684918977335 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.23344859718855 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.36684918977335 THEN DO;
224630    +        _NODE_  =                  280;
MPRINT(EM_DIAGRAM):   _NODE_ = 280;
224631    +        _LEAF_  =                  124;
MPRINT(EM_DIAGRAM):   _LEAF_ = 124;
224632    +        P_Attrition_Flag0  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.55555555555555;
224633    +        P_Attrition_Flag1  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.44444444444444;
224634    +        Q_Attrition_Flag0  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.55555555555555;
224635    +        Q_Attrition_Flag1  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.44444444444444;
224636    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224637    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224638    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224639    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224640    +        END;
MPRINT(EM_DIAGRAM):   END;
224641    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224642    +            0.36684918977335 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224643    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.56904143807919 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.36684918977335 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.56904143807919 THEN DO;
224644    +        _NODE_  =                  281;
MPRINT(EM_DIAGRAM):   _NODE_ = 281;
224645    +        _LEAF_  =                  125;
MPRINT(EM_DIAGRAM):   _LEAF_ = 125;
224646    +        P_Attrition_Flag0  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.125;
224647    +        P_Attrition_Flag1  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.875;
224648    +        Q_Attrition_Flag0  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.125;
224649    +        Q_Attrition_Flag1  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.875;
224650    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224651    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224652    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224653    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224654    +        END;
MPRINT(EM_DIAGRAM):   END;
224655    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224656    +            0.56904143807919 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224657    +        RANGE_SQRT_Avg_Utilization_Ratio  <     0.62360840241109 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.56904143807919 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.62360840241109 THEN DO;
224658    +        _NODE_  =                  282;
MPRINT(EM_DIAGRAM):   _NODE_ = 282;
224659    +        _LEAF_  =                  126;
MPRINT(EM_DIAGRAM):   _LEAF_ = 126;
224660    +        P_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.6;
224661    +        P_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.4;
224662    +        Q_Attrition_Flag0  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.6;
224663    +        Q_Attrition_Flag1  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.4;
224664    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224665    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224666    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224667    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224668    +        END;
MPRINT(EM_DIAGRAM):   END;
224669    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224670    +            0.62360840241109 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.62360840241109 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
224671    +        _NODE_  =                  283;
MPRINT(EM_DIAGRAM):   _NODE_ = 283;
224672    +        _LEAF_  =                  127;
MPRINT(EM_DIAGRAM):   _LEAF_ = 127;
224673    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224674    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224675    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224676    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224677    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224678    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224679    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224680    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224681    +        END;
MPRINT(EM_DIAGRAM):   END;
224682    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224683    +        _NODE_  =                  279;
MPRINT(EM_DIAGRAM):   _NODE_ = 279;
224684    +        _LEAF_  =                  123;
MPRINT(EM_DIAGRAM):   _LEAF_ = 123;
224685    +        P_Attrition_Flag0  =     0.10526315789473;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.10526315789473;
224686    +        P_Attrition_Flag1  =     0.89473684210526;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.89473684210526;
224687    +        Q_Attrition_Flag0  =     0.10526315789473;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.10526315789473;
224688    +        Q_Attrition_Flag1  =     0.89473684210526;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.89473684210526;
224689    +        V_Attrition_Flag0  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.09090909090909;
224690    +        V_Attrition_Flag1  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.9090909090909;
224691    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224692    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224693    +        END;
MPRINT(EM_DIAGRAM):   END;
224694    +      END;
MPRINT(EM_DIAGRAM):   END;
224695    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224696    +      _NODE_  =                  118;
MPRINT(EM_DIAGRAM):   _NODE_ = 118;
224697    +      _LEAF_  =                  113;
MPRINT(EM_DIAGRAM):   _LEAF_ = 113;
224698    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224699    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224700    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224701    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224702    +      V_Attrition_Flag0  =     0.97727272727272;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.97727272727272;
224703    +      V_Attrition_Flag1  =     0.02272727272727;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.02272727272727;
224704    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224705    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224706    +      END;
MPRINT(EM_DIAGRAM):   END;
224707    +    END;
MPRINT(EM_DIAGRAM):   END;
224708    +  ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('6' ) THEN DO;
224709    +    IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224710    +      RANGE_LOG_Total_Trans_Amt  <     0.36569662840787 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.36569662840787 THEN DO;
224711    +      IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224712    +            0.50720030994984 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.50720030994984 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
224713    +        _NODE_  =                  285;
MPRINT(EM_DIAGRAM):   _NODE_ = 285;
224714    +        _LEAF_  =                  129;
MPRINT(EM_DIAGRAM):   _LEAF_ = 129;
224715    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
224716    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
224717    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
224718    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
224719    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224720    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224721    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224722    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224723    +        END;
MPRINT(EM_DIAGRAM):   END;
224724    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224725    +        _NODE_  =                  284;
MPRINT(EM_DIAGRAM):   _NODE_ = 284;
224726    +        _LEAF_  =                  128;
MPRINT(EM_DIAGRAM):   _LEAF_ = 128;
224727    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224728    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224729    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224730    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224731    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224732    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224733    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224734    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224735    +        END;
MPRINT(EM_DIAGRAM):   END;
224736    +      END;
MPRINT(EM_DIAGRAM):   END;
224737    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224738    +          0.36569662840787 <= RANGE_LOG_Total_Trans_Amt  AND
224739    +      RANGE_LOG_Total_Trans_Amt  <     0.47182669343092 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.36569662840787 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.47182669343092 THEN DO;
224740    +      _NODE_  =                  124;
MPRINT(EM_DIAGRAM):   _NODE_ = 124;
224741    +      _LEAF_  =                  130;
MPRINT(EM_DIAGRAM):   _LEAF_ = 130;
224742    +      P_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.05263157894736;
224743    +      P_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.94736842105263;
224744    +      Q_Attrition_Flag0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.05263157894736;
224745    +      Q_Attrition_Flag1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.94736842105263;
224746    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224747    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224748    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224749    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224750    +      END;
MPRINT(EM_DIAGRAM):   END;
224751    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224752    +          0.47182669343092 <= RANGE_LOG_Total_Trans_Amt  AND
224753    +      RANGE_LOG_Total_Trans_Amt  <     0.50438753588262 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.47182669343092 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.50438753588262 THEN DO;
224754    +      IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224755    +            0.29700429664855 <= RANGE_SQRT_Avg_Utilization_Ratio  AND
224756    +        RANGE_SQRT_Avg_Utilization_Ratio  <      0.4291652643428 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.29700429664855 <= RANGE_SQRT_Avg_Utilization_Ratio AND RANGE_SQRT_Avg_Utilization_Ratio < 0.4291652643428 THEN DO;
224757    +        _NODE_  =                  289;
MPRINT(EM_DIAGRAM):   _NODE_ = 289;
224758    +        _LEAF_  =                  132;
MPRINT(EM_DIAGRAM):   _LEAF_ = 132;
224759    +        P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
224760    +        P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
224761    +        Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
224762    +        Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
224763    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224764    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224765    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224766    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224767    +        END;
MPRINT(EM_DIAGRAM):   END;
224768    +      ELSE IF  NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND
224769    +             0.4291652643428 <= RANGE_SQRT_Avg_Utilization_Ratio  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Avg_Utilization_Ratio ) AND 0.4291652643428 <= RANGE_SQRT_Avg_Utilization_Ratio THEN DO;
224770    +        _NODE_  =                  290;
MPRINT(EM_DIAGRAM):   _NODE_ = 290;
224771    +        _LEAF_  =                  133;
MPRINT(EM_DIAGRAM):   _LEAF_ = 133;
224772    +        P_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83333333333333;
224773    +        P_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.16666666666666;
224774    +        Q_Attrition_Flag0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.83333333333333;
224775    +        Q_Attrition_Flag1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.16666666666666;
224776    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224777    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224778    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224779    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224780    +        END;
MPRINT(EM_DIAGRAM):   END;
224781    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224782    +        _NODE_  =                  288;
MPRINT(EM_DIAGRAM):   _NODE_ = 288;
224783    +        _LEAF_  =                  131;
MPRINT(EM_DIAGRAM):   _LEAF_ = 131;
224784    +        P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
224785    +        P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
224786    +        Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
224787    +        Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
224788    +        V_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.4;
224789    +        V_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.6;
224790    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224791    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224792    +        END;
MPRINT(EM_DIAGRAM):   END;
224793    +      END;
MPRINT(EM_DIAGRAM):   END;
224794    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224795    +          0.50438753588262 <= RANGE_LOG_Total_Trans_Amt  AND
224796    +      RANGE_LOG_Total_Trans_Amt  <     0.51369397376905 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.50438753588262 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.51369397376905 THEN DO;
224797    +      _NODE_  =                  126;
MPRINT(EM_DIAGRAM):   _NODE_ = 126;
224798    +      _LEAF_  =                  134;
MPRINT(EM_DIAGRAM):   _LEAF_ = 134;
224799    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
224800    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
224801    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
224802    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
224803    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224804    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224805    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224806    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224807    +      END;
MPRINT(EM_DIAGRAM):   END;
224808    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224809    +          0.51369397376905 <= RANGE_LOG_Total_Trans_Amt  AND
224810    +      RANGE_LOG_Total_Trans_Amt  <     0.52246573452757 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.51369397376905 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.52246573452757 THEN DO;
224811    +      _NODE_  =                  127;
MPRINT(EM_DIAGRAM):   _NODE_ = 127;
224812    +      _LEAF_  =                  135;
MPRINT(EM_DIAGRAM):   _LEAF_ = 135;
224813    +      P_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.14285714285714;
224814    +      P_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.85714285714285;
224815    +      Q_Attrition_Flag0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.14285714285714;
224816    +      Q_Attrition_Flag1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.85714285714285;
224817    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224818    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224819    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224820    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224821    +      END;
MPRINT(EM_DIAGRAM):   END;
224822    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224823    +      _NODE_  =                  128;
MPRINT(EM_DIAGRAM):   _NODE_ = 128;
224824    +      _LEAF_  =                  136;
MPRINT(EM_DIAGRAM):   _LEAF_ = 136;
224825    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
224826    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
224827    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
224828    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
224829    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224830    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224831    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224832    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224833    +      END;
MPRINT(EM_DIAGRAM):   END;
224834    +    END;
MPRINT(EM_DIAGRAM):   END;
224835    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224836    +    _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
224837    +    _LEAF_  =                  137;
MPRINT(EM_DIAGRAM):   _LEAF_ = 137;
224838    +    P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
224839    +    P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
224840    +    Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
224841    +    Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
224842    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224843    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224844    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224845    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224846    +    END;
MPRINT(EM_DIAGRAM):   END;
224847    +  END;
MPRINT(EM_DIAGRAM):   END;
224848    +ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224849    +      0.68217373468557 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.68217373468557 <= RANGE_LOG_Total_Trans_Amt THEN DO;
224850    +  _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
224851    +  _LEAF_  =                  138;
MPRINT(EM_DIAGRAM):   _LEAF_ = 138;
224852    +  P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224853    +  P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224854    +  Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224855    +  Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224856    +  V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224857    +  V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224858    +  I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224859    +  U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224860    +  END;
MPRINT(EM_DIAGRAM):   END;
224861    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224862    +  _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Total_Trans_Ct , BEST12.);
224863    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
224864    +  IF _ARBFMT_12 IN ('6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('6' ) THEN DO;
224865    +    IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224866    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.32866954130237 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.32866954130237 THEN DO;
224867    +      _NODE_  =                   95;
MPRINT(EM_DIAGRAM):   _NODE_ = 95;
224868    +      _LEAF_  =                   91;
MPRINT(EM_DIAGRAM):   _LEAF_ = 91;
224869    +      P_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.8;
224870    +      P_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.2;
224871    +      Q_Attrition_Flag0  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.8;
224872    +      Q_Attrition_Flag1  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.2;
224873    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224874    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224875    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224876    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224877    +      END;
MPRINT(EM_DIAGRAM):   END;
224878    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224879    +          0.49771332446437 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224880    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.53889078520273 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.49771332446437 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.53889078520273 THEN DO;
224881    +      _NODE_  =                   97;
MPRINT(EM_DIAGRAM):   _NODE_ = 97;
224882    +      _LEAF_  =                   93;
MPRINT(EM_DIAGRAM):   _LEAF_ = 93;
224883    +      P_Attrition_Flag0  =     0.98477157360406;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.98477157360406;
224884    +      P_Attrition_Flag1  =     0.01522842639593;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.01522842639593;
224885    +      Q_Attrition_Flag0  =     0.98477157360406;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.98477157360406;
224886    +      Q_Attrition_Flag1  =     0.01522842639593;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.01522842639593;
224887    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224888    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224889    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224890    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224891    +      END;
MPRINT(EM_DIAGRAM):   END;
224892    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224893    +          0.53889078520273 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224894    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.54997522870133 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.53889078520273 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.54997522870133 THEN DO;
224895    +      _NODE_  =                   98;
MPRINT(EM_DIAGRAM):   _NODE_ = 98;
224896    +      _LEAF_  =                   94;
MPRINT(EM_DIAGRAM):   _LEAF_ = 94;
224897    +      P_Attrition_Flag0  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.93939393939393;
224898    +      P_Attrition_Flag1  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.06060606060606;
224899    +      Q_Attrition_Flag0  =     0.93939393939393;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.93939393939393;
224900    +      Q_Attrition_Flag1  =     0.06060606060606;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.06060606060606;
224901    +      V_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.75;
224902    +      V_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.25;
224903    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224904    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224905    +      END;
MPRINT(EM_DIAGRAM):   END;
224906    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224907    +          0.54997522870133 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  AND
224908    +      RANGE_SQRT_Total_Amt_Chng_Q4_Q1  <     0.55688995780149 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.54997522870133 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 AND RANGE_SQRT_Total_Amt_Chng_Q4_Q1 < 0.55688995780149 THEN DO;
224909    +      IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224910    +            0.30723523386139 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.30723523386139 <= RANGE_LOG_Total_Trans_Amt THEN DO;
224911    +        _NODE_  =                  259;
MPRINT(EM_DIAGRAM):   _NODE_ = 259;
224912    +        _LEAF_  =                   96;
MPRINT(EM_DIAGRAM):   _LEAF_ = 96;
224913    +        P_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.2;
224914    +        P_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.8;
224915    +        Q_Attrition_Flag0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.2;
224916    +        Q_Attrition_Flag1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.8;
224917    +        V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
224918    +        V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
224919    +        I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
224920    +        U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
224921    +        END;
MPRINT(EM_DIAGRAM):   END;
224922    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224923    +        _NODE_  =                  258;
MPRINT(EM_DIAGRAM):   _NODE_ = 258;
224924    +        _LEAF_  =                   95;
MPRINT(EM_DIAGRAM):   _LEAF_ = 95;
224925    +        P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224926    +        P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224927    +        Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224928    +        Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224929    +        V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224930    +        V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224931    +        I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224932    +        U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224933    +        END;
MPRINT(EM_DIAGRAM):   END;
224934    +      END;
MPRINT(EM_DIAGRAM):   END;
224935    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND
224936    +          0.55688995780149 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) AND 0.55688995780149 <= RANGE_SQRT_Total_Amt_Chng_Q4_Q1 THEN DO;
224937    +      _NODE_  =                  100;
MPRINT(EM_DIAGRAM):   _NODE_ = 100;
224938    +      _LEAF_  =                   97;
MPRINT(EM_DIAGRAM):   _LEAF_ = 97;
224939    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224940    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224941    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224942    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224943    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224944    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224945    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224946    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224947    +      END;
MPRINT(EM_DIAGRAM):   END;
224948    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224949    +      _NODE_  =                   96;
MPRINT(EM_DIAGRAM):   _NODE_ = 96;
224950    +      _LEAF_  =                   92;
MPRINT(EM_DIAGRAM):   _LEAF_ = 92;
224951    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224952    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224953    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224954    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224955    +      V_Attrition_Flag0  =      0.9957627118644;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.9957627118644;
224956    +      V_Attrition_Flag1  =     0.00423728813559;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.00423728813559;
224957    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224958    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224959    +      END;
MPRINT(EM_DIAGRAM):   END;
224960    +    END;
MPRINT(EM_DIAGRAM):   END;
224961    +  ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('5' ) THEN DO;
224962    +    IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224963    +      RANGE_LOG_Total_Trans_Amt  <     0.19111919629034 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND RANGE_LOG_Total_Trans_Amt < 0.19111919629034 THEN DO;
224964    +      _NODE_  =                  101;
MPRINT(EM_DIAGRAM):   _NODE_ = 101;
224965    +      _LEAF_  =                   98;
MPRINT(EM_DIAGRAM):   _LEAF_ = 98;
224966    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
224967    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
224968    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
224969    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
224970    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224971    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224972    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224973    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224974    +      END;
MPRINT(EM_DIAGRAM):   END;
224975    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224976    +          0.19111919629034 <= RANGE_LOG_Total_Trans_Amt  AND
224977    +      RANGE_LOG_Total_Trans_Amt  <     0.19806285116569 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.19111919629034 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.19806285116569 THEN DO;
224978    +      _NODE_  =                  102;
MPRINT(EM_DIAGRAM):   _NODE_ = 102;
224979    +      _LEAF_  =                   99;
MPRINT(EM_DIAGRAM):   _LEAF_ = 99;
224980    +      P_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.875;
224981    +      P_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.125;
224982    +      Q_Attrition_Flag0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.875;
224983    +      Q_Attrition_Flag1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.125;
224984    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224985    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
224986    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
224987    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
224988    +      END;
MPRINT(EM_DIAGRAM):   END;
224989    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
224990    +          0.28857193112075 <= RANGE_LOG_Total_Trans_Amt  AND
224991    +      RANGE_LOG_Total_Trans_Amt  <     0.29437391726552 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.28857193112075 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.29437391726552 THEN DO;
224992    +      _NODE_  =                  104;
MPRINT(EM_DIAGRAM):   _NODE_ = 104;
224993    +      _LEAF_  =                  101;
MPRINT(EM_DIAGRAM):   _LEAF_ = 101;
224994    +      P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
224995    +      P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
224996    +      Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
224997    +      Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
224998    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
224999    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225000    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225001    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225002    +      END;
MPRINT(EM_DIAGRAM):   END;
225003    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
225004    +          0.29437391726552 <= RANGE_LOG_Total_Trans_Amt  AND
225005    +      RANGE_LOG_Total_Trans_Amt  <     0.31658857703879 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.29437391726552 <= RANGE_LOG_Total_Trans_Amt AND RANGE_LOG_Total_Trans_Amt < 0.31658857703879 THEN DO;
225006    +      _NODE_  =                  105;
MPRINT(EM_DIAGRAM):   _NODE_ = 105;
225007    +      _LEAF_  =                  102;
MPRINT(EM_DIAGRAM):   _LEAF_ = 102;
225008    +      P_Attrition_Flag0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.44444444444444;
225009    +      P_Attrition_Flag1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.55555555555555;
225010    +      Q_Attrition_Flag0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.44444444444444;
225011    +      Q_Attrition_Flag1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.55555555555555;
225012    +      V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
225013    +      V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
225014    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
225015    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
225016    +      END;
MPRINT(EM_DIAGRAM):   END;
225017    +    ELSE IF  NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND
225018    +          0.31658857703879 <= RANGE_LOG_Total_Trans_Amt  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_LOG_Total_Trans_Amt ) AND 0.31658857703879 <= RANGE_LOG_Total_Trans_Amt THEN DO;
225019    +      _NODE_  =                  106;
MPRINT(EM_DIAGRAM):   _NODE_ = 106;
225020    +      _LEAF_  =                  103;
MPRINT(EM_DIAGRAM):   _LEAF_ = 103;
225021    +      P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
225022    +      P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
225023    +      Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
225024    +      Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
225025    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
225026    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
225027    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
225028    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
225029    +      END;
MPRINT(EM_DIAGRAM):   END;
225030    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
225031    +      _NODE_  =                  103;
MPRINT(EM_DIAGRAM):   _NODE_ = 103;
225032    +      _LEAF_  =                  100;
MPRINT(EM_DIAGRAM):   _LEAF_ = 100;
225033    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
225034    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
225035    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
225036    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
225037    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
225038    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225039    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225040    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225041    +      END;
MPRINT(EM_DIAGRAM):   END;
225042    +    END;
MPRINT(EM_DIAGRAM):   END;
225043    +  ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ) THEN DO;
225044    +    _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
225045    +    _LEAF_  =                  104;
MPRINT(EM_DIAGRAM):   _LEAF_ = 104;
225046    +    P_Attrition_Flag0  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.73076923076923;
225047    +    P_Attrition_Flag1  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.26923076923076;
225048    +    Q_Attrition_Flag0  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.73076923076923;
225049    +    Q_Attrition_Flag1  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.26923076923076;
225050    +    V_Attrition_Flag0  =     0.69565217391304;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.69565217391304;
225051    +    V_Attrition_Flag1  =     0.30434782608695;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.30434782608695;
225052    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225053    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225054    +    END;
MPRINT(EM_DIAGRAM):   END;
225055    +  ELSE IF _ARBFMT_12 IN ('3' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('3' ,'2' ) THEN DO;
225056    +    IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
225057    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.36414099724008 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.36414099724008 THEN DO;
225058    +      _NODE_  =                  111;
MPRINT(EM_DIAGRAM):   _NODE_ = 111;
225059    +      _LEAF_  =                  105;
MPRINT(EM_DIAGRAM):   _LEAF_ = 105;
225060    +      P_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
225061    +      P_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1;
225062    +      Q_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0;
225063    +      Q_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 1;
225064    +      V_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0.33333333333333;
225065    +      V_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0.66666666666666;
225066    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
225067    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
225068    +      END;
MPRINT(EM_DIAGRAM):   END;
225069    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
225070    +          0.36414099724008 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
225071    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.41087323297028 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.36414099724008 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.41087323297028 THEN DO;
225072    +      _NODE_  =                  112;
MPRINT(EM_DIAGRAM):   _NODE_ = 112;
225073    +      _LEAF_  =                  106;
MPRINT(EM_DIAGRAM):   _LEAF_ = 106;
225074    +      P_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.625;
225075    +      P_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.375;
225076    +      Q_Attrition_Flag0  =                0.625;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.625;
225077    +      Q_Attrition_Flag1  =                0.375;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.375;
225078    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
225079    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225080    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225081    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225082    +      END;
MPRINT(EM_DIAGRAM):   END;
225083    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
225084    +          0.41087323297028 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
225085    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.42740380032422 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.41087323297028 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.42740380032422 THEN DO;
225086    +      _NODE_  =                  113;
MPRINT(EM_DIAGRAM):   _NODE_ = 113;
225087    +      _LEAF_  =                  107;
MPRINT(EM_DIAGRAM):   _LEAF_ = 107;
225088    +      P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
225089    +      P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
225090    +      Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
225091    +      Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
225092    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
225093    +      V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
225094    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
225095    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
225096    +      END;
MPRINT(EM_DIAGRAM):   END;
225097    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
225098    +          0.42740380032422 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
225099    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.47370187464616 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.42740380032422 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.47370187464616 THEN DO;
225100    +      _NODE_  =                  114;
MPRINT(EM_DIAGRAM):   _NODE_ = 114;
225101    +      _LEAF_  =                  108;
MPRINT(EM_DIAGRAM):   _LEAF_ = 108;
225102    +      P_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.4;
225103    +      P_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.6;
225104    +      Q_Attrition_Flag0  =                  0.4;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.4;
225105    +      Q_Attrition_Flag1  =                  0.6;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.6;
225106    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
225107    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225108    +      I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
225109    +      U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
225110    +      END;
MPRINT(EM_DIAGRAM):   END;
225111    +    ELSE IF  NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND
225112    +          0.47370187464616 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1  AND
225113    +      RANGE_SQRT_Total_Ct_Chng_Q4_Q1  <     0.50814574678553 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) AND 0.47370187464616 <= RANGE_SQRT_Total_Ct_Chng_Q4_Q1 AND RANGE_SQRT_Total_Ct_Chng_Q4_Q1 < 0.50814574678553 THEN DO;
225114    +      _NODE_  =                  115;
MPRINT(EM_DIAGRAM):   _NODE_ = 115;
225115    +      _LEAF_  =                  109;
MPRINT(EM_DIAGRAM):   _LEAF_ = 109;
225116    +      P_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.75;
225117    +      P_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.25;
225118    +      Q_Attrition_Flag0  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.75;
225119    +      Q_Attrition_Flag1  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.25;
225120    +      V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
225121    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225122    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225123    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225124    +      END;
MPRINT(EM_DIAGRAM):   END;
225125    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
225126    +      _NODE_  =                  116;
MPRINT(EM_DIAGRAM):   _NODE_ = 116;
225127    +      _LEAF_  =                  110;
MPRINT(EM_DIAGRAM):   _LEAF_ = 110;
225128    +      P_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 1;
225129    +      P_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0;
225130    +      Q_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 1;
225131    +      Q_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0;
225132    +      V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
225133    +      V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225134    +      I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225135    +      U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225136    +      END;
MPRINT(EM_DIAGRAM):   END;
225137    +    END;
MPRINT(EM_DIAGRAM):   END;
225138    +  ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
225139    +    _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
225140    +    _LEAF_  =                  111;
MPRINT(EM_DIAGRAM):   _LEAF_ = 111;
225141    +    P_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.33333333333333;
225142    +    P_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.66666666666666;
225143    +    Q_Attrition_Flag0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.33333333333333;
225144    +    Q_Attrition_Flag1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.66666666666666;
225145    +    V_Attrition_Flag0  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 0;
225146    +    V_Attrition_Flag1  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 1;
225147    +    I_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '1' ;
225148    +    U_Attrition_Flag  = '1' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '1' ;
225149    +    END;
MPRINT(EM_DIAGRAM):   END;
225150    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
225151    +    _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
225152    +    _LEAF_  =                   90;
MPRINT(EM_DIAGRAM):   _LEAF_ = 90;
225153    +    P_Attrition_Flag0  =     0.99945945945945;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.99945945945945;
225154    +    P_Attrition_Flag1  =     0.00054054054054;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.00054054054054;
225155    +    Q_Attrition_Flag0  =     0.99945945945945;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag0 = 0.99945945945945;
225156    +    Q_Attrition_Flag1  =     0.00054054054054;
MPRINT(EM_DIAGRAM):   Q_Attrition_Flag1 = 0.00054054054054;
225157    +    V_Attrition_Flag0  =                    1;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag0 = 1;
225158    +    V_Attrition_Flag1  =                    0;
MPRINT(EM_DIAGRAM):   V_Attrition_Flag1 = 0;
225159    +    I_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = '0' ;
225160    +    U_Attrition_Flag  = '0' ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = '0' ;
225161    +    END;
MPRINT(EM_DIAGRAM):   END;
225162    +  END;
MPRINT(EM_DIAGRAM):   END;
225163    +
225164    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
225165    +IF  F_Attrition_Flag  NE '0'
225166    +AND F_Attrition_Flag  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Attrition_Flag NE '0' AND F_Attrition_Flag NE '1' THEN DO;
225167    +        R_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = .;
225168    +        R_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = .;
225169    + END;
MPRINT(EM_DIAGRAM):   END;
225170    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
225171    +       R_Attrition_Flag0  =  -P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag0 = -P_Attrition_Flag0 ;
225172    +       R_Attrition_Flag1  =  -P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   R_Attrition_Flag1 = -P_Attrition_Flag1 ;
225173    +       SELECT( F_Attrition_Flag  );
MPRINT(EM_DIAGRAM):   SELECT( F_Attrition_Flag );
225174    +          WHEN( '0'  ) R_Attrition_Flag0  = R_Attrition_Flag0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_Attrition_Flag0 = R_Attrition_Flag0 +1;
225175    +          WHEN( '1'  ) R_Attrition_Flag1  = R_Attrition_Flag1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_Attrition_Flag1 = R_Attrition_Flag1 +1;
225176    +       END;
MPRINT(EM_DIAGRAM):   END;
225177    + END;
MPRINT(EM_DIAGRAM):   END;
225178    +
225179    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
225180    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
225181    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
225182    +
225183    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
225184     run;
 
NOTE: DATA STEP view saved on file EMWS1.TREE3_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
225185     quit;
225186     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
225188     proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
225189     by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
225190     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225191     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
225192     * Tree3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree3: Computing metadata for TRAIN data;
225193     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree3_TRAIN out=WORK.M003B5LE noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M003B5LE;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M003B5LE(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M003B5LE;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M003B5LE;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0VHHYN9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OOM7WB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VHHYN9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree3";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG1") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG0") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("ATTRITION_FLAG") model = "Tree3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "G_CONTACTS_COUNT_12_MON" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "G_MONTHS_INACTIVE_12_MON" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_ATTRITION_FLAG0" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_ATTRITION_FLAG1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
225561     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
225562     set EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO;
225563     where DATA='Tree3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
225564     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE (DATA='Tree3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
225565     data EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree3_EMINFO;
225566     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
225567     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
225568     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
225572     run;
225573     data EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMINFO;
225574     set EMWS1.Tree3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO WORK.MODELTEMP_INFO;
225575     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.TREE3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
225576     proc sort data = EMWS1.Tree3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree3_EMINFO NOTHREADS;
225577     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
225578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.TREE3_EMINFO.
NOTE: The data set EMWS1.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225579     proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
225580     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
225581     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
225582     proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
225583     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
225584     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225585     data EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMINFO;
225586     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
225587     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
225588     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE3_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225589     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
225590     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
225591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
225592     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS1.TREE3_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
NOTE: View EMWS1.TREE3_TEST.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:10" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                April 09, 2022
Time:                15:11:10
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35H4QI3 "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35H4QI3 new;
MPRINT(EM_DIAGRAM):   run;
225616     data EMWS1.Tree3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree3_EMOUTFIT;
225617     set EMWS1.Tree3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMOUTFIT;
225618     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
225619     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
225620     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMOUTFIT.
NOTE: The data set EMWS1.TREE3_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
225621     proc sort data=EMWS1.Tree3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_EMREPORTFIT nothreads;
225622     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
225623     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.TREE3_EMREPORTFIT.
NOTE: The data set EMWS1.TREE3_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225624     %let _EMwarndup = 0;
225625     %let _EMtargetdup =;
225626     %let _EMASEtargetdup =;
225627     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
225628     set EMWS1.Tree3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMOUTFIT;
225629     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
225630     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
225631     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
225632     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
225633     end;
MPRINT(EM_DIAGRAM):   end;
225634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225635     %let EMEXCEPTIONSTRING=;
225636     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
225637     * REPORT: Tree3;
MPRINT(EM_DIAGRAM):   * REPORT: Tree3;
225638     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225639     %let EM_ACTION = REPORT;
225640     %let syscc = 0;
225641     %macro main;
225642
225643       %if %upcase(&EM_ACTION) = CREATE %then %do;
225644         filename temp catalog 'sashelp.emmodl.tree_create.source';
225645         %include temp;
225646         filename temp;
225647
225648         %em_tree_create;
225649       %end;
225650
225651        %else
225652        %if %upcase(&EM_ACTION) = TRAIN %then %do;
225653
225654            filename temp catalog 'sashelp.emmodl.tree_train.source';
225655            %include temp;
225656            filename temp;
225657            %em_tree_train;
225658        %end;
225659
225660       %else
225661       %if %upcase(&EM_ACTION) = SCORE %then %do;
225662         filename temp catalog 'sashelp.emmodl.tree_score.source';
225663         %include temp;
225664         filename temp;
225665
225666         %em_tree_score;
225667
225668       %end;
225669
225670       %else
225671       %if %upcase(&EM_ACTION) = REPORT %then %do;
225672
225673            filename temp catalog 'sashelp.emmodl.tree_report.source';
225674            %include temp;
225675            filename temp;
225676
225677            %em_tree_report;
225678        %end;
225679
225680       %else
225681       %if %upcase(&EM_ACTION) = OPENINT %then %do;
225682
225683            filename temp catalog 'sashelp.emmodl.tree_actions.source';
225684            %include temp;
225685            filename temp;
225686            %EM_TREE_OPENTREEVIEWER;
225687
225688        %end;
225689
225690       %else
225691       %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
225692
225693            filename temp catalog 'sashelp.emmodl.tree_actions.source';
225694            %include temp;
225695            filename temp;
225696            %EM_TREE_CLOSETREEVIEWER;
225697
225698        %end;
225699
225700
225701        %doendm:
225702     %mend main;
225703
225704     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_report.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
225706    +%macro em_tree_makePlotDs( multipleTar= );
225708    +  %EM_GETNAME(key=OUTSTATS, type=DATA);
225709    +  %EM_GETNAME(key=OUTNODES, type=DATA);
225710    +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
225711    +  %EM_GETNAME(key=OUTRULES, type=DATA);
225713    +  /* determine if validation statistics will be displayed */
225714    +  %let validflag=N;
225715    +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
225716    +    /* determine if validation data exists */
225717    +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
225718    +      %let validflag=Y;
225719    +    %end;
225720    +  %end;
225722    +   /* retrieve name of decmeta even in presence of multiple targets */
225723    +   %let decmeta = ;
225724    +   %if &EM_DEC_DECMETA eq %then %do;
225725    +     data _Target;
225726    +       set &em_data_variableset;
225727    +       where ROLE='TARGET' and USE in('D', 'Y');
225728    +       keep NAME;
225729    +     run;
225730    +     proc sort data=_Target;
225731    +       by NAME;
225732    +     run;
225733    +     proc sort data=EM_TARGETDECINFO;
225734    +       by TARGET;
225735    +     run;
225736    +     data _Target;
225737    +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
225738    +       by NAME;
225739    +       if _a then do;
225740    +         call symput('decmeta', trim(DECMETA));
225741    +       end;
225742    +     run;
225743    +     proc delete data=_Target;run;
225744    +   %end;
225745    +   %else %let decmeta = &EM_DEC_DECMETA;
225748    +  /* retrieve targetEvent from decmeta */
225749    +  %let targetEvent=;
225750    +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
225751    +    %if %sysfunc(exist(&DECMETA)) %then %do;
225752    +      data _null_;
225753    +       set &DECMETA(where=(_TYPE_="TARGET"));
225754    +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
225755    +      run;
225756    +    %end;
225757    +  %end;
225759    +  /* retrieve predicted var for targetEvent from decmeta */
225760    +  %let predTarget=;
225761    +  %let predLvl=;
225762    +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
225763    +    %if %sysfunc(exist(&DECMETA)) %then %do;
225764    +      data _null_;
225765    +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
225766    +       call symput('predTarget', strip(VARIABLE));
225767    +       call symput('predLvl', strip(LEVEL));
225768    +      run;
225769    +    %end;
225770    +  %end;
225771    +  %else %do;
225772    +    %if %sysfunc(exist(&DECMETA)) %then %do;
225773    +      data _null_;
225774    +       set &DECMETA(where=(_TYPE_="PREDICTED"));
225775    +       call symput('predTarget', strip(VARIABLE));
225776    +      run;
225777    +    %end;
225778    +  %end;
225780    +  /* create BelowText value */
225781    +  data belowtext;
225782    +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
225783    +    keep node belowtext;
225784    +  run;
225786    +  /* replace belowtext with variable label if it exists */
225787    +  data belowtext2;
225788    +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
225789    +    keep node belowtextlbl;
225790    +  run;
225792    +  proc sort data=belowtext; by node; run;
225793    +  proc sort data=belowtext2; by node; run;
225795    +  data belowtext;
225796    +    merge belowtext belowtext2(in=_a);
225797    +    by node;
225798    +    if _a then belowtext=belowtextlbl;
225799    +    keep node belowtext;
225800    +  run;
225802    +  /* create AboveText value */
225803    +  data abovetext;
225804    +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
225805    +  run;
225806    +  proc sort data=abovetext; by node numeric_value; run;
225808    +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
225809    +  data abovetext;
225810    +    set abovetext(rename=(node=parent));
225811    +    by parent numeric_value;
225812    +    retain abovetext tempstring flag branch origval origchar ;
225813    +    length abovetext $256;
225814    +    length tempstring origchar $64;
225816    +    if STAT in ("INTERVAL", "ORDINAL") then do;
225817    +      if first.parent then do;
225818    +        if missing(character_value) then do;
225819    +          numeric_value = round(numeric_value, &sp_precision);
225820    +          abovetext = "< "||strip(NUMERIC_VALUE);
225821    +          branch = 1;
225822    +          origval = numeric_value;
225823    +          output;
225824    +        end;
225825    +        else do;
225826    +          abovetext = "< "||strip(CHARACTER_VALUE);
225827    +          branch = 1;
225828    +          origchar = character_value;
225829    +          output;
225830    +        end;
225832    +        if first.parent AND last.parent then do;
225833    +          if missing(character_value) then do;
225834    +            numeric_value = round(numeric_value, &sp_precision);
225835    +            branch = branch + 1;
225836    +            abovetext = ">= "||strip(NUMERIC_VALUE);
225837    +            output;
225838    +          end;
225839    +          else do;
225840    +            branch = branch + 1;
225841    +            abovetext = ">= "||strip(CHARACTER_VALUE);
225842    +            output;
225843    +          end;
225844    +        end;
225845    +      end;
225846    +      else if last.parent then do;
225847    +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
225848    +          if missing(character_value) then do;
225849    +            numeric_value = round(numeric_value, &sp_precision);
225850    +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
225851    +          end;
225852    +          else do;
225853    +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
225854    +          end;
225855    +          branch = branch + 1;
225856    +          output;
225858    +          if missing(character_value) then do;
225859    +            numeric_value = round(numeric_value, &sp_precision);
225860    +            abovetext = ">= "||strip(NUMERIC_VALUE);
225861    +          end;
225862    +          else do;
225863    +            abovetext = ">= "||strip(CHARACTER_VALUE);
225864    +          end;
225865    +          branch = branch + 1;
225866    +          output;
225867    +        end;
225868    +        else do;
225869    +          if missing(character_value) then do;
225870    +            numeric_value = round(numeric_value, &sp_precision);
225871    +            abovetext = ">= "||strip(NUMERIC_VALUE);
225872    +          end;
225873    +          else do;
225874    +            abovetext = ">= "||strip(CHARACTER_VALUE);
225875    +          end;
225876    +          branch = branch + 1;
225877    +          output;
225878    +        end;
225879    +      end;
225880    +      else do;
225881    +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
225882    +          if missing(character_value) then do;
225883    +            numeric_value = round(numeric_value,&sp_precision);
225884    +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
225885    +            origval = numeric_value;
225886    +          end;
225887    +          else do;
225888    +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
225889    +            origchar = character_value;
225890    +          end;
225891    +          branch = branch + 1;
225892    +          output;
225894    +        end;
225895    +        else do;
225896    +          if missing(character_value) then do;
225897    +            numeric_value = round(numeric_value, &sp_precision);
225898    +            abovetext = ">= "||strip(NUMERIC_VALUE);
225899    +            origval = numeric_value;
225900    +          end;
225901    +          else do;
225902    +            abovetext = ">= "||strip(CHARACTER_VALUE);
225903    +            origval = character_value;
225904    +          end;
225905    +          branch = branch + 1;
225906    +          output;
225907    +        end;
225908    +      end;
225909    +    end;
225910    +    else do;
225911    +       if first.numeric_value then do;
225912    +         flag = 0;
225913    +         abovetext = strip(CHARACTER_VALUE);
225914    +         branch = numeric_value;
225915    +         if first.numeric_value AND last.numeric_value then do;
225916    +           output;
225917    +         end;
225918    +       end;
225919    +       else if last.numeric_value then do;
225920    +         if flag=0 then do;
225921    +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
225922    +           length = length(strip(tempstring));
225923    +           if length < 32 then do;
225924    +             abovetext = strip(tempstring);
225925    +           end;
225926    +           else do;
225927    +             abovetext = strip(abovetext)||", ...";
225928    +             flag = 1;
225929    +           end;
225930    +         end;
225931    +         branch = numeric_value;
225932    +         output;
225933    +       end;
225934    +       else do;
225935    +         if flag=0 then do;
225936    +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
225937    +           length = length(strip(tempstring));
225938    +           if length < 32 then do;
225939    +             abovetext = strip(tempstring);
225940    +           end;
225941    +           else do;
225942    +             abovetext = strip(abovetext)||", ...";
225943    +             flag=1;
225944    +           end;
225945    +         end;
225946    +         branch = numeric_value;
225947    +       end;
225948    +    end;
225949    +    keep parent branch abovetext;
225950    +  run;
225952    +  /* Missing value to abovetext */
225953    +  data tempmissing;
225954    +    set &EM_USER_OUTRULES;
225955    +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
225956    +    rename node=parent numeric_value=branch character_value=misschar;
225957    +  run;
225960    +  proc sort data=abovetext; by parent branch; run;
225961    +  proc sort data=tempmissing; by parent branch; run;
225962    +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
225964    +  data tempoutnodes;
225965    +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
225966    +    by parent branch;
225967    +    length traintotal validtotal 8;
225968    +    retain traintotal validtotal;
225970    +    if _a then do;
225971    +      if ^MISSING(abovetext) then do;
225972    +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
225973    +      end;
225974    +      else do;
225975    +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
225976    +      end;
225977    +    end;
225978    +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
225980    +    if node=1 then do;
225981    +      traintotal = N;
225982    +      validtotal=VN;
225983    +    end;
225985    +    drop role rank stat misschar belowtext;
225986    +  run;
225987    +  proc sort data=tempoutnodes; by node; run;
225988    +  proc sort data=belowtext; by node; run;
225990    +  data tempoutnodes;
225991    +    merge tempoutnodes belowtext;
225992    +    by node;
225994    +  run;
225996    +  /* determine if adjusted counts exists; if so, use these vs true counts */
225997    +  %let adjusted = N;
225998    +  %let npriors = 0;
225999    +  data _null_ ;
226000    +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
226001    +    if eof then do ;
226002    +      call symput("npriors" , strip(put(_N_,best.))) ;
226003    +    end;
226004    +  run;
226005    +  %if &npriors gt 0 %then %let adjusted=Y;
226008    +  /* create a table with targetUsed and targetLevel columns for each node */
226009    +  data temptarmeta;
226010    +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
226011    +    %if &multipleTar eq N %then %do;
226012    +      AND USE in ('D', 'Y')
226013    +    %end;
226014    +    ));
226015    +    length TARGET $32;
226016    +    Target=name;
226017    +    keep target level;
226018    +  run;
226020    +  %if &multipleTar eq Y %then %do;
226021    +    data temptargetused;
226022    +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
226023    +      keep node target;
226024    +    run;
226025    +    proc sort data=temptargetused; by target; run;
226026    +    proc sort data=temptarmeta; by target; run;
226027    +    data temptargetused;
226028    +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
226029    +      by target;
226030    +      if _a and _b;
226031    +    run;
226032    +  %end;
226033    +  %else %do;
226034    +    data temptargetused;
226035    +      set &EM_USER_OUTSTATS;
226036    +      length target $32 tarlevel $10;
226037    +      target="%EM_TARGET";
226038    +      tarlevel="%EM_TARGET_LEVEL";
226039    +      keep node target tarlevel;
226040    +    run;
226041    +    proc sort data=temptargetused nodupkey; by node; run;
226042    +  %end;
226044    +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
226045    +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
226046    +  proc sort data=temptargetused; by node; run;
226049    +  /* create tables for all interval targets as well as all class targets */
226050    +  data tempinterval tempclass;
226051    +    merge tempoutstats temptargetused( rename=(target=targetused));
226052    +    by node;
226053    +    %if "&multipleTar" eq "Y" %then %do;
226054    +      if ((missing(Target)) OR (target=targetused ));
226055    +    %end;
226057    +    if tarlevel="INTERVAL" then output tempinterval;
226058    +    else output tempclass;
226059    +  run;
226061    +  /* initialize intTarget and classTarget flags */
226062    +  %let em_intNobs =0;
226063    +  %let em_classNobs = 0;
226064    +  %let em_intTarget= N;
226065    +  %let em_classTarget= N;
226067    +  proc sql;
226068    +    reset noprint;
226069    +    select count(*) into :em_intNobs from tempinterval;
226070    +  quit;
226071    +  proc sql;
226072    +    reset noprint;
226073    +    select count(*) into :em_classNobs from tempclass;
226074    +  quit;
226076    +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
226077    +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
226079    +  /* retrieve all information for interval targets */
226080    +  %if &em_intTarget eq Y %then %do;
226082    +    /* determine if leaf variable exists */
226083    +    %let dsid=%sysfunc(open(tempinterval,i));
226084    +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
226085    +    %let rc=%sysfunc(close(&dsid));
226087    +    proc transpose data=tempinterval
226088    +      %if &leafexists %then %do;
226089    +        (drop=leaf)
226090    +      %end;
226091    +      %if &validexist %then %do;
226092    +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
226093    +      %end;
226094    +      %else %do;
226095    +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
226096    +      %end;
226097    +      by node;
226098    +      id statname;
226099    +    run;
226100    +    data tempinterval;
226101    +      set tempinterval;
226102    +      if missing(N) then delete;
226103    +    run;
226104    +  %end;
226106    +  /* retrieve all information for class targets */
226107    +  %if &em_classTarget eq Y %then %do;
226108    +    proc sort data=tempclass; by node category; run;
226109    +    %if &validflag eq N %then %do;
226110    +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
226111    +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
226112    +    %end;
226113    +    %else %do;
226114    +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
226115    +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
226116    +    %end;
226117    +      set tempclass;
226119    +      %if &validflag eq N %then %do;
226120    +        %if "&adjusted" eq "N" %then %do;
226121    +          if statname="N" then output tempn;
226122    +        %end;
226123    +        %else %do;
226124    +          if statname="NPRIORS" then output tempn;
226125    +        %end;
226126    +        else if statname="PREDICTION" then output temppredict;
226127    +        else if statname="PROBABILITY" then output tempprob;
226128    +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
226129    +        else if statname="ALTERNATIVE LOSS" then output temploss;
226130    +      %end;
226131    +      %else %do;
226132    +        %if "&adjusted" eq "N" %then %do;
226133    +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
226134    +        %end;
226135    +        %else %do;
226136    +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
226137    +        %end;
226138    +        else if statname="PREDICTION" then output temppredict;
226139    +        else if statname="PROBABILITY" then output tempprob;
226140    +        else if statname="VALID: PROBABILITY" then output tempvprob;
226141    +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
226142    +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
226143    +      %end;
226144    +    run;
226147    +    /* determine if profit/loss exists in tempprofit */
226148    +    %let em_profitflag=0;
226149    +    %let em_lossflag=0;
226150    +    proc sql;
226151    +      reset noprint;
226152    +      select count(*) into :em_profitflag from tempprofit;
226153    +    quit;
226154    +    proc sql;
226155    +      reset noprint;
226156    +      select count(*) into :em_lossflag from temploss;
226157    +    quit;
226159    +    %if &validFlag eq Y %then %do;
226160    +      proc transpose data=tempn
226161    +        %if "&adjusted" eq "N" %then %do;
226162    +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
226163    +        %end;
226164    +        %else %do;
226165    +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
226166    +        %end;
226167    +        by node;
226168    +        id statname;
226169    +      run;
226170    +      %if &em_profitflag ne 0 %then %do;
226171    +        proc transpose data=tempprofit out=tempprofit;
226172    +          by node category;
226173    +          id statname ;
226174    +        run;
226175    +      %end;
226176    +      %if &em_lossflag ne 0 %then %do;
226177    +        proc transpose data=temploss out=temploss;
226178    +          by node category;
226179    +          id statname ;
226180    +        run;
226181    +      %end;
226182    +      data tempprob;
226183    +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
226184    +        by node
226185    +        %if &multipleTar eq Y %then %do;
226186    +          target
226187    +        %end;
226188    +        category;
226189    +      run;
226190    +    %end;
226192    +    /* store percentcorrect value */
226193    +    data temppredict;
226194    +      merge tempprob temppredict(in=_a);
226195    +      by node category;
226196    +      if _a then do;
226197    +        percentCorrect = statvalue;
226198    +        %if &validFlag eq Y %then %do;
226199    +          vpercentCorrect= vstatvalue;
226200    +        %end;
226201    +      end;
226202    +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
226203    +      %if &validFlag eq Y %then %do;
226204    +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
226205    +      %end;
226206    +      ;
226207    +      if missing(percentCorrect) then delete;
226208    +      drop target;
226209    +    run;
226211    +    /* build profittext */
226212    +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
226213    +      data tempprofittext(keep= node profittext profitloss);
226214    +        length profittext $800 profitloss 8.;
226215    +        retain profittext profitloss;
226217    +        merge tempprob
226218    +        %if &em_profitflag ne 0 %then %do;
226219    +          tempprofit
226220    +        %end;
226221    +        %else %if &em_lossflag ne 0 %then %do;
226222    +          temploss
226223    +        %end;
226224    +        ;
226225    +        by node category;
226227    +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
226228    +        %let profittype = &EM_PROPERTY_PROFITLOSS;
226229    +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
226230    +          %let profittype = ALL;
226231    +        %end;
226233    +        /* create the profitloss variable for nodecolor if selected */
226234    +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
226236    +        %if "&profittype" eq "ALL" %then %do;
226237    +          if strip(CATEGORY)="&targetEvent" then do;
226238    +            profitloss=statvalue;
226239    +          end;
226240    +          if first.node then do;
226241    +            %if &validFlag eq N %then %do;
226242    +             %if &em_profitflag ne 0 %then %do;
226243    +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226244    +             %end;
226245    +             %if &em_lossflag ne 0 %then %do;
226246    +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226247    +             %end;
226248    +            %end;
226249    +            %else %do;
226250    +             %if &em_profitflag ne 0 %then %do;
226251    +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
226251   !+14.&EM_PROPERTY_SPLITPRECISION);
226252    +             %end;
226253    +             %if &em_lossflag ne 0 %then %do;
226254    +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
226255    +             %end;
226256    +            %end;
226257    +          end;
226258    +          else if last.node then do;
226259    +            %if &validFlag eq N %then %do;
226260    +             %if &em_profitflag ne 0 %then %do;
226261    +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226262    +             %end;
226263    +             %if &em_lossflag ne 0 %then %do;
226264    +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226265    +             %end;
226266    +             /*if CATEGORY="&targetEvent" then do;
226267    +               profitloss=statvalue;
226268    +             end;*/
226269    +            %end;
226270    +            %else %do;
226271    +             %if &em_profitflag ne 0 %then %do;
226272    +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
226272   !+14.&EM_PROPERTY_SPLITPRECISION);
226273    +                if CATEGORY="&targetEvent" then do;
226274    +                 profitloss=ALTERNATIVE_PROFIT;
226275    +                end;
226276    +             %end;
226277    +             %if &em_lossflag ne 0 %then %do;
226278    +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
226278   !+14.&EM_PROPERTY_SPLITPRECISION);
226279    +                if CATEGORY="&targetEvent" then do;
226280    +                  profitloss=ALTERNATIVE_LOSS;
226281    +                end;
226282    +             %end;
226283    +            %end;
226284    +            output;
226285    +          end;
226286    +          else do;
226287    +            %if &validFlag eq N %then %do;
226288    +             %if &em_profitflag ne 0 %then %do;
226289    +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226290    +             %end;
226291    +             %if &em_lossflag ne 0 %then %do;
226292    +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226293    +             %end;
226294    +            %end;
226295    +            %else %do;
226296    +             %if &em_profitflag ne 0 %then %do;
226297    +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
226297   !+14.&EM_PROPERTY_SPLITPRECISION);
226298    +             %end;
226299    +             %if &em_lossflag ne 0 %then %do;
226300    +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
226300   !+14.&EM_PROPERTY_SPLITPRECISION);
226301    +             %end;
226302    +            %end;
226303    +          end;
226304    +        %end;
226305    +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
226306    +          if strip(CATEGORY) = "&targetevent" then do;
226307    +            %if &validFlag eq N %then %do;
226308    +             %if &em_profitflag ne 0 %then %do;
226309    +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226310    +             %end;
226311    +             %if &em_lossflag ne 0 %then %do;
226312    +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
226313    +             %end;
226314    +             profitloss=statvalue;
226315    +            %end;
226316    +            %else %do;
226317    +             %if &em_profitflag ne 0 %then %do;
226318    +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
226318   !+14.&EM_PROPERTY_SPLITPRECISION);
226319    +                profitloss=ALTERNATIVE_PROFIT;
226320    +             %end;
226321    +             %if &em_lossflag ne 0 %then %do;
226322    +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
226323    +                profitloss=ALTERNATIVE_LOSS;
226324    +             %end;
226325    +            %end;
226326    +            output;
226327    +          end;
226328    +        %end;
226329    +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
226330    +          if strip(CATEGORY) = "&targetevent" then do;
226331    +            %if &validFlag eq N %then %do;
226332    +             profitloss=statvalue;
226333    +            %end;
226334    +            %else %do;
226335    +             %if &em_profitflag ne 0 %then %do;
226336    +                profitloss=ALTERNATIVE_PROFIT;
226337    +             %end;
226338    +             %if &em_lossflag ne 0 %then %do;
226339    +                profitloss=ALTERNATIVE_LOSS;
226340    +             %end;
226341    +            %end;
226342    +            output;
226343    +          end;
226344    +        %end;
226345    +      run;
226346    +    %end;
226348    +    data tempprob(keep= node probtext);
226349    +      length probtext $800;
226350    +      retain probtext;
226351    +      set tempprob ;
226352    +      by node;
226354    +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
226355    +      %let probtype = &EM_PROPERTY_TARGET;
226356    +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
226357    +        %let probtype = ALL;
226358    +      %end;
226360    +      %if "&probtype" eq "ALL" %then %do;
226361    +        if first.node then do;
226362    +          %if &validFlag eq N %then %do;
226363    +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
226364    +          %end;
226365    +          %else %do;
226366    +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
226367    +          %end;
226368    +        end;
226369    +        else if last.node then do;
226370    +          %if &validFlag eq N %then %do;
226371    +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
226372    +          %end;
226373    +          %else %do;
226374    +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
226375    +          %end;
226376    +          output;
226377    +        end;
226378    +        else do;
226379    +          %if &validFlag eq N %then %do;
226380    +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
226381    +          %end;
226382    +          %else %do;
226383    +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
226384    +          %end;
226385    +        end;
226386    +      %end;
226387    +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
226388    +        if strip(CATEGORY) = "&targetevent" then do;
226389    +          %if &validFlag eq N %then %do;
226390    +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
226391    +          %end;
226392    +          %else %do;
226393    +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
226394    +          %end;
226395    +          output;
226396    +        end;
226397    +      %end;
226398    +      %else %if "&probtype" eq "NONE" %then %do;
226399    +        if last.node then do;
226400    +          output;
226401    +        end;
226402    +      %end;
226403    +    run;
226404    +  %end;
226406    +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
226408    +  %let oldexists=0;
226409    +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
226410    +     data old_tree_plot;
226411    +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
226412    +        rename nodecolor=oldnodecolor;
226413    +     run;
226415    +     proc sort data=old_tree_plot;
226416    +        by node;
226417    +     run;
226419    +     %let oldexists=1;
226420    +  %end;
226422    +  data &EM_USER_TREE_PLOT;
226423    +    length textall $800;
226424    +    merge tempoutnodes temptargetused
226426    +    %if &em_intTarget eq Y %then %do;
226427    +      tempinterval
226428    +    %end;
226430    +    %if &em_classTarget eq Y %then %do;
226432    +      %if &validFlag eq N %then %do;
226433    +        tempn(rename=(statvalue=N))
226434    +      %end;
226435    +      %else %do;
226436    +        tempn
226437    +      %end;
226439    +      temppredict tempprob
226441    +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
226442    +        tempprofittext
226443    +      %end;
226444    +    %end;
226445    +    ;
226446    +    by node;
226448    +    /* build nodetext based on user selection */
226449    +    textall="";
226451    +    %if &em_intTarget eq Y %then %do;
226452    +    if tarlevel="INTERVAL" then do;
226453    +      /* Nodeid */
226454    +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
226455    +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
226456    +      %end;
226458    +      /* Target identifier if multiple targets are used */
226459    +      %if "&multipleTar" eq "Y" %then %do;
226460    +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
226461    +      %end;
226463    +      %if &validFlag eq Y %then %do;
226464    +         /* Column labels displayed in validflag eq Y only */
226465    +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
226466    +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
226466   !+ noquote ))";
226467    +         %end;
226469    +         /* Average values */
226470    +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
226471    +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
226472    +         %end;
226474    +         /* RASE */
226475    +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
226476    +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
226477    +         %end;
226479    +         /* Count */
226480    +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
226481    +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
226482    +         %end;
226483    +      %end;
226484    +      %else %do;
226485    +         /* Average values */
226486    +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
226487    +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
226488    +         %end;
226490    +         /* RASE */
226491    +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
226492    +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
226493    +         %end;
226495    +         /* Count */
226496    +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
226497    +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
226498    +         %end;
226499    +      %end;
226501    +      /* nodecolor */
226502    +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
226503    +        nodecolor=PREDICTION;
226504    +      %end;
226505    +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
226506    +        nodecolor=RASE;
226507    +      %end;
226508    +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
226509    +        nodecolor=1;
226510    +      %end;
226512    +    end;
226513    +    %end;
226514    +    %if &em_classTarget eq Y %then %do;
226515    +    if tarlevel^="INTERVAL" then  do;
226517    +      /* Nodeid */
226518    +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
226519    +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
226520    +      %end;
226521    +      /* Target identifier if multiple targets are used */
226522    +      %if "&multipleTar" eq "Y" %then %do;
226523    +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
226524    +      %end;
226526    +      /* Predicted values */
226527    +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
226528    +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
226529    +      %end;
226531    +      /* Column labels displayed in validflag eq Y only */
226532    +      %if "&ValidFlag" eq "Y" %then %do;
226533    +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
226534    +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
226534   !+ noquote ))";
226535    +        %end;
226536    +      %end;
226538    +      /* Target Values */
226539    +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
226540    +        textall=strip(textall)||"0A"x||strip(probtext);
226541    +      %end;
226543    +      /* include profit or loss for all target levels */
226544    +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
226545    +        textall=strip(textall)||"0A"x||strip(profittext);
226546    +      %end;
226548    +      %if &validFlag eq N %then %do;
226549    +        /* Percent Correct */
226550    +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
226551    +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
226552    +        %end;
226554    +         /* Count */
226555    +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
226556    +          %if "&adjusted" eq "N" %then %do;
226557    +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
226558    +          %end;
226559    +          %else %do;
226560    +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
226561    +          %end;
226562    +         %end;
226563    +      %end;
226564    +      %else %do;
226565    +        /* Percent Correct */
226566    +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
226567    +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
226568    +        %end;
226570    +         /* Count */
226571    +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
226572    +          %if "&adjusted" eq "N" %then %do;
226573    +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
226574    +          %end;
226575    +          %else %do;
226576    +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
226577    +          %end;
226578    +         %end;
226579    +      %end;
226581    +      /* nodecolor */
226582    +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
226583    +       %if &multipleTar ne Y %then %do;
226584    +        nodecolor=&predTarget;
226585    +       %end;
226586    +       %else %do;
The SAS System
 
226587    +         nodecolor=percentcorrect;
226588    +       %end;
226589    +      %end;
226590    +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
226591    +        nodecolor=percentcorrect;
226592    +      %end;
226593    +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
226594    +        nodecolor=1;
226595    +      %end;
226596    +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
226597    +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
226598    +          nodecolor=percentcorrect;
226599    +        %end;
226600    +        %else %do;
226601    +          nodecolor=profitloss;
226602    +        %end;
226603    +      %end;
226605    +    end;
226606    +    %end;
226607    +    %if &em_intTarget eq Y %then %do;
226608    +     drop  PREDICTION  TARGET TARLEVEL
226609    +     %if &ValidFlag eq Y %then %do;
226610    +         VPREDICTION
226611    +     %end;
226612    +     ;
226613    +    %end;
226614    +    %if &em_classTarget eq Y %then %do;
226615    +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
226616    +     %if &ValidFlag eq Y %then %do;
226617    +         VSTATVALUE
226618    +     %end;
226619    +     ;
226620    +    %end;
226622    +  run;
226624    +  /* add leaf index information to plotds - based on primary target only*/
226625    +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226626    +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
226627    +      set &EM_USER_OUTSTATS;
226628    +      if ((statname="PROBABILITY"
226629    +      %if &validexist %then %do;
226630    +       or statname="VALID: PROBABILITY"
226631    +      %end;
226632    +      ) AND (CATEGORY="&TARGETEVENT")
226633    +      %if "&multipleTar" eq "Y" %then %do;
226634    +        AND (Target="%EM_TARGET")
226635    +      %end;
226636    +      );
226637    +    run;
226639    +    %if &validexist %then %do;
226640    +      proc sort data=tempprob; by node; run;
226641    +      %let vpredTarget = V%substr(&predTarget, 2);
226642    +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
226643    +         by node;
226644    +         id statname;
226645    +      run;
226646    +    %end;
226647    +  %end;
226648    +  %else %do;
226649    +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
226650    +      set &EM_USER_OUTSTATS;
226651    +      if ((statname="PREDICTION"
226652    +      %if &validexist %then %do;
226653    +       or statname="VALID: PREDICTION"
226654    +      %end;
226655    +      )
226656    +      %if "&multipleTar" eq "Y" %then %do;
226657    +        AND (Target="%EM_TARGET")
226658    +      %end;
226659    +      );
226660    +    run;
226661    +    %if &validexist %then %do;
226662    +      proc sort data=tempprob; by node; run;
226663    +      %let vpredTarget = V%substr(&predTarget, 2);
226664    +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
226665    +         by node;
226666    +         id statname;
226667    +      run;
226668    +    %end;
226669    +  %end;
226671    +  proc sort data=tempprob; by node; run;
226672    +  data tempoutnodes;
226673    +    merge tempoutnodes tempprob;
226674    +    by node;
226675    +  run;
226677    +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
226678    +  data tempnodes;
226679    +    retain traintotal validtotal;
226680    +    set tempnodes(where=(leaf ne . ));
226681    +    tprob=round(&predTarget, .01);
226682    +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226683    +      percevent_train=round(tprob*100, .01);
226684    +    %end;
226685    +    %else %do;
226686    +      percevent_train=tprob;
226687    +    %end;
226689    +    perc_train=round((n/traintotal)*100, 0.01);
226690    +    /* leafwidth already has a *10 multiplier */
226691    +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
226693    +    %if &validexist %then %do;
226694    +      %let vpredTarget = V%substr(&predTarget,2);
226695    +      vprob=round(&vpredTarget, .01);
226696    +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226697    +        percevent_valid=round(vprob*100, .01);
226698    +      %end;
226699    +      %else %do;
226700    +        percevent_valid=vprob;
226701    +      %end;
226702    +      perc_valid=round((vn/validtotal)*100, .01);
226703    +    %end;
226705    +    index=_N_;
226706    +    keep node index tprob perc_train percevent_train
226707    +    %if &validexist %then %do;
226708    +        vprob percevent_valid perc_valid
226709    +    %end;
226710    +    ;
226711    +  run;
226712    +  proc sort data=tempnodes; by node; run;
226713    +  data &EM_USER_TREE_PLOT;
226714    +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
226715    +    by node;
226716    +    if missing(node) then delete;
226717    +    %if &oldexists %then %do;
226718    +      if missing(nodecolor) then nodecolor=oldnodecolor;
226719    +      drop oldnodecolor;
226720    +    %end;
226721    +    abovetext = compbl(abovetext);
226723    +    /* add variable labels */
226724    +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
226725    +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
226726    +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
226727    +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
226728    +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
226729    +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
226731    +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226732    +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
226733    +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
226734    +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
226735    +          %end;
226736    +          %else %do;
226737    +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
226738    +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
226739    +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
226740    +          %end;
226741    +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
226743    +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
226744    +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
226745    +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226746    +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
226747    +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
226748    +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
226749    +          %end;
226750    +          %else %do;
226751    +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
226752    +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
226753    +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
226754    +          %end;
226755    +    ;
226756    +  run;
226758    +  /* delete temporary tables */
226759    +  proc datasets lib=work nolist;
226760    +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
226761    +  run;
226763    +%mend em_tree_makePlotDs;
226767    +%macro em_tree_report;
226769    +   /* report properties */
226770    +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
226771    +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
226772    +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
226773    +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
226774    +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
226775    +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
226776    +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
226777    +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
226778    +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
226779    +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
226780    +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
226781    +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
226782    +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
226784    +   %let validexist=0;
226785    +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
226786    +     %let validexist=1;
226787    +   %end;
226789    +   /* determine if multiple targets will be processed */
226790    +   %let em_tree_multipleTargets=N;
226791    +   %let em_tree_numTarget=1;
226792    +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
226793    +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
226794    +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
226795    +         %let em_tree_multipleTargets=N;
226796    +      %end;
226797    +      %else %do;
226798    +        data _null_;
226799    +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
226800    +          if eof then
226801    +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
226802    +        run;
226804    +        %if &em_tree_numTarget gt 1 %then %do;
226805    +           %let em_tree_multipleTargets=Y;
226806    +        %end;
226807    +     %end;
226808    +   %end;
226810    +  %if "&em_tree_multipleTargets" eq "N" %then %do;
226812    +   /* variable importance */
226813    +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
226814    +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
226816    +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
226817    +     /* and the columns may not be generated                                                                                 */
226818    +     %let em_tree_cvexists=;
226819    +     %let em_tree_surrexists=.;
226820    +     data _null_;
226821    +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
226822    +       if eof then do ;
226823    +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
226824    +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
226825    +       end;
226826    +     run;
226828    +     data &EM_USER_OUTIMPORT;
226829    +         set &EM_USER_OUTIMPORT;
226830    +         /* format columns based on Precison value specified */
226831    +         format importance 15.&EM_PROPERTY_PRECISION
226832    +              %if &validexist %then %do;
226833    +                vimportance ratio 15.&EM_PROPERTY_PRECISION
226834    +              %end;
226835    +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
226836    +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
226837    +              %end;
226838    +         ;
226839    +     run;
226841    +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
226842    +     proc print data=&EM_USER_OUTIMPORT
226843    +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
226844    +          (where=((nrules>0) OR (nsurrogates>0)))
226845    +        %end;
226846    +        %else %do;
226847    +           (where=(nrules>0))
226848    +        %end;
226849    +        label noobs
226850    +        ;
226851    +     run;
226852    +     title10;
226854    +   %end;
226856    +   /* Sequence */
226857    +   %EM_GETNAME(key=OUTSEQ, type=DATA);
226858    +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
226859    +   data _null_ ;
226860    +      set &EM_USER_outseq (obs=2) end=eof ;
226861    +      if eof then do ;
226862    +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
226863    +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
226864    +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
226865    +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
226866    +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
226867    +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
226868    +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
226869    +      end;
226870    +    run;
226872    +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
226873    +      data &EM_USER_OUTSEQ;
226874    +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
226875    +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
226876    +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226877    +           _XMISC_=_VMISC_
226878    +        %end;
226879    +        %if "&em_tree_aprof" ne "."  %then %do;
226880    +           _XAPROF_=_VAPROF_
226881    +           _XPROF_ = _VPROF_
226882    +        %end;
226883    +        %if "&em_tree_aloss" ne "."  %then %do;
226884    +           _XALOSS_=_VALOSS_
226885    +        %end;
226886    +        %if "&EM_TREE_PRIOR" ne "." %then %do;
226887    +           _XPASE_ = _VPASE_
226888    +           _XPMISC_ = _VPMISC_
226889    +        %end;
226891    +        ));
226892    +     %end;
226893    +     %else %do;
226894    +        set &EM_USER_OUTSEQ;
226895    +     %end;
226897    +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
226898    +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226899    +            _MISC_   15.&EM_PROPERTY_PRECISION
226900    +         %end;
226901    +         %if "&EM_TREE_PRIOR" ne "." %then %do;
226902    +            _PASE_  15.&EM_PROPERTY_PRECISION
226903    +            _PMISC_ 15.&EM_PROPERTY_PRECISION
226904    +         %end;
226905    +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
226906    +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
226907    +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226908    +               _VMISC_ 15.&EM_PROPERTY_PRECISION
226909    +            %end;
226910    +            %if "&EM_TREE_PRIOR" ne "." %then %do;
226911    +              _VPASE_  15.&EM_PROPERTY_PRECISION
226912    +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
226913    +            %end;
226914    +         %end;
226915    +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
226916    +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
226917    +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226918    +               _VMISC_ 15.&EM_PROPERTY_PRECISION
226919    +            %end;
226920    +         %end;
226921    +         %if "&em_tree_seq" ne "." %then %do;
226922    +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
226923    +         %end;
226924    +         %if "&em_tree_vseq" ne "." %then %do;
226925    +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
226926    +         %end;
226927    +         %if "&em_tree_aprof" ne "." %then %do;
226928    +           _APROF_ 15.&EM_PROPERTY_PRECISION
226929    +           _PROF_ 15.&EM_PROPERTY_PRECISION
226930    +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
226931    +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
226932    +             _VPROF_ 15.&EM_PROPERTY_PRECISION
226933    +           %end;
226934    +         %end;
226935    +         %else %if "&em_tree_aloss" ne "." %then %do;
226936    +           _ALOSS_  15.&EM_PROPERTY_PRECISION
226937    +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
226938    +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
226939    +           %end;
226940    +         %end;
226941    +      ;
226942    +    run;
226943    +   %end;
226945    +   /* Observation Based Importance */
226946    +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
226948    +      /* need to check for 0 obs */
226949    +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
226950    +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
226951    +      %let rc=%sysfunc(close(&dsid));
226953    +      %if &onobs %then %do;
226954    +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
226955    +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
226957    +         data &EM_USER_OUTOBSIMP;
226958    +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
226959    +           if _a;
226960    +           by _INPUT1_;
226961    +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
226962    +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
226963    +                     _MISC_ 15.&EM_PROPERTY_PRECISION
226964    +                   %end;
226965    +                   ;
226966    +         run;
226967    +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
226968    +      %end;
226969    +   %end;
226971    +  %end;
226973    +  /* create dataset to support tree diagram and icicle plot */
226974    +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
226975    +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
226977    +  /* display tree diagram */
226978    +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
226979    +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
226981    +  /* display icicle diagram */
226982    +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
226983    +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
226985    +  /* Leaf Statistics Plot */
226986    +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
226988    +  /* print leaf information to output window */
226989    +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
226991    +     proc sort data=&EM_USER_TREE_PLOT out=t;
226992    +       by descending N;
226993    +     run;
226995    +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
226996    +     %local vn;
226997    +     data _null_;
226998    +       set t (obs=2) end=eof;
226999    +       if eof then do;
227000    +         call symput("vn", strip(put(vn, best.)));
227001    +       end;
227002    +     run;
227004    +     data t;
227005    +       set t;
227006    +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
227007    +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
227008    +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
227009    +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
227010    +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
227011    +       %end;
227012    +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
227013    +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
227014    +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
227015    +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
227016    +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
227017    +          %end;
227018    +       %end;
227019    +       ;
227020    +     run;
227022    +     /* determine if rase is found in t */
227023    +    %let dsid=%sysfunc(open(t,i));
227024    +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
227025    +    %let rc=%sysfunc(close(&dsid));
227027    +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
227028    +     proc print data=t noobs label;
227029    +       where tprob ne .;
227030    +       var node depth N tprob
227031    +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
227032    +         %if "&vn" ne "." %then %do;
227033    +           VN
227034    +         %end;
227035    +         vprob
227036    +       %end;
227037    +       %if &raseexists %then %do;
227038    +            RASE
227039    +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
227040    +              VRASE
227041    +            %end;
227042    +       %end;
227043    +       ;
227044    +     run;
227045    +     title10;
227046    +  %end;
227048    +  /* create plots that are done during training of node */
227049    +  /* display iterative plot, including reference line */
227050    +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
227051    +   /* %if &nleaves eq  %then %do; */
227052    +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
227053    +      data _null_;
227054    +        set &EM_USER_OUTTOPOLOGY end=eof;
227055    +        if eof then do;
227056    +          call symput('nleaves', LEAF);
227057    +        end;
227058    +      run;
227059    +   /* %end; */
227061    +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
227062    +    /*%EM_REPORT(view=1, Y=_ASE_); */
227063    +  %end;
227065    +  /* display leaf statistics */
227066    +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
227068    +  /* stats by node if multiple targets = Y */
227069    +  %EM_GETNAME(key=OUTSTATS, type=DATA);
227070    +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
227071    +    data &EM_USER_OUTSTATS;
227072    +      set &EM_USER_OUTSTATS;
227074    +     * if STATNAME="TARGET" then delete;
227075    +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
227076    +      drop leaf;
227077    +    run;
227078    +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
227080    +  %end;
227081    +  %else %do;
227082    +    /* add outstats and outdescribe to spk but not results */
227083    +    %EM_REPORT(viewtype=, key=OUTSTATS);
227084    +  %end;
227086    +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):   data _null_;
MPRINT(EM_TREE_REPORT):   set EMWS1.Tree3_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_REPORT):   if eof then do ;
MPRINT(EM_TREE_REPORT):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_REPORT):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_REPORT):   end;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE3_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_REPORT):   data EMWS1.Tree3_OUTIMPORT;
MPRINT(EM_TREE_REPORT):   set EMWS1.Tree3_OUTIMPORT;
MPRINT(EM_TREE_REPORT):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.TREE3_OUTIMPORT.
NOTE: The data set EMWS1.TREE3_OUTIMPORT has 11 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_REPORT):   title10 "Variable Importance";
MPRINT(EM_TREE_REPORT):   proc print data=EMWS1.Tree3_OUTIMPORT (where=(nrules>0)) label noobs ;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.TREE3_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 126.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_REPORT):   title10;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):   data _null_ ;
MPRINT(EM_TREE_REPORT):   set EMWS1.Tree3_OUTSEQ (obs=2) end=eof ;
MPRINT(EM_TREE_REPORT):   if eof then do ;
MPRINT(EM_TREE_REPORT):   call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
MPRINT(EM_TREE_REPORT):   call symput("em_tree_vase" , strip(put(_VASE_, best.)));
MPRINT(EM_TREE_REPORT):   call symput("em_tree_seq" , strip(put(_SEQUENCE_, best.)));
MPRINT(EM_TREE_REPORT):   call symput("em_tree_vseq" , strip(put(_VSEQUENCE_, best.)));
MPRINT(EM_TREE_REPORT):   call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
MPRINT(EM_TREE_REPORT):   call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
MPRINT(EM_TREE_REPORT):   call symput("em_tree_prior" , strip(put(_PASE_, best.)));
MPRINT(EM_TREE_REPORT):   end;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE3_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_REPORT):   data EMWS1.Tree3_OUTSEQ;
MPRINT(EM_TREE_REPORT):   set EMWS1.Tree3_OUTSEQ;
MPRINT(EM_TREE_REPORT):   format _ASE_ _ASSESS_ _MAX_ _SSE_ _RASE_ 15.4
MPRINT(EM_TREE_REPORT):   _MISC_ 15.4 _VASE_ _VASSESS_ _VMAX_ _VSSE_ _VRASE_ 15.4
MPRINT(EM_TREE_REPORT):   _VMISC_ 15.4 ;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 266 observations read from the data set EMWS1.TREE3_OUTSEQ.
NOTE: The data set EMWS1.TREE3_OUTSEQ has 266 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_MAKEPLOTDS):  ;
MPRINT(EM_TREE_MAKEPLOTDS):  ;
MPRINT(EM_TREE_MAKEPLOTDS):  ;
MPRINT(EM_TREE_MAKEPLOTDS):  ;
MPRINT(EM_TREE_MAKEPLOTDS):   data _null_;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="TARGET"));
MPRINT(EM_TREE_MAKEPLOTDS):   call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data _null_;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Ids_Attrition_Flag_DM(where=(_TYPE_="PREDICTED" AND LEVEL="1"));
MPRINT(EM_TREE_MAKEPLOTDS):   call symput('predTarget', strip(VARIABLE));
MPRINT(EM_TREE_MAKEPLOTDS):   call symput('predLvl', strip(LEVEL));
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='1');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
MPRINT(EM_TREE_MAKEPLOTDS):   keep node belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set EMWS1.TREE3_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 37 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data belowtext2;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
MPRINT(EM_TREE_MAKEPLOTDS):   keep node belowtextlbl;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set EMWS1.TREE3_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 37 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 37 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=belowtext2;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT2 has 37 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   merge belowtext belowtext2(in=_a);
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   if _a then belowtext=belowtextlbl;
MPRINT(EM_TREE_MAKEPLOTDS):   keep node belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 37 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 37 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data abovetext;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 149 observations read from the data set EMWS1.TREE3_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 149 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=abovetext;
MPRINT(EM_TREE_MAKEPLOTDS):   by node numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 149 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 149 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data abovetext;
MPRINT(EM_TREE_MAKEPLOTDS):   set abovetext(rename=(node=parent));
MPRINT(EM_TREE_MAKEPLOTDS):   by parent numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   retain abovetext tempstring flag branch origval origchar ;
MPRINT(EM_TREE_MAKEPLOTDS):   length abovetext $256;
MPRINT(EM_TREE_MAKEPLOTDS):   length tempstring origchar $64;
MPRINT(EM_TREE_MAKEPLOTDS):   if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if first.parent then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   branch = 1;
MPRINT(EM_TREE_MAKEPLOTDS):   origval = numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   branch = 1;
MPRINT(EM_TREE_MAKEPLOTDS):   origchar = character_value;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   if first.parent AND last.parent then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else if last.parent then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value,0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_TREE_MAKEPLOTDS):   origval = numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_TREE_MAKEPLOTDS):   origchar = character_value;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(character_value) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   origval = numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   origval = character_value;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = branch + 1;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   if first.numeric_value then do;
MPRINT(EM_TREE_MAKEPLOTDS):   flag = 0;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   branch = numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else if last.numeric_value then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if flag=0 then do;
MPRINT(EM_TREE_MAKEPLOTDS):   tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   length = length(strip(tempstring));
MPRINT(EM_TREE_MAKEPLOTDS):   if length < 32 then do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = strip(tempstring);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = strip(abovetext)||", ...";
MPRINT(EM_TREE_MAKEPLOTDS):   flag = 1;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   if flag=0 then do;
MPRINT(EM_TREE_MAKEPLOTDS):   tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
MPRINT(EM_TREE_MAKEPLOTDS):   length = length(strip(tempstring));
MPRINT(EM_TREE_MAKEPLOTDS):   if length < 32 then do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = strip(tempstring);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = strip(abovetext)||", ...";
MPRINT(EM_TREE_MAKEPLOTDS):   flag=1;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   branch = numeric_value;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   keep parent branch abovetext;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 149 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 172 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempmissing;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTRULES;
MPRINT(EM_TREE_MAKEPLOTDS):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_TREE_MAKEPLOTDS):   rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 3314 observations read from the data set EMWS1.TREE3_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 37 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=abovetext;
MPRINT(EM_TREE_MAKEPLOTDS):   by parent branch;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 172 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 172 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempmissing;
MPRINT(EM_TREE_MAKEPLOTDS):   by parent branch;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 37 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=EMWS1.Tree3_OUTNODES out=tempoutnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   by parent branch;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set EMWS1.TREE3_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 175 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempoutnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
MPRINT(EM_TREE_MAKEPLOTDS):   by parent branch;
MPRINT(EM_TREE_MAKEPLOTDS):   length traintotal validtotal 8;
MPRINT(EM_TREE_MAKEPLOTDS):   retain traintotal validtotal;
MPRINT(EM_TREE_MAKEPLOTDS):   if _a then do;
MPRINT(EM_TREE_MAKEPLOTDS):   if ^MISSING(abovetext) then do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext= strip(abovetext)||" Or Missing";
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = " Missing Values Only";
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   if MISSING(abovetext) then abovetext="Non-Missing Values";
MPRINT(EM_TREE_MAKEPLOTDS):   if node=1 then do;
MPRINT(EM_TREE_MAKEPLOTDS):   traintotal = N;
MPRINT(EM_TREE_MAKEPLOTDS):   validtotal=VN;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   drop role rank stat misschar belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 172 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 37 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 175 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempoutnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 175 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 37 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 37 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempoutnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   merge tempoutnodes belowtext;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 37 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 175 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data _null_ ;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTSTATS(where=(STATNAME="NPRIORS")) end=eof ;
MPRINT(EM_TREE_MAKEPLOTDS):   if eof then do ;
MPRINT(EM_TREE_MAKEPLOTDS):   call symput("npriors" , strip(put(_N_,best.))) ;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TREE3_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data temptarmeta;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_VariableSet(where=(ROLE='TARGET' AND LEVEL^='ORDINAL' AND USE in ('D', 'Y') ));
MPRINT(EM_TREE_MAKEPLOTDS):   length TARGET $32;
MPRINT(EM_TREE_MAKEPLOTDS):   Target=name;
MPRINT(EM_TREE_MAKEPLOTDS):   keep target level;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data temptargetused;
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTSTATS;
MPRINT(EM_TREE_MAKEPLOTDS):   length target $32 tarlevel $10;
MPRINT(EM_TREE_MAKEPLOTDS):   target=
MPRINT(EM_TREE_MAKEPLOTDS):  "Attrition_Flag";
MPRINT(EM_TREE_MAKEPLOTDS):   tarlevel=
MPRINT(EM_TREE_MAKEPLOTDS):  "BINARY";
MPRINT(EM_TREE_MAKEPLOTDS):   keep node target tarlevel;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1225 observations read from the data set EMWS1.TREE3_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 1225 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=temptargetused nodupkey;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1225 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 1050 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 175 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=EMWS1.Tree3_OUTSTATS out=tempoutstats;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1225 observations read from the data set EMWS1.TREE3_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 1225 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=temptargetused;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempinterval tempclass;
MPRINT(EM_TREE_MAKEPLOTDS):   merge tempoutstats temptargetused( rename=(target=targetused));
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   if tarlevel="INTERVAL" then output tempinterval;
MPRINT(EM_TREE_MAKEPLOTDS):   else output tempclass;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1225 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 175 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 1225 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sql;
MPRINT(EM_TREE_MAKEPLOTDS):   reset noprint;
MPRINT(EM_TREE_MAKEPLOTDS):   select count(*) into :em_intNobs from tempinterval;
MPRINT(EM_TREE_MAKEPLOTDS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sql;
MPRINT(EM_TREE_MAKEPLOTDS):   reset noprint;
MPRINT(EM_TREE_MAKEPLOTDS):   select count(*) into :em_classNobs from tempclass;
MPRINT(EM_TREE_MAKEPLOTDS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempclass;
MPRINT(EM_TREE_MAKEPLOTDS):   by node category;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1225 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 1225 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET ) tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY )
temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
MPRINT(EM_TREE_MAKEPLOTDS):   set tempclass;
MPRINT(EM_TREE_MAKEPLOTDS):   if ((statname="N") OR (statname="VALID: N")) then output tempn;
MPRINT(EM_TREE_MAKEPLOTDS):   else if statname="PREDICTION" then output temppredict;
MPRINT(EM_TREE_MAKEPLOTDS):   else if statname="PROBABILITY" then output tempprob;
MPRINT(EM_TREE_MAKEPLOTDS):   else if statname="VALID: PROBABILITY" then output tempvprob;
MPRINT(EM_TREE_MAKEPLOTDS):   else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
MPRINT(EM_TREE_MAKEPLOTDS):   else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1225 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 350 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 175 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 350 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 350 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sql;
MPRINT(EM_TREE_MAKEPLOTDS):   reset noprint;
MPRINT(EM_TREE_MAKEPLOTDS):   select count(*) into :em_profitflag from tempprofit;
MPRINT(EM_TREE_MAKEPLOTDS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sql;
MPRINT(EM_TREE_MAKEPLOTDS):   reset noprint;
MPRINT(EM_TREE_MAKEPLOTDS):   select count(*) into :em_lossflag from temploss;
MPRINT(EM_TREE_MAKEPLOTDS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc transpose data=tempn out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   id statname;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 350 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 175 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempprob;
MPRINT(EM_TREE_MAKEPLOTDS):   merge tempprob tempvprob(rename=(statvalue=vstatvalue));
MPRINT(EM_TREE_MAKEPLOTDS):   by node category;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 350 observations read from the data set WORK.TEMPPROB.
NOTE: There were 350 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 350 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data temppredict;
MPRINT(EM_TREE_MAKEPLOTDS):   merge tempprob temppredict(in=_a);
MPRINT(EM_TREE_MAKEPLOTDS):   by node category;
MPRINT(EM_TREE_MAKEPLOTDS):   if _a then do;
MPRINT(EM_TREE_MAKEPLOTDS):   percentCorrect = statvalue;
MPRINT(EM_TREE_MAKEPLOTDS):   vpercentCorrect= vstatvalue;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   label percentCorrect= "Percent Correct" vpercentCorrect= "Valid Percent Correct" ;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(percentCorrect) then delete;
MPRINT(EM_TREE_MAKEPLOTDS):   drop target;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 350 observations read from the data set WORK.TEMPPROB.
NOTE: There were 175 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 175 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempprob(keep= node probtext);
MPRINT(EM_TREE_MAKEPLOTDS):   length probtext $800;
MPRINT(EM_TREE_MAKEPLOTDS):   retain probtext;
MPRINT(EM_TREE_MAKEPLOTDS):   set tempprob ;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   if first.node then do;
MPRINT(EM_TREE_MAKEPLOTDS):   probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else if last.node then do;
MPRINT(EM_TREE_MAKEPLOTDS):   probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
MPRINT(EM_TREE_MAKEPLOTDS):   output;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   else do;
MPRINT(EM_TREE_MAKEPLOTDS):   probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 350 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 175 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempoutnodes out=tempoutnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 175 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data EMWS1.Tree3_TREE_PLOT;
MPRINT(EM_TREE_MAKEPLOTDS):   length textall $800;
MPRINT(EM_TREE_MAKEPLOTDS):   merge tempoutnodes temptargetused tempn temppredict tempprob ;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   textall="";
MPRINT(EM_TREE_MAKEPLOTDS):   if tarlevel^="INTERVAL" then do;
MPRINT(EM_TREE_MAKEPLOTDS):   textall=strip(textall)||"0A"x||"Node Id: "||"09"x||strip(Node);
MPRINT(EM_TREE_MAKEPLOTDS):   textall=strip(textall)||"0A"x||"Statistic "||"09"x||"Train" ||"09"x|| "Validation";
MPRINT(EM_TREE_MAKEPLOTDS):   textall=strip(textall)||"0A"x||strip(probtext);
MPRINT(EM_TREE_MAKEPLOTDS):   textall=strip(textall)||"0A"x||" Count: "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
MPRINT(EM_TREE_MAKEPLOTDS):   nodecolor=percentcorrect;
MPRINT(EM_TREE_MAKEPLOTDS):   end;
MPRINT(EM_TREE_MAKEPLOTDS):   drop CATEGORY PROBTEXT TARGET TARLEVEL STATVALUE VSTATVALUE ;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 175 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 175 observations read from the data set WORK.TEMPN.
NOTE: There were 175 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 175 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS1.TREE3_TREE_PLOT has 175 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempprob(keep=node statname statvalue rename=(statvalue=P_Attrition_Flag1));
MPRINT(EM_TREE_MAKEPLOTDS):   set EMWS1.Tree3_OUTSTATS;
MPRINT(EM_TREE_MAKEPLOTDS):   if ((statname="PROBABILITY" or statname="VALID: PROBABILITY" ) AND (CATEGORY="1") );
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 1225 observations read from the data set EMWS1.TREE3_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 350 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempprob;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 350 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 350 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=P_Attrition_Flag1 VALID__PROBABILITY=V_Attrition_Flag1));
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   id statname;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 350 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 175 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempprob;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 175 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempoutnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   merge tempoutnodes tempprob;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 175 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 175 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempoutnodes out=tempnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   by descending P_Attrition_Flag1;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 175 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data tempnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   retain traintotal validtotal;
MPRINT(EM_TREE_MAKEPLOTDS):   set tempnodes(where=(leaf ne . ));
MPRINT(EM_TREE_MAKEPLOTDS):   tprob=round(P_Attrition_Flag1, .01);
MPRINT(EM_TREE_MAKEPLOTDS):   percevent_train=round(tprob*100, .01);
MPRINT(EM_TREE_MAKEPLOTDS):   perc_train=round((n/traintotal)*100, 0.01);
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
MPRINT(EM_TREE_MAKEPLOTDS):   vprob=round(V_Attrition_Flag1, .01);
MPRINT(EM_TREE_MAKEPLOTDS):   percevent_valid=round(vprob*100, .01);
MPRINT(EM_TREE_MAKEPLOTDS):   perc_valid=round((vn/validtotal)*100, .01);
MPRINT(EM_TREE_MAKEPLOTDS):   index=_N_;
MPRINT(EM_TREE_MAKEPLOTDS):   keep node index tprob perc_train percevent_train vprob percevent_valid perc_valid ;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      9 at 1289:94    9 at 1293:102   9 at 1293:113
NOTE: There were 138 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 138 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc sort data=tempnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 138 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 138 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   data EMWS1.Tree3_TREE_PLOT;
MPRINT(EM_TREE_MAKEPLOTDS):   merge EMWS1.Tree3_TREE_PLOT tempnodes;
MPRINT(EM_TREE_MAKEPLOTDS):   by node;
MPRINT(EM_TREE_MAKEPLOTDS):   if missing(node) then delete;
MPRINT(EM_TREE_MAKEPLOTDS):   abovetext = compbl(abovetext);
MPRINT(EM_TREE_MAKEPLOTDS):   label textall = "All Text" parent = "Parent Id" node = "Node Id" abovetext = "Above Text" traintotal = "Train Total" nodecolor =
MPRINT(EM_TREE_MAKEPLOTDS):   "Node Color" tprob = "Training Percent 1" percevent_train = "Event Percentage" perc_train = "Percent Cases" index = "Index" validtotal = "Valid Total" VN =
MPRINT(EM_TREE_MAKEPLOTDS):   "Valid: Number of Observations" vprob = "Validation Percent 1" perc_valid = "Valid: Percent Cases" percevent_valid = "Valid: Event Percentage" ;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: There were 175 observations read from the data set EMWS1.TREE3_TREE_PLOT.
NOTE: There were 138 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS1.TREE3_TREE_PLOT has 175 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_TREE_MAKEPLOTDS):   proc datasets lib=work nolist;
MPRINT(EM_TREE_MAKEPLOTDS):   delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
MPRINT(EM_TREE_MAKEPLOTDS):   run;
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
MPRINT(EM_TREE_REPORT):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "TREE_PLOT";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DTree";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "TREE";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "TEXTALL";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "NODE";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "PARENT";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "NODETEXT";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "ABOVETEXT";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "BELOWTEXT";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "NODECOLOR";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "LINKWIDTH";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.64686503151751;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "TREE_PLOT";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "Icicle";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "ICICLE";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "TEXTALL";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "NODE";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "PARENT";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "NODETEXT";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "NODECOLOR";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.78419542535403;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "TREE_PLOT";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "AREABAR";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "VARWIDTH";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "NODE";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "PERCEVENT_TRAIN";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "PERC_TRAIN";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44669422202124;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):   proc sort data=EMWS1.Tree3_TREE_PLOT out=t;
MPRINT(EM_TREE_REPORT):   by descending N;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 175 observations read from the data set EMWS1.TREE3_TREE_PLOT.
NOTE: The data set WORK.T has 175 observations and 37 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_REPORT):   data _null_;
MPRINT(EM_TREE_REPORT):   set t (obs=2) end=eof;
MPRINT(EM_TREE_REPORT):   if eof then do;
MPRINT(EM_TREE_REPORT):   call symput("vn", strip(put(vn, best.)));
MPRINT(EM_TREE_REPORT):   end;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_REPORT):   data t;
MPRINT(EM_TREE_REPORT):   set t;
MPRINT(EM_TREE_REPORT):   label N= "Training Observations" DEPTH=
MPRINT(EM_TREE_REPORT):   "Depth" VN=
MPRINT(EM_TREE_REPORT):   "Validation Observations" ;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 175 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 175 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_TREE_REPORT):   title10 "Tree Leaf Report";
MPRINT(EM_TREE_REPORT):   proc print data=t noobs label;
MPRINT(EM_TREE_REPORT):   where tprob ne .;
MPRINT(EM_TREE_REPORT):   var node depth N tprob VN vprob ;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: There were 138 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 127.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_TREE_REPORT):   title10;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):   data _null_;
MPRINT(EM_TREE_REPORT):   set EMWS1.Tree3_OUTTOPOLOGY end=eof;
MPRINT(EM_TREE_REPORT):   if eof then do;
MPRINT(EM_TREE_REPORT):   call symput('nleaves', LEAF);
MPRINT(EM_TREE_REPORT):   end;
MPRINT(EM_TREE_REPORT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 175 observations read from the data set EMWS1.TREE3_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTSEQ";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "ITERATIONPLOT";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "SUBTREE";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "_NW_";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "138";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.75298144843102;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "TREE_PLOT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "RESPONSEBAR";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WHERECLAUSE";
MPRINT(EM_REPORT):   VALUE = "INDEX ne .";
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "LEAFSTATS";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "INDEX";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "tprob";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "vprob";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_TREE_REPORT):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTSTATS";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.02285300755074;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_TREE_REPORT):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End REPORT: Tree3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
227087
227088     *------------------------------------------------------------*;
227089     * End REPORT: Tree3;
227090     *------------------------------------------------------------*;
 
227091     /* Reset EM Options */
227092     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):    options formchar="|----|+|---+=|-/\<>*";
227093     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
227094     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
227095     proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
227096     by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
227097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227098     proc sort data=EMWS1.Part2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Part2_CMeta_TRAIN out=WORK.SUBSETINMETA;
227099     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
227100     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.PART2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
227101     proc sort data=EMWS1.Tree3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
227102     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
227103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.TREE3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 14 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
227104     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
227105     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
227106     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
227107     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 14 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227108     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
227109     set EMWS1.Tree3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_CMeta_TRAIN;
227110     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
227111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.TREE3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
227112     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
227113     set EMWS1.Tree3_TRAIN(keep=
227114     F_Attrition_Flag
227115     I_Attrition_Flag
227116     P_Attrition_Flag0
227117     P_Attrition_Flag1
227118     Q_Attrition_Flag0
227119     Q_Attrition_Flag1
227120     R_Attrition_Flag0
227121     R_Attrition_Flag1
227122     U_Attrition_Flag
227123     V_Attrition_Flag0
227124     V_Attrition_Flag1
227125     _WARN_
227126     Attrition_Flag
227127     );
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_TRAIN(keep= F_Attrition_Flag I_Attrition_Flag P_Attrition_Flag0 P_Attrition_Flag1 Q_Attrition_Flag0 Q_Attrition_Flag1 R_Attrition_Flag0 R_Attrition_Flag1 U_Attrition_Flag V_Attrition_Flag0 V_Attrition_Flag1 _WARN_
Attrition_Flag );
227128     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: There were 7088 observations read from the data set EMWS1.TREE3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 7088 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_Attrition_Flag*F_Attrition_Flag / out = WORK.Tree3_18NXB2S nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Tree3_18NXB2S;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Tree3_18NXB2S(rename=(F_Attrition_Flag=FROM I_Attrition_Flag=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "Attrition_Flag";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Tree3_18NXB2S;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Tree3_18NXB2S;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Attrition_Flag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_Attrition_Flag ;
 
MPRINT(EM_ASSESS):   VAR P_Attrition_Flag1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Attrition_Flag1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_Attrition_Flag P_Attrition_Flag1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_Attrition_Flag ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_Attrition_Flag1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_Attrition_Flag1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 -
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1606941309 _NEVENTS 1139 _NNONEVENTS 5949 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 7088));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_Attrition_Flag1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_Attrition_Flag1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_Attrition_Flag1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_Attrition_Flag1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 7088 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / (7088/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 7088)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 7088/20) ) / ( AVGNUMRESP / (7088/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 7088 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 7088 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 7088/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * ((20-GROUP+1)* 7088/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
231409     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
231410     set EMWS1.Tree3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_CMeta_TRAIN;
231411     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
231411   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
231412     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.TREE3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
231413     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
231414     set EMWS1.Tree3_VALIDATE(keep=
231415     F_Attrition_Flag
231416     I_Attrition_Flag
231417     P_Attrition_Flag0
231418     P_Attrition_Flag1
231419     Q_Attrition_Flag0
231420     Q_Attrition_Flag1
231421     R_Attrition_Flag0
231422     R_Attrition_Flag1
231423     U_Attrition_Flag
231424     V_Attrition_Flag0
231425     V_Attrition_Flag1
231426     _WARN_
231427     Attrition_Flag
231428     );
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_VALIDATE(keep= F_Attrition_Flag I_Attrition_Flag
P_Attrition_Flag0 P_Attrition_Flag1 Q_Attrition_Flag0 Q_Attrition_Flag1 R_Attrition_Flag0
R_Attrition_Flag1 U_Attrition_Flag V_Attrition_Flag0 V_Attrition_Flag1 _WARN_ Attrition_Flag );
231429     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.TREE3_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: There were 2025 observations read from the data set EMWS1.PART2_VALIDATE.
NOTE: There were 2025 observations read from the data set EMWS1.TREE3_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2025 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_Attrition_Flag*F_Attrition_Flag / out = WORK.Tree3_0944FMB nocol
norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Tree3_0944FMB;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Tree3_0944FMB(rename=(F_Attrition_Flag=FROM
I_Attrition_Flag=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "Attrition_Flag";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMCLASSIFICATION WORK.Tree3_0944FMB;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Tree3_0944FMB;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Attrition_Flag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_Attrition_Flag ;
 
MPRINT(EM_ASSESS):   VAR P_Attrition_Flag1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Attrition_Flag1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_Attrition_Flag P_Attrition_Flag1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_Attrition_Flag ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_Attrition_Flag1 NTARGET _tmpfreqvar_
WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_Attrition_Flag1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1604938272 _NEVENTS
325 _NNONEVENTS 1700 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2025));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_Attrition_Flag1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_Attrition_Flag1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_Attrition_Flag1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_Attrition_Flag1 *
_FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2025 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2025/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2025)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2025/20) ) / (
AVGNUMRESP / (2025/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2025 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2025 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2025/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2025/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
235719     %let _cn = %sysfunc(getoption(CENTER));
235720     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
235721     proc print data=EMWS1.Tree3_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Tree3_EMREPORTFIT noobs label;
235722     var STAT LABEL TRAIN
235723     VALIDATE
235724     TEST
235725     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE TEST ;
235726     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
235727     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235728     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
235729     run;
 
NOTE: There were 8 observations read from the data set EMWS1.TREE3_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 128.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
235730     title10;
MPRINT(EM_DIAGRAM):   title10;
235731     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235732     proc sort data=EMWS1.Tree3_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_EMCLASSIFICATION nothreads;
235733     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
235734     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.TREE3_EMCLASSIFICATION.
NOTE: The data set EMWS1.TREE3_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
235735     %let _cn = %sysfunc(getoption(CENTER));
235736     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
235737     proc print data=EMWS1.Tree3_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Tree3_EMCLASSIFICATION noobs label;
235738     var from into pct_row pct_col count percent
235739     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
235740     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
235741     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
235742     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
235743     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
235744     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
235745     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
235746     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
235747     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
235748     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235749     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
235750     run;
 
NOTE: There were 8 observations read from the data set EMWS1.TREE3_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 129.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
235751     title9;
MPRINT(EM_DIAGRAM):   title9;
235752     title10;
MPRINT(EM_DIAGRAM):   title10;
235753     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235754     %let _cn = %sysfunc(getoption(CENTER));
235755     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
235756     data EMWS1.Tree3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree3_EMEVENTREPORT;
235757     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
235757   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
235758     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
235758   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
235758   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
235758   ! FALSEEVENT
235759     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
235759   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
235759   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
235760        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
235761     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
235762     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
235763     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
235764     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
235765     set EMWS1.Tree3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMEVENTREPORT;
235766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.TREE3_EMEVENTREPORT.
NOTE: The data set EMWS1.TREE3_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
235767     proc print data=EMWS1.Tree3_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Tree3_EMEVENTREPORT noobs label;
235768     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235769     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
235770     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
235771     run;
 
NOTE: There were 2 observations read from the data set EMWS1.TREE3_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 130.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
235772     title10;
MPRINT(EM_DIAGRAM):   title10;
235773     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235774     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
235775     modify Tree3_EMRANK;
MPRINT(EM_DIAGRAM):   modify Tree3_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
235776     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
235777     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
235777   ! ;
MPRINT(EM_DIAGRAM):   run;
235778     run;
 
NOTE: MODIFY was successful for EMWS1.TREE3_EMRANK.DATA.
235779     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
235780     %let _cn = %sysfunc(getoption(CENTER));
235781     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
235782     proc print data=EMWS1.Tree3_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Tree3_EMRANK label noobs;
235783     var
235784     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
235785     by
235786     notsorted DATAROLE
235787     notsorted TARGET
235788     notsorted TARGETLABEL
235789     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
235790     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235791     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
235792     run;
 
NOTE: There were 40 observations read from the data set EMWS1.TREE3_EMRANK.
NOTE: The PROCEDURE PRINT printed page 131.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
235793     title10;
MPRINT(EM_DIAGRAM):   title10;
235794     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235795     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
235796     modify Tree3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Tree3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
235797     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
235797   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
235798     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
235798   ! ;
MPRINT(EM_DIAGRAM):   run;
235799     run;
 
NOTE: MODIFY was successful for EMWS1.TREE3_EMSCOREDIST.DATA.
235800     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Tree3_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Attrition_Flag" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
