NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
17194      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17195      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17196      put '<Node Id="Ids" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Run" Pid="15800" Gridid=""/>';
17197      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17198      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ids : Beginning update before running 
* datetime : 09APR2022:19:32:10 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Ids\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17200      %let _HPDMGRIDHOST=;
17201      %let _HPDMGRIDINSTALLLOC=;
17202      %let _HPDMGRIDDATASERVER=;
17203      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Ids : End update 
* datetime : 09APR2022:19:32:10 
* 
*------------------------------------------------------------* 
17204      %em_getactionstatus(emlib =EMWS1, nodeid=Ids);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17205      %let em_Train = N;
17206      %let em_Score = N;
17207      %let em_Report = N;
17208      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Ids" has already run. 
Node "Ids" succeeded. 
17209      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17210      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17211      put '<Node Id="Ids" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Complete" Pid="15800" Gridid=""/>';
17212      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "HPDMFOREST4" 
Traverser: WaitingNode "HPDMFOREST3" 
Traverser: WaitingNode "HPDMFOREST" 
Traverser: WaitingNode "HPDMFOREST2" 
Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "BOOST4" 
Traverser: WaitingNode "BOOST3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "BOOST" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "AUTONEURAL4" 
Traverser: WaitingNode "AUTONEURAL2" 
Traverser: WaitingNode "AUTONEURAL" 
Traverser: WaitingNode "TREE4" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "PART2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "TRANS" 
Traverser: WaitingNode "META" 
Traverser: WaitingNode "TRANS2" 
Traverser: WaitingNode "META2" 
Traverser: WaitingNode "PART" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
17213      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17214      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17215      put '<Node Id="Varsel" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Varsel" Event="Run" Pid="15800" Gridid=""/>';
17216      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17217      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Varsel : Beginning update before running 
* datetime : 09APR2022:19:32:11 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Varsel_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Varsel\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17237      %let _HPDMGRIDHOST=;
17238      %let _HPDMGRIDINSTALLLOC=;
17239      %let _HPDMGRIDDATASERVER=;
17240      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Varsel : End update 
* datetime : 09APR2022:19:32:11 
* 
*------------------------------------------------------------* 
17241      %em_getactionstatus(emlib =EMWS1, nodeid=Varsel);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17242      proc compare base=EMWS1.Varsel_emtrainvariable compare=EMWS1.Varsel_variableSet out=diffDS noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_GETACTIONSTATUS):   proc compare base=EMWS1.Varsel_emtrainvariable compare=EMWS1.Varsel_variableSet out=diffDS noprint outnoequal outbase outcomp outdiff;
17243      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 20 observations read from the data set EMWS1.VARSEL_EMTRAINVARIABLE.
NOTE: There were 20 observations read from the data set EMWS1.VARSEL_VARIABLESET.
NOTE: The data set WORK.DIFFDS has 0 observations and 8 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17244      %let diffVar = N;
17245      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17246      set diffDs end=eof;
MPRINT(EM_GETACTIONSTATUS):   set diffDs end=eof;
17247      if eof and _N_>0 then call symput('diffVar', 'Y');
MPRINT(EM_GETACTIONSTATUS):   if eof and _N_>0 then call symput('diffVar', 'Y');
17248      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 0 observations read from the data set WORK.DIFFDS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17249      %let em_Train = N;
17250      %let em_Score = N;
17251      %let em_Report = N;
17252      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):    
MPRINT(EM_DIAGRAM):  ;

Node "Varsel" has already run. 
Node "Varsel" succeeded. 
17253      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17254      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17255      put '<Node Id="Varsel" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Varsel" Event="Complete" Pid="15800" Gridid=""/>';
17256      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPDMFOREST4" 
Traverser: WaitingNode "HPDMFOREST3" 
Traverser: WaitingNode "HPDMFOREST" 
Traverser: WaitingNode "HPDMFOREST2" 
Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "BOOST4" 
Traverser: WaitingNode "BOOST3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "BOOST" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "AUTONEURAL4" 
Traverser: WaitingNode "AUTONEURAL2" 
Traverser: WaitingNode "AUTONEURAL" 
Traverser: WaitingNode "TREE4" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "PART2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "META" 
Traverser: WaitingNode "TRANS2" 
Traverser: WaitingNode "META2" 
Traverser: WaitingNode "PART" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
17257      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17258      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17259      put '<Node Id="Trans" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Trans" Event="Run" Pid="15800" Gridid=""/>';
17260      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17261      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Trans : Beginning update before running 
* datetime : 09APR2022:19:32:11 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Trans_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Trans\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17281      %let _HPDMGRIDHOST=;
17282      %let _HPDMGRIDINSTALLLOC=;
17283      %let _HPDMGRIDDATASERVER=;
17284      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Trans : End update 
* datetime : 09APR2022:19:32:11 
* 
*------------------------------------------------------------* 
17285      %em_getactionstatus(emlib =EMWS1, nodeid=Trans);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17286      %let em_filemodtime=;
17287      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17288      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17289      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17290      where fileref eq "#LN00163";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00163";
17291      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17292      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00163';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17293      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17294      %let em_filemodtime=;
17295      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17296      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17297      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17298      where fileref eq "#LN00164";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00164";
17299      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17300      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00164';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17301      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17302      %let em_filemodtime=;
17303      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17304      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17305      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17306      where fileref eq "#LN00165";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00165";
17307      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17308      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00165';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17309      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17310      %let em_Train = N;
17311      %let em_Score = N;
17312      %let em_Report = N;
17313      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Trans" has already run. 
Node "Trans" succeeded. 
17314      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17315      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17316      put '<Node Id="Trans" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Trans" Event="Complete" Pid="15800" Gridid=""/>';
17317      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPDMFOREST4" 
Traverser: WaitingNode "HPDMFOREST3" 
Traverser: WaitingNode "HPDMFOREST" 
Traverser: WaitingNode "HPDMFOREST2" 
Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "BOOST4" 
Traverser: WaitingNode "BOOST3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "BOOST" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "AUTONEURAL4" 
Traverser: WaitingNode "AUTONEURAL2" 
Traverser: WaitingNode "AUTONEURAL" 
Traverser: WaitingNode "TREE4" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "PART2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "TRANS2" 
Traverser: WaitingNode "META2" 
Traverser: WaitingNode "PART" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
17318      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17319      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17320      put '<Node Id="Meta" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Meta" Event="Run" Pid="15800" Gridid=""/>';
17321      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17322      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Meta : Beginning update before running 
* datetime : 09APR2022:19:32:12 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Meta_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "CLUSMEAN" "CLUSSTAT" "ESTIMATE" "RANK" "REPORTFIT" "RULES" "SCOREDIST" "TERMS" "TREE" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Meta\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17355      %let _HPDMGRIDHOST=;
17356      %let _HPDMGRIDINSTALLLOC=;
17357      %let _HPDMGRIDDATASERVER=;
17358      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Meta : End update 
* datetime : 09APR2022:19:32:12 
* 
*------------------------------------------------------------* 
17359      %em_getactionstatus(emlib =EMWS1, nodeid=Meta);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17360      %let em_filemodtime=;
17361      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17362      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17363      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17364      where fileref eq "#LN00188";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00188";
17365      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17366      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00188';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17367      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17368      %let em_filemodtime=;
17369      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17370      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17371      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17372      where fileref eq "#LN00189";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00189";
17373      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17374      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00189';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17375      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17376      %let em_filemodtime=;
17377      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17378      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17379      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17380      where fileref eq "#LN00190";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00190";
17381      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17382      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00190';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17383      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17384      %let em_filemodtime=;
17385      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17386      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17387      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17388      where fileref eq "#LN00191";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00191";
17389      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17390      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00191';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17391      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17392      %let em_filemodtime=;
17393      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17394      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17395      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17396      where fileref eq "#LN00192";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00192";
17397      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17398      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00192';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17399      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17400      %let em_Train = N;
17401      %let em_Score = N;
17402      %let em_Report = N;
17403      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Meta" has already run. 
Node "Meta" succeeded. 
17404      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17405      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17406      put '<Node Id="Meta" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Meta" Event="Complete" Pid="15800" Gridid=""/>';
17407      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPDMFOREST4" 
Traverser: WaitingNode "HPDMFOREST3" 
Traverser: WaitingNode "HPDMFOREST" 
Traverser: WaitingNode "HPDMFOREST2" 
Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "BOOST4" 
Traverser: WaitingNode "BOOST3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "BOOST" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "AUTONEURAL4" 
Traverser: WaitingNode "AUTONEURAL2" 
Traverser: WaitingNode "AUTONEURAL" 
Traverser: WaitingNode "TREE4" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "PART2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "META2" 
Traverser: WaitingNode "PART" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
17408      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17409      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17410      put '<Node Id="Trans2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Trans2" Event="Run" Pid="15800" Gridid=""/>';
17411      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17412      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Trans2 : Beginning update before running 
* datetime : 09APR2022:19:32:13 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Trans2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Meta_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Trans2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17432      %let _HPDMGRIDHOST=;
17433      %let _HPDMGRIDINSTALLLOC=;
17434      %let _HPDMGRIDDATASERVER=;
17435      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Trans2 : End update 
* datetime : 09APR2022:19:32:13 
* 
*------------------------------------------------------------* 
17436      %em_getactionstatus(emlib =EMWS1, nodeid=Trans2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17437      %let em_filemodtime=;
17438      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17439      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17440      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17441      where fileref eq "#LN00215";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00215";
17442      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17443      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00215';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17444      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17445      %let em_filemodtime=;
17446      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17447      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17448      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17449      where fileref eq "#LN00216";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00216";
17450      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17451      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00216';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17452      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17453      %let em_filemodtime=;
17454      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17455      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17456      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17457      where fileref eq "#LN00217";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00217";
17458      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17459      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00217';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17460      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17461      %let em_Train = N;
17462      %let em_Score = N;
17463      %let em_Report = N;
17464      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Trans2" has already run. 
Node "Trans2" succeeded. 
17465      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17466      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17467      put '<Node Id="Trans2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Trans2" Event="Complete" Pid="15800" Gridid=""/>';
17468      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPDMFOREST4" 
Traverser: WaitingNode "HPDMFOREST3" 
Traverser: WaitingNode "HPDMFOREST" 
Traverser: WaitingNode "HPDMFOREST2" 
Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "BOOST4" 
Traverser: WaitingNode "BOOST3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "BOOST" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "AUTONEURAL4" 
Traverser: WaitingNode "AUTONEURAL2" 
Traverser: WaitingNode "AUTONEURAL" 
Traverser: WaitingNode "TREE4" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "PART2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "PART" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
17469      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17470      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17471      put '<Node Id="Meta2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Meta2" Event="Run" Pid="15800" Gridid=""/>';
17472      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17473      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Meta2 : Beginning update before running 
* datetime : 09APR2022:19:32:14 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Meta2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "CLUSMEAN" "CLUSSTAT" "ESTIMATE" "RANK" "REPORTFIT" "RULES" "SCOREDIST" "TERMS" "TREE" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Meta2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17506      %let _HPDMGRIDHOST=;
17507      %let _HPDMGRIDINSTALLLOC=;
17508      %let _HPDMGRIDDATASERVER=;
17509      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Meta2 : End update 
* datetime : 09APR2022:19:32:14 
* 
*------------------------------------------------------------* 
17510      %em_getactionstatus(emlib =EMWS1, nodeid=Meta2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17511      %let em_filemodtime=;
17512      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17513      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17514      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17515      where fileref eq "#LN00240";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00240";
17516      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17517      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00240';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17518      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17519      %let em_filemodtime=;
17520      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17521      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17522      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17523      where fileref eq "#LN00241";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00241";
17524      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17525      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00241';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17526      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17527      %let em_filemodtime=;
17528      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17529      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17530      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17531      where fileref eq "#LN00242";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00242";
17532      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17533      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00242';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17534      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17535      %let em_filemodtime=;
17536      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17537      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17538      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17539      where fileref eq "#LN00243";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00243";
17540      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17541      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00243';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17542      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17543      %let em_filemodtime=;
17544      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
17545      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17546      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17547      where fileref eq "#LN00244";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00244";
17548      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17549      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00244';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17550      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17551      %let em_Train = N;
17552      %let em_Score = N;
17553      %let em_Report = N;
17554      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Meta2" has already run. 
Node "Meta2" succeeded. 
17555      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17556      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17557      put '<Node Id="Meta2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Meta2" Event="Complete" Pid="15800" Gridid=""/>';
17558      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPDMFOREST4" 
Traverser: WaitingNode "HPDMFOREST3" 
Traverser: WaitingNode "HPDMFOREST" 
Traverser: WaitingNode "HPDMFOREST2" 
Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "BOOST4" 
Traverser: WaitingNode "BOOST3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "BOOST" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "AUTONEURAL4" 
Traverser: WaitingNode "AUTONEURAL2" 
Traverser: WaitingNode "AUTONEURAL" 
Traverser: WaitingNode "TREE4" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
17559      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17560      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17561      put '<Node Id="Part2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part2" Event="Run" Pid="15800" Gridid=""/>';
17562      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17563      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part2 : Beginning update before running 
* datetime : 09APR2022:19:32:14 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Meta2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Part2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17582      %let _HPDMGRIDHOST=;
17583      %let _HPDMGRIDINSTALLLOC=;
17584      %let _HPDMGRIDDATASERVER=;
17585      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part2 : End update 
* datetime : 09APR2022:19:32:15 
* 
*------------------------------------------------------------* 
17586      %em_getactionstatus(emlib =EMWS1, nodeid=Part2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17587      %let em_Train = N;
17588      %let em_Score = N;
17589      %let em_Report = N;
17590      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Part2" has already run. 
Node "Part2" succeeded. 
17591      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17592      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17593      put '<Node Id="Part2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part2" Event="Complete" Pid="15800" Gridid=""/>';
17594      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "REG4" 
Traverser: WaitingNode "REG3" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "REG" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
17595      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17596      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17597      put '<Node Id="Part" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Run" Pid="15800" Gridid=""/>';
17598      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17599      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 09APR2022:19:32:15 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Meta2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17618      %let _HPDMGRIDHOST=;
17619      %let _HPDMGRIDINSTALLLOC=;
17620      %let _HPDMGRIDDATASERVER=;
17621      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 09APR2022:19:32:15 
* 
*------------------------------------------------------------* 
17622      %em_getactionstatus(emlib =EMWS1, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17623      %let em_Train = N;
17624      %let em_Score = N;
17625      %let em_Report = N;
17626      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Part" has already run. 
Node "Part" succeeded. 
17627      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17628      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17629      put '<Node Id="Part" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="15800" Gridid=""/>';
17630      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
17631      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17632      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17633      put '<Node Id="HPDMForest4" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest4" Event="Run" Pid="15800" Gridid=""/>';
17634      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17635      %let emloopmode =;
*------------------------------------------------------------* 
* 
* HPDMForest4 : Beginning update before running 
* datetime : 09APR2022:19:32:16 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.HPDMForest4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest4: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest4: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * HPDMForest4: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
17980      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17981      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17982      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
17983      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
17984      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
17985      output;
MPRINT(EM_DIAGRAM):   output;
17986      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17987      %let emexceptionString =;
17988      %let EMEXCEPTIONSTRING=;
17989      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17990      * UPDATE: HPDMForest4;
MPRINT(EM_DIAGRAM):   * UPDATE: HPDMForest4;
17991      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17992      %let EM_ACTION = UPDATE;
17993      %let syscc = 0;
17994      %macro main;
17995      
17996         %if %upcase(&EM_ACTION) = CREATE %then %do;
17997             filename temp catalog 'sashelp.hpdm.hpdmforest_create.source';
17998             %include temp;
17999             filename temp;
18000             %hpdm_Forest_create;
18001         %end;
18002         %else
18003         %if %upcase(&EM_ACTION) = TRAIN %then %do;
18004             filename temp catalog 'sashelp.hpdm.hpdmforest_train.source';
18005             %include temp;
18006             filename temp;
18007             %hpdm_Forest_train;
18008         %end;
18009         %else
18010         %if %upcase(&EM_ACTION) = SCORE %then %do;
18011             filename temp catalog 'sashelp.hpdm.hpdmforest_score.source';
18012             %include temp;
18013             filename temp;
18014             %hpdm_Forest_score;
18015         %end;
18016         %else
18017         %if %upcase(&EM_ACTION) = REPORT %then %do;
18018             filename temp catalog 'sashelp.hpdm.hpdmforest_report.source';
18019             %include temp;
18020             filename temp;
18021             %hpdm_Forest_report;
18022         %end;
18023         %else
18024      
18025      %mend main;
18026      
18027      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
18028      
18029      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18030      * End UPDATE: HPDMForest4;
MPRINT(EM_DIAGRAM):   * End UPDATE: HPDMForest4;
18031      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

18032      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\HPDMForest4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18034      %let _HPDMGRIDHOST=;
18035      %let _HPDMGRIDINSTALLLOC=;
18036      %let _HPDMGRIDDATASERVER=;
18037      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* HPDMForest4 : End update 
* datetime : 09APR2022:19:32:17 
* 
*------------------------------------------------------------* 
18038      %em_getactionstatus(emlib =EMWS1, nodeid=HPDMForest4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18039      %let em_filemodtime=;
18040      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
18041      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
18042      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
18043      where fileref eq "#LN00317";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00317";
18044      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
18045      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00317';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18046      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
18047      %let em_Train = N;
18048      %let em_Score = N;
18049      %let em_Report = N;
18050      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "HPDMForest4" has already run. 
Node "HPDMForest4" succeeded. 
18051      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18052      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18053      put '<Node Id="HPDMForest4" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest4" Event="Complete" Pid="15800" Gridid=""/>';
18054      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 63.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
18055      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18056      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18057      put '<Node Id="HPDMForest3" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest3" Event="Run" Pid="15800" Gridid=""/>';
18058      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18059      %let emloopmode =;
*------------------------------------------------------------* 
* 
* HPDMForest3 : Beginning update before running 
* datetime : 09APR2022:19:32:17 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.HPDMForest3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * HPDMForest3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
18404      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
18405      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
18406      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
18407      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
18408      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
18409      output;
MPRINT(EM_DIAGRAM):   output;
18410      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18411      %let emexceptionString =;
18412      %let EMEXCEPTIONSTRING=;
18413      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18414      * UPDATE: HPDMForest3;
MPRINT(EM_DIAGRAM):   * UPDATE: HPDMForest3;
18415      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18416      %let EM_ACTION = UPDATE;
18417      %let syscc = 0;
18418      %macro main;
18419      
18420         %if %upcase(&EM_ACTION) = CREATE %then %do;
18421             filename temp catalog 'sashelp.hpdm.hpdmforest_create.source';
18422             %include temp;
18423             filename temp;
18424             %hpdm_Forest_create;
18425         %end;
18426         %else
18427         %if %upcase(&EM_ACTION) = TRAIN %then %do;
18428             filename temp catalog 'sashelp.hpdm.hpdmforest_train.source';
18429             %include temp;
18430             filename temp;
18431             %hpdm_Forest_train;
18432         %end;
18433         %else
18434         %if %upcase(&EM_ACTION) = SCORE %then %do;
18435             filename temp catalog 'sashelp.hpdm.hpdmforest_score.source';
18436             %include temp;
18437             filename temp;
18438             %hpdm_Forest_score;
18439         %end;
18440         %else
18441         %if %upcase(&EM_ACTION) = REPORT %then %do;
18442             filename temp catalog 'sashelp.hpdm.hpdmforest_report.source';
18443             %include temp;
18444             filename temp;
18445             %hpdm_Forest_report;
18446         %end;
18447         %else
18448      
18449      %mend main;
18450      
18451      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
18452      
18453      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18454      * End UPDATE: HPDMForest3;
MPRINT(EM_DIAGRAM):   * End UPDATE: HPDMForest3;
18455      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

18456      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\HPDMForest3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18458      %let _HPDMGRIDHOST=;
18459      %let _HPDMGRIDINSTALLLOC=;
18460      %let _HPDMGRIDDATASERVER=;
18461      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* HPDMForest3 : End update 
* datetime : 09APR2022:19:32:18 
* 
*------------------------------------------------------------* 
18462      %em_getactionstatus(emlib =EMWS1, nodeid=HPDMForest3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18463      %let em_filemodtime=;
18464      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
18465      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
18466      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
18467      where fileref eq "#LN00346";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00346";
18468      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
18469      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00346';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18470      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
18471      %let em_Train = N;
18472      %let em_Score = N;
18473      %let em_Report = N;
18474      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "HPDMForest3" has already run. 
Node "HPDMForest3" succeeded. 
18475      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18476      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18477      put '<Node Id="HPDMForest3" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest3" Event="Complete" Pid="15800" Gridid=""/>';
18478      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 63.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
18479      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18480      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18481      put '<Node Id="AutoNeural4" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="AutoNeural4" Event="Run" Pid="15800" Gridid=""/>';
18482      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18483      %let emloopmode =;
*------------------------------------------------------------* 
* 
* AutoNeural4 : Beginning update before running 
* datetime : 09APR2022:19:32:18 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.AutoNeural4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18503      %let _HPDMGRIDHOST=;
18504      %let _HPDMGRIDINSTALLLOC=;
18505      %let _HPDMGRIDDATASERVER=;
18506      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* AutoNeural4 : End update 
* datetime : 09APR2022:19:32:18 
* 
*------------------------------------------------------------* 
18507      %em_getactionstatus(emlib =EMWS1, nodeid=AutoNeural4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18508      %let em_Train = N;
18509      %let em_Score = N;
18510      %let em_Report = N;
18511      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "AutoNeural4" has already run. 
Node "AutoNeural4" succeeded. 
18512      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18513      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18514      put '<Node Id="AutoNeural4" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="AutoNeural4" Event="Complete" Pid="15800" Gridid=""/>';
18515      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 63.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
18516      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18517      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18518      put '<Node Id="AutoNeural2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="AutoNeural2" Event="Run" Pid="15800" Gridid=""/>';
18519      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18520      %let emloopmode =;
*------------------------------------------------------------* 
* 
* AutoNeural2 : Beginning update before running 
* datetime : 09APR2022:19:32:19 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.AutoNeural2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18540      %let _HPDMGRIDHOST=;
18541      %let _HPDMGRIDINSTALLLOC=;
18542      %let _HPDMGRIDDATASERVER=;
18543      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* AutoNeural2 : End update 
* datetime : 09APR2022:19:32:19 
* 
*------------------------------------------------------------* 
18544      %em_getactionstatus(emlib =EMWS1, nodeid=AutoNeural2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18545      %let em_Train = N;
18546      %let em_Score = N;
18547      %let em_Report = N;
18548      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "AutoNeural2" has already run. 
Node "AutoNeural2" succeeded. 
18549      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18550      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18551      put '<Node Id="AutoNeural2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="AutoNeural2" Event="Complete" Pid="15800" Gridid=""/>';
18552      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 63.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
18553      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18554      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18555      put '<Node Id="AutoNeural" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="AutoNeural" Event="Run" Pid="15800" Gridid=""/>';
18556      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

18557      %let emloopmode =;
*------------------------------------------------------------* 
* 
* AutoNeural : Beginning update before running 
* datetime : 09APR2022:19:32:20 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.AutoNeural_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18577      %let _HPDMGRIDHOST=;
18578      %let _HPDMGRIDINSTALLLOC=;
18579      %let _HPDMGRIDDATASERVER=;
18580      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* AutoNeural : End update 
* datetime : 09APR2022:19:32:20 
* 
*------------------------------------------------------------* 
18581      %em_getactionstatus(emlib =EMWS1, nodeid=AutoNeural);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18582      %let em_Train = N;
18583      %let em_Score = N;
18584      %let em_Report = N;
18585      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "AutoNeural" has already run. 
Node "AutoNeural" succeeded. 
18586      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18587      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18588      put '<Node Id="AutoNeural" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="AutoNeural" Event="Complete" Pid="15800" Gridid=""/>';
18589      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 62.
      The maximum record length was 62.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
18590      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18591      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18592      put '<Node Id="Boost4" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost4" Event="Run" Pid="15800" Gridid=""/>';
18593      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18594      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Boost4 : Beginning update before running 
* datetime : 09APR2022:19:32:20 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Boost4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost4: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost4: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost4: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
18948      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
18949      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
18950      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
18951      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
18952      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
18953      output;
MPRINT(EM_DIAGRAM):   output;
18954      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18955      %let emexceptionString =;
18956      %let EMEXCEPTIONSTRING=;
18957      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18958      * UPDATE: Boost4;
MPRINT(EM_DIAGRAM):   * UPDATE: Boost4;
18959      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18960      %let EM_ACTION = UPDATE;
18961      %let syscc = 0;
18962      %macro main;
18963      
18964        filename temp catalog 'sashelp.emmodl.boost_macros.source';
18965        %include temp;
18966        filename temp;
18967      
18968        %setProperties;
18969      
18970        %if %upcase(&EM_ACTION) = CREATE %then %do;
18971          filename temp catalog 'sashelp.emmodl.boost_create.source';
18972          %include temp;
18973          filename temp;
18974      
18975          %create;
18976        %end;
18977      
18978         %else
18979         %if %upcase(&EM_ACTION) = TRAIN %then %do;
18980      
18981             filename temp catalog 'sashelp.emmodl.boost_train.source';
18982             %include temp;
18983             filename temp;
18984             %train;
18985         %end;
18986      
18987        %else
18988        %if %upcase(&EM_ACTION) = SCORE %then %do;
18989          filename temp catalog 'sashelp.emmodl.boost_score.source';
18990          %include temp;
18991          filename temp;
18992      
18993          %score;
18994      
18995        %end;
18996      
18997        %else
18998        %if %upcase(&EM_ACTION) = REPORT %then %do;
18999      
19000             filename temp catalog 'sashelp.emmodl.boost_report.source';
19001             %include temp;
19002             filename temp;
19003      
19004             %report;
19005         %end;
19006      
19007         %doendm:
19008      %mend main;
19009      
19010      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
19011     +
19012     +%macro SetProperties;
19013     +
19014     +     /* boost options */
19015     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
19016     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
19017     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
19018     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
19019     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
19020     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
19021     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
19022     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
19023     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
19024     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
19025     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
19026     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
19027     +
19028     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
19029     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
19030     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
19031     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
19032     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
19033     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
19034     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
19035     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
19036     +
19037     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
19038     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
19039     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
19040     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
19041     +
19042     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
19043     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
19044     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
19045     +
19046     +%mend SetProperties;
19047     +
19048     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Boost4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
19049      
19050      *------------------------------------------------------------*;
19051      * End UPDATE: Boost4;
19052      *------------------------------------------------------------*;

19053      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Boost4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
19055      %let _HPDMGRIDHOST=;
19056      %let _HPDMGRIDINSTALLLOC=;
19057      %let _HPDMGRIDDATASERVER=;
19058      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Boost4 : End update 
* datetime : 09APR2022:19:32:21 
* 
*------------------------------------------------------------* 
19059      %em_getactionstatus(emlib =EMWS1, nodeid=Boost4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

19060      %let em_filemodtime=;
19061      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
19062      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
19063      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
19064      where fileref eq "#LN00441";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00441";
19065      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
19066      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00441';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

19067      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
19068      %let em_Train = N;
19069      %let em_Score = N;
19070      %let em_Report = N;
19071      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Boost4" has already run. 
Node "Boost4" succeeded. 
19072      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
19073      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
19074      put '<Node Id="Boost4" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost4" Event="Complete" Pid="15800" Gridid=""/>';
19075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
19076      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
19077      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
19078      put '<Node Id="Boost3" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost3" Event="Run" Pid="15800" Gridid=""/>';
19079      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

19080      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Boost3 : Beginning update before running 
* datetime : 09APR2022:19:32:21 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Boost3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
19434      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
19435      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
19436      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
19437      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
19438      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
19439      output;
MPRINT(EM_DIAGRAM):   output;
19440      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19441      %let emexceptionString =;
19442      %let EMEXCEPTIONSTRING=;
19443      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
19444      * UPDATE: Boost3;
MPRINT(EM_DIAGRAM):   * UPDATE: Boost3;
19445      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
19446      %let EM_ACTION = UPDATE;
19447      %let syscc = 0;
19448      %macro main;
19449      
19450        filename temp catalog 'sashelp.emmodl.boost_macros.source';
19451        %include temp;
19452        filename temp;
19453      
19454        %setProperties;
19455      
19456        %if %upcase(&EM_ACTION) = CREATE %then %do;
19457          filename temp catalog 'sashelp.emmodl.boost_create.source';
19458          %include temp;
19459          filename temp;
19460      
19461          %create;
19462        %end;
19463      
19464         %else
19465         %if %upcase(&EM_ACTION) = TRAIN %then %do;
19466      
19467             filename temp catalog 'sashelp.emmodl.boost_train.source';
19468             %include temp;
19469             filename temp;
19470             %train;
19471         %end;
19472      
19473        %else
19474        %if %upcase(&EM_ACTION) = SCORE %then %do;
19475          filename temp catalog 'sashelp.emmodl.boost_score.source';
19476          %include temp;
19477          filename temp;
19478      
19479          %score;
19480      
19481        %end;
19482      
19483        %else
19484        %if %upcase(&EM_ACTION) = REPORT %then %do;
19485      
19486             filename temp catalog 'sashelp.emmodl.boost_report.source';
19487             %include temp;
19488             filename temp;
19489      
19490             %report;
19491         %end;
19492      
19493         %doendm:
19494      %mend main;
19495      
19496      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
19497     +
19498     +%macro SetProperties;
19499     +
19500     +     /* boost options */
19501     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
19502     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
19503     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
19504     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
19505     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
19506     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
19507     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
19508     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
19509     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
19510     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
19511     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
19512     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
19513     +
19514     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
19515     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
19516     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
19517     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
19518     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
19519     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
19520     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
19521     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
19522     +
19523     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
19524     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
19525     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
19526     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
19527     +
19528     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
19529     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
19530     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
19531     +
19532     +%mend SetProperties;
19533     +
19534     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Boost3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
19535      
19536      *------------------------------------------------------------*;
19537      * End UPDATE: Boost3;
19538      *------------------------------------------------------------*;

19539      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Boost3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
19541      %let _HPDMGRIDHOST=;
19542      %let _HPDMGRIDINSTALLLOC=;
19543      %let _HPDMGRIDDATASERVER=;
19544      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Boost3 : End update 
* datetime : 09APR2022:19:32:22 
* 
*------------------------------------------------------------* 
19545      %em_getactionstatus(emlib =EMWS1, nodeid=Boost3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

19546      %let em_filemodtime=;
19547      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
19548      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
19549      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
19550      where fileref eq "#LN00470";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00470";
19551      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
19552      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00470';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19553      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
19554      %let em_Train = N;
19555      %let em_Score = N;
19556      %let em_Report = N;
19557      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Boost3" has already run. 
Node "Boost3" succeeded. 
19558      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
19559      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
19560      put '<Node Id="Boost3" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost3" Event="Complete" Pid="15800" Gridid=""/>';
19561      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
19562      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
19563      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
19564      put '<Node Id="Boost2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost2" Event="Run" Pid="15800" Gridid=""/>';
19565      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

19566      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Boost2 : Beginning update before running 
* datetime : 09APR2022:19:32:22 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Boost2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
19920      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
19921      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
19922      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
19923      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
19924      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
19925      output;
MPRINT(EM_DIAGRAM):   output;
19926      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19927      %let emexceptionString =;
19928      %let EMEXCEPTIONSTRING=;
19929      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
19930      * UPDATE: Boost2;
MPRINT(EM_DIAGRAM):   * UPDATE: Boost2;
19931      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
19932      %let EM_ACTION = UPDATE;
19933      %let syscc = 0;
19934      %macro main;
19935      
19936        filename temp catalog 'sashelp.emmodl.boost_macros.source';
19937        %include temp;
19938        filename temp;
19939      
19940        %setProperties;
19941      
19942        %if %upcase(&EM_ACTION) = CREATE %then %do;
19943          filename temp catalog 'sashelp.emmodl.boost_create.source';
19944          %include temp;
19945          filename temp;
19946      
19947          %create;
19948        %end;
19949      
19950         %else
19951         %if %upcase(&EM_ACTION) = TRAIN %then %do;
19952      
19953             filename temp catalog 'sashelp.emmodl.boost_train.source';
19954             %include temp;
19955             filename temp;
19956             %train;
19957         %end;
19958      
19959        %else
19960        %if %upcase(&EM_ACTION) = SCORE %then %do;
19961          filename temp catalog 'sashelp.emmodl.boost_score.source';
19962          %include temp;
19963          filename temp;
19964      
19965          %score;
19966      
19967        %end;
19968      
19969        %else
19970        %if %upcase(&EM_ACTION) = REPORT %then %do;
19971      
19972             filename temp catalog 'sashelp.emmodl.boost_report.source';
19973             %include temp;
19974             filename temp;
19975      
19976             %report;
19977         %end;
19978      
19979         %doendm:
19980      %mend main;
19981      
19982      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
19983     +
19984     +%macro SetProperties;
19985     +
19986     +     /* boost options */
19987     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
19988     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
19989     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
19990     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
19991     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
19992     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
19993     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
19994     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
19995     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
19996     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
19997     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
19998     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
19999     +
20000     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
20001     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
20002     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
20003     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
20004     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
20005     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
20006     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
20007     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
20008     +
20009     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
20010     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
20011     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
20012     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
20013     +
20014     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
20015     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
20016     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
20017     +
20018     +%mend SetProperties;
20019     +
20020     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Boost2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20021      
20022      *------------------------------------------------------------*;
20023      * End UPDATE: Boost2;
20024      *------------------------------------------------------------*;

20025      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Boost2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
20027      %let _HPDMGRIDHOST=;
20028      %let _HPDMGRIDINSTALLLOC=;
20029      %let _HPDMGRIDDATASERVER=;
20030      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Boost2 : End update 
* datetime : 09APR2022:19:32:23 
* 
*------------------------------------------------------------* 
20031      %em_getactionstatus(emlib =EMWS1, nodeid=Boost2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

20032      %let em_filemodtime=;
20033      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
20034      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
20035      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
20036      where fileref eq "#LN00499";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00499";
20037      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
20038      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00499';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20039      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
20040      %let em_Train = N;
20041      %let em_Score = N;
20042      %let em_Report = N;
20043      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Boost2" has already run. 
Node "Boost2" succeeded. 
20044      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20045      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
20046      put '<Node Id="Boost2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost2" Event="Complete" Pid="15800" Gridid=""/>';
20047      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
20048      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20049      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
20050      put '<Node Id="Tree4" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree4" Event="Run" Pid="15800" Gridid=""/>';
20051      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20052      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree4 : Beginning update before running 
* datetime : 09APR2022:19:32:23 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree4: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree4: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree4: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
20464      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
20465      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
20466      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
20467      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
20468      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
20469      output;
MPRINT(EM_DIAGRAM):   output;
20470      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20471      %let emexceptionString =;
20472      %let EMEXCEPTIONSTRING=;
20473      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20474      * UPDATE: Tree4;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree4;
20475      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20476      %let EM_ACTION = UPDATE;
20477      %let syscc = 0;
20478      %macro main;
20479      
20480        %if %upcase(&EM_ACTION) = CREATE %then %do;
20481          filename temp catalog 'sashelp.emmodl.tree_create.source';
20482          %include temp;
20483          filename temp;
20484      
20485          %em_tree_create;
20486        %end;
20487      
20488         %else
20489         %if %upcase(&EM_ACTION) = TRAIN %then %do;
20490      
20491             filename temp catalog 'sashelp.emmodl.tree_train.source';
20492             %include temp;
20493             filename temp;
20494             %em_tree_train;
20495         %end;
20496      
20497        %else
20498        %if %upcase(&EM_ACTION) = SCORE %then %do;
20499          filename temp catalog 'sashelp.emmodl.tree_score.source';
20500          %include temp;
20501          filename temp;
20502      
20503          %em_tree_score;
20504      
20505        %end;
20506      
20507        %else
20508        %if %upcase(&EM_ACTION) = REPORT %then %do;
20509      
20510             filename temp catalog 'sashelp.emmodl.tree_report.source';
20511             %include temp;
20512             filename temp;
20513      
20514             %em_tree_report;
20515         %end;
20516      
20517        %else
20518        %if %upcase(&EM_ACTION) = OPENINT %then %do;
20519      
20520             filename temp catalog 'sashelp.emmodl.tree_actions.source';
20521             %include temp;
20522             filename temp;
20523             %EM_TREE_OPENTREEVIEWER;
20524      
20525         %end;
20526      
20527        %else
20528        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20529      
20530             filename temp catalog 'sashelp.emmodl.tree_actions.source';
20531             %include temp;
20532             filename temp;
20533             %EM_TREE_CLOSETREEVIEWER;
20534      
20535         %end;
20536      
20537      
20538         %doendm:
20539      %mend main;
20540      
20541      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
20542      
20543      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20544      * End UPDATE: Tree4;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree4;
20545      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

20546      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
20548      %let _HPDMGRIDHOST=;
20549      %let _HPDMGRIDINSTALLLOC=;
20550      %let _HPDMGRIDDATASERVER=;
20551      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree4 : End update 
* datetime : 09APR2022:19:32:24 
* 
*------------------------------------------------------------* 
20552      %em_getactionstatus(emlib =EMWS1, nodeid=Tree4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

20553      %let em_filemodtime=;
20554      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
20555      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
20556      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
20557      where fileref eq "#LN00528";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00528";
20558      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
20559      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00528';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20560      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
20561      %let em_Train = N;
20562      %let em_Score = N;
20563      %let em_Report = N;
20564      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Tree4" has already run. 
Node "Tree4" succeeded. 
20565      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20566      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
20567      put '<Node Id="Tree4" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree4" Event="Complete" Pid="15800" Gridid=""/>';
20568      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
20569      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20570      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
20571      put '<Node Id="Tree3" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree3" Event="Run" Pid="15800" Gridid=""/>';
20572      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20573      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree3 : Beginning update before running 
* datetime : 09APR2022:19:32:24 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
20985      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
20986      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
20987      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
20988      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
20989      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
20990      output;
MPRINT(EM_DIAGRAM):   output;
20991      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20992      %let emexceptionString =;
20993      %let EMEXCEPTIONSTRING=;
20994      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20995      * UPDATE: Tree3;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree3;
20996      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20997      %let EM_ACTION = UPDATE;
20998      %let syscc = 0;
20999      %macro main;
21000      
21001        %if %upcase(&EM_ACTION) = CREATE %then %do;
21002          filename temp catalog 'sashelp.emmodl.tree_create.source';
21003          %include temp;
21004          filename temp;
21005      
21006          %em_tree_create;
21007        %end;
21008      
21009         %else
21010         %if %upcase(&EM_ACTION) = TRAIN %then %do;
21011      
21012             filename temp catalog 'sashelp.emmodl.tree_train.source';
21013             %include temp;
21014             filename temp;
21015             %em_tree_train;
21016         %end;
21017      
21018        %else
21019        %if %upcase(&EM_ACTION) = SCORE %then %do;
21020          filename temp catalog 'sashelp.emmodl.tree_score.source';
21021          %include temp;
21022          filename temp;
21023      
21024          %em_tree_score;
21025      
21026        %end;
21027      
21028        %else
21029        %if %upcase(&EM_ACTION) = REPORT %then %do;
21030      
21031             filename temp catalog 'sashelp.emmodl.tree_report.source';
21032             %include temp;
21033             filename temp;
21034      
21035             %em_tree_report;
21036         %end;
21037      
21038        %else
21039        %if %upcase(&EM_ACTION) = OPENINT %then %do;
21040      
21041             filename temp catalog 'sashelp.emmodl.tree_actions.source';
21042             %include temp;
21043             filename temp;
21044             %EM_TREE_OPENTREEVIEWER;
21045      
21046         %end;
21047      
21048        %else
21049        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
21050      
21051             filename temp catalog 'sashelp.emmodl.tree_actions.source';
21052             %include temp;
21053             filename temp;
21054             %EM_TREE_CLOSETREEVIEWER;
21055      
21056         %end;
21057      
21058      
21059         %doendm:
21060      %mend main;
21061      
21062      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
21063      
21064      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21065      * End UPDATE: Tree3;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree3;
21066      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

21067      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
21069      %let _HPDMGRIDHOST=;
21070      %let _HPDMGRIDINSTALLLOC=;
21071      %let _HPDMGRIDDATASERVER=;
21072      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree3 : End update 
* datetime : 09APR2022:19:32:25 
* 
*------------------------------------------------------------* 
21073      %em_getactionstatus(emlib =EMWS1, nodeid=Tree3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

21074      %let em_filemodtime=;
21075      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
21076      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
21077      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
21078      where fileref eq "#LN00557";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00557";
21079      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
21080      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00557';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21081      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
21082      %let em_Train = N;
21083      %let em_Score = N;
21084      %let em_Report = N;
21085      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Tree3" has already run. 
Node "Tree3" succeeded. 
21086      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
21087      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
21088      put '<Node Id="Tree3" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree3" Event="Complete" Pid="15800" Gridid=""/>';
21089      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
21090      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
21091      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
21092      put '<Node Id="Tree2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree2" Event="Run" Pid="15800" Gridid=""/>';
21093      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21094      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree2 : Beginning update before running 
* datetime : 09APR2022:19:32:25 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
21506      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
21507      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
21508      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
21509      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
21510      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
21511      output;
MPRINT(EM_DIAGRAM):   output;
21512      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21513      %let emexceptionString =;
21514      %let EMEXCEPTIONSTRING=;
21515      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21516      * UPDATE: Tree2;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree2;
21517      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21518      %let EM_ACTION = UPDATE;
21519      %let syscc = 0;
21520      %macro main;
21521      
21522        %if %upcase(&EM_ACTION) = CREATE %then %do;
21523          filename temp catalog 'sashelp.emmodl.tree_create.source';
21524          %include temp;
21525          filename temp;
21526      
21527          %em_tree_create;
21528        %end;
21529      
21530         %else
21531         %if %upcase(&EM_ACTION) = TRAIN %then %do;
21532      
21533             filename temp catalog 'sashelp.emmodl.tree_train.source';
21534             %include temp;
21535             filename temp;
21536             %em_tree_train;
21537         %end;
21538      
21539        %else
21540        %if %upcase(&EM_ACTION) = SCORE %then %do;
21541          filename temp catalog 'sashelp.emmodl.tree_score.source';
21542          %include temp;
21543          filename temp;
21544      
21545          %em_tree_score;
21546      
21547        %end;
21548      
21549        %else
21550        %if %upcase(&EM_ACTION) = REPORT %then %do;
21551      
21552             filename temp catalog 'sashelp.emmodl.tree_report.source';
21553             %include temp;
21554             filename temp;
21555      
21556             %em_tree_report;
21557         %end;
21558      
21559        %else
21560        %if %upcase(&EM_ACTION) = OPENINT %then %do;
21561      
21562             filename temp catalog 'sashelp.emmodl.tree_actions.source';
21563             %include temp;
21564             filename temp;
21565             %EM_TREE_OPENTREEVIEWER;
21566      
21567         %end;
21568      
21569        %else
21570        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
21571      
21572             filename temp catalog 'sashelp.emmodl.tree_actions.source';
21573             %include temp;
21574             filename temp;
21575             %EM_TREE_CLOSETREEVIEWER;
21576      
21577         %end;
21578      
21579      
21580         %doendm:
21581      %mend main;
21582      
21583      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
21584      
21585      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21586      * End UPDATE: Tree2;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree2;
21587      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

21588      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
21590      %let _HPDMGRIDHOST=;
21591      %let _HPDMGRIDINSTALLLOC=;
21592      %let _HPDMGRIDDATASERVER=;
21593      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree2 : End update 
* datetime : 09APR2022:19:32:26 
* 
*------------------------------------------------------------* 
21594      %em_getactionstatus(emlib =EMWS1, nodeid=Tree2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

21595      %let em_filemodtime=;
21596      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
21597      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
21598      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
21599      where fileref eq "#LN00586";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00586";
21600      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
21601      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00586';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21602      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
21603      %let em_Train = N;
21604      %let em_Score = N;
21605      %let em_Report = N;
21606      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Tree2" has already run. 
Node "Tree2" succeeded. 
21607      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
21608      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
21609      put '<Node Id="Tree2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree2" Event="Complete" Pid="15800" Gridid=""/>';
21610      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
21611      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
21612      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
21613      put '<Node Id="Tree" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Run" Pid="15800" Gridid=""/>';
21614      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21615      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree : Beginning update before running 
* datetime : 09APR2022:19:32:26 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
22027      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
22028      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
22029      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
22030      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
22031      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
22032      output;
MPRINT(EM_DIAGRAM):   output;
22033      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22034      %let emexceptionString =;
22035      %let EMEXCEPTIONSTRING=;
22036      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22037      * UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree;
22038      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22039      %let EM_ACTION = UPDATE;
22040      %let syscc = 0;
22041      %macro main;
22042      
22043        %if %upcase(&EM_ACTION) = CREATE %then %do;
22044          filename temp catalog 'sashelp.emmodl.tree_create.source';
22045          %include temp;
22046          filename temp;
22047      
22048          %em_tree_create;
22049        %end;
22050      
22051         %else
22052         %if %upcase(&EM_ACTION) = TRAIN %then %do;
22053      
22054             filename temp catalog 'sashelp.emmodl.tree_train.source';
22055             %include temp;
22056             filename temp;
22057             %em_tree_train;
22058         %end;
22059      
22060        %else
22061        %if %upcase(&EM_ACTION) = SCORE %then %do;
22062          filename temp catalog 'sashelp.emmodl.tree_score.source';
22063          %include temp;
22064          filename temp;
22065      
22066          %em_tree_score;
22067      
22068        %end;
22069      
22070        %else
22071        %if %upcase(&EM_ACTION) = REPORT %then %do;
22072      
22073             filename temp catalog 'sashelp.emmodl.tree_report.source';
22074             %include temp;
22075             filename temp;
22076      
22077             %em_tree_report;
22078         %end;
22079      
22080        %else
22081        %if %upcase(&EM_ACTION) = OPENINT %then %do;
22082      
22083             filename temp catalog 'sashelp.emmodl.tree_actions.source';
22084             %include temp;
22085             filename temp;
22086             %EM_TREE_OPENTREEVIEWER;
22087      
22088         %end;
22089      
22090        %else
22091        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
22092      
22093             filename temp catalog 'sashelp.emmodl.tree_actions.source';
22094             %include temp;
22095             filename temp;
22096             %EM_TREE_CLOSETREEVIEWER;
22097      
22098         %end;
22099      
22100      
22101         %doendm:
22102      %mend main;
22103      
22104      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
22105      
22106      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22107      * End UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree;
22108      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

22109      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Tree\PROPERTIES.xml' encoding="UTF-8" NOBOM;
22111      %let _HPDMGRIDHOST=;
22112      %let _HPDMGRIDINSTALLLOC=;
22113      %let _HPDMGRIDDATASERVER=;
22114      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree : End update 
* datetime : 09APR2022:19:32:27 
* 
*------------------------------------------------------------* 
22115      %em_getactionstatus(emlib =EMWS1, nodeid=Tree);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

22116      %let em_filemodtime=;
22117      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
22118      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
22119      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
22120      where fileref eq "#LN00615";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00615";
22121      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
22122      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00615';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22123      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
22124      %let em_Train = N;
22125      %let em_Score = N;
22126      %let em_Report = N;
22127      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Tree" has already run. 
Node "Tree" succeeded. 
22128      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22129      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
22130      put '<Node Id="Tree" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Complete" Pid="15800" Gridid=""/>';
22131      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "MDLCOMP4" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
22132      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22133      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
22134      put '<Node Id="Boost" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost" Event="Run" Pid="15800" Gridid=""/>';
22135      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22136      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Boost : Beginning update before running 
* datetime : 09APR2022:19:32:27 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Boost_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
22490      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
22491      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
22492      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
22493      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
22494      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
22495      output;
MPRINT(EM_DIAGRAM):   output;
22496      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22497      %let emexceptionString =;
22498      %let EMEXCEPTIONSTRING=;
22499      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22500      * UPDATE: Boost;
MPRINT(EM_DIAGRAM):   * UPDATE: Boost;
22501      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22502      %let EM_ACTION = UPDATE;
22503      %let syscc = 0;
22504      %macro main;
22505      
22506        filename temp catalog 'sashelp.emmodl.boost_macros.source';
22507        %include temp;
22508        filename temp;
22509      
22510        %setProperties;
22511      
22512        %if %upcase(&EM_ACTION) = CREATE %then %do;
22513          filename temp catalog 'sashelp.emmodl.boost_create.source';
22514          %include temp;
22515          filename temp;
22516      
22517          %create;
22518        %end;
22519      
22520         %else
22521         %if %upcase(&EM_ACTION) = TRAIN %then %do;
22522      
22523             filename temp catalog 'sashelp.emmodl.boost_train.source';
22524             %include temp;
22525             filename temp;
22526             %train;
22527         %end;
22528      
22529        %else
22530        %if %upcase(&EM_ACTION) = SCORE %then %do;
22531          filename temp catalog 'sashelp.emmodl.boost_score.source';
22532          %include temp;
22533          filename temp;
22534      
22535          %score;
22536      
22537        %end;
22538      
22539        %else
22540        %if %upcase(&EM_ACTION) = REPORT %then %do;
22541      
22542             filename temp catalog 'sashelp.emmodl.boost_report.source';
22543             %include temp;
22544             filename temp;
22545      
22546             %report;
22547         %end;
22548      
22549         %doendm:
22550      %mend main;
22551      
22552      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
22553     +
22554     +%macro SetProperties;
22555     +
22556     +     /* boost options */
22557     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
22558     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
22559     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
22560     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
22561     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
22562     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
22563     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
22564     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
22565     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
22566     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
22567     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
22568     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
22569     +
22570     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
22571     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
22572     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
22573     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
22574     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
22575     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
22576     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
22577     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
22578     +
22579     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
22580     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
22581     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
22582     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
22583     +
22584     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
22585     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
22586     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
22587     +
22588     +%mend SetProperties;
22589     +
22590     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22591      
22592      *------------------------------------------------------------*;
22593      * End UPDATE: Boost;
22594      *------------------------------------------------------------*;

22595      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Boost\PROPERTIES.xml' encoding="UTF-8" NOBOM;
22597      %let _HPDMGRIDHOST=;
22598      %let _HPDMGRIDINSTALLLOC=;
22599      %let _HPDMGRIDDATASERVER=;
22600      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Boost : End update 
* datetime : 09APR2022:19:32:28 
* 
*------------------------------------------------------------* 
22601      %em_getactionstatus(emlib =EMWS1, nodeid=Boost);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

22602      %let em_filemodtime=;
22603      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
22604      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
22605      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
22606      where fileref eq "#LN00644";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00644";
22607      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
22608      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00644';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22609      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
22610      %let em_Train = N;
22611      %let em_Score = N;
22612      %let em_Report = N;
22613      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Boost" has already run. 
Node "Boost" succeeded. 
22614      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22615      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
22616      put '<Node Id="Boost" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost" Event="Complete" Pid="15800" Gridid=""/>';
22617      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
22618      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22619      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
22620      put '<Node Id="HPDMForest" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest" Event="Run" Pid="15800" Gridid=""/>';
22621      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22622      %let emloopmode =;
*------------------------------------------------------------* 
* 
* HPDMForest : Beginning update before running 
* datetime : 09APR2022:19:32:28 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.HPDMForest_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * HPDMForest: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
22967      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
22968      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
22969      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
22970      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
22971      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
22972      output;
MPRINT(EM_DIAGRAM):   output;
22973      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22974      %let emexceptionString =;
22975      %let EMEXCEPTIONSTRING=;
22976      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22977      * UPDATE: HPDMForest;
MPRINT(EM_DIAGRAM):   * UPDATE: HPDMForest;
22978      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22979      %let EM_ACTION = UPDATE;
22980      %let syscc = 0;
22981      %macro main;
22982      
22983         %if %upcase(&EM_ACTION) = CREATE %then %do;
22984             filename temp catalog 'sashelp.hpdm.hpdmforest_create.source';
22985             %include temp;
22986             filename temp;
22987             %hpdm_Forest_create;
22988         %end;
22989         %else
22990         %if %upcase(&EM_ACTION) = TRAIN %then %do;
22991             filename temp catalog 'sashelp.hpdm.hpdmforest_train.source';
22992             %include temp;
22993             filename temp;
22994             %hpdm_Forest_train;
22995         %end;
22996         %else
22997         %if %upcase(&EM_ACTION) = SCORE %then %do;
22998             filename temp catalog 'sashelp.hpdm.hpdmforest_score.source';
22999             %include temp;
23000             filename temp;
23001             %hpdm_Forest_score;
23002         %end;
23003         %else
23004         %if %upcase(&EM_ACTION) = REPORT %then %do;
23005             filename temp catalog 'sashelp.hpdm.hpdmforest_report.source';
23006             %include temp;
23007             filename temp;
23008             %hpdm_Forest_report;
23009         %end;
23010         %else
23011      
23012      %mend main;
23013      
23014      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
23015      
23016      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23017      * End UPDATE: HPDMForest;
MPRINT(EM_DIAGRAM):   * End UPDATE: HPDMForest;
23018      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

23019      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\HPDMForest\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23021      %let _HPDMGRIDHOST=;
23022      %let _HPDMGRIDINSTALLLOC=;
23023      %let _HPDMGRIDDATASERVER=;
23024      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* HPDMForest : End update 
* datetime : 09APR2022:19:32:29 
* 
*------------------------------------------------------------* 
23025      %em_getactionstatus(emlib =EMWS1, nodeid=HPDMForest);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23026      %let em_filemodtime=;
23027      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
23028      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
23029      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
23030      where fileref eq "#LN00673";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00673";
23031      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
23032      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00673';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

23033      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
23034      %let em_Train = N;
23035      %let em_Score = N;
23036      %let em_Report = N;
23037      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "HPDMForest" has already run. 
Node "HPDMForest" succeeded. 
23038      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23039      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23040      put '<Node Id="HPDMForest" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest" Event="Complete" Pid="15800" Gridid=""/>';
23041      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 62.
      The maximum record length was 62.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "MDLCOMP6" 
Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23042      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23043      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23044      put '<Node Id="HPDMForest2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest2" Event="Run" Pid="15800" Gridid=""/>';
23045      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23046      %let emloopmode =;
*------------------------------------------------------------* 
* 
* HPDMForest2 : Beginning update before running 
* datetime : 09APR2022:19:32:30 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.HPDMForest2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * HPDMForest2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
23391      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
23392      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
23393      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
23394      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
23395      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
23396      output;
MPRINT(EM_DIAGRAM):   output;
23397      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

23398      %let emexceptionString =;
23399      %let EMEXCEPTIONSTRING=;
23400      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23401      * UPDATE: HPDMForest2;
MPRINT(EM_DIAGRAM):   * UPDATE: HPDMForest2;
23402      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23403      %let EM_ACTION = UPDATE;
23404      %let syscc = 0;
23405      %macro main;
23406      
23407         %if %upcase(&EM_ACTION) = CREATE %then %do;
23408             filename temp catalog 'sashelp.hpdm.hpdmforest_create.source';
23409             %include temp;
23410             filename temp;
23411             %hpdm_Forest_create;
23412         %end;
23413         %else
23414         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23415             filename temp catalog 'sashelp.hpdm.hpdmforest_train.source';
23416             %include temp;
23417             filename temp;
23418             %hpdm_Forest_train;
23419         %end;
23420         %else
23421         %if %upcase(&EM_ACTION) = SCORE %then %do;
23422             filename temp catalog 'sashelp.hpdm.hpdmforest_score.source';
23423             %include temp;
23424             filename temp;
23425             %hpdm_Forest_score;
23426         %end;
23427         %else
23428         %if %upcase(&EM_ACTION) = REPORT %then %do;
23429             filename temp catalog 'sashelp.hpdm.hpdmforest_report.source';
23430             %include temp;
23431             filename temp;
23432             %hpdm_Forest_report;
23433         %end;
23434         %else
23435      
23436      %mend main;
23437      
23438      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
23439      
23440      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23441      * End UPDATE: HPDMForest2;
MPRINT(EM_DIAGRAM):   * End UPDATE: HPDMForest2;
23442      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

23443      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\HPDMForest2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23445      %let _HPDMGRIDHOST=;
23446      %let _HPDMGRIDINSTALLLOC=;
23447      %let _HPDMGRIDDATASERVER=;
23448      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* HPDMForest2 : End update 
* datetime : 09APR2022:19:32:30 
* 
*------------------------------------------------------------* 
23449      %em_getactionstatus(emlib =EMWS1, nodeid=HPDMForest2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23450      %let em_filemodtime=;
23451      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
23452      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
23453      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
23454      where fileref eq "#LN00702";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00702";
23455      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
23456      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00702';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23457      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
23458      %let em_Train = N;
23459      %let em_Score = N;
23460      %let em_Report = N;
23461      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "HPDMForest2" has already run. 
Node "HPDMForest2" succeeded. 
23462      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23463      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23464      put '<Node Id="HPDMForest2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPDMForest2" Event="Complete" Pid="15800" Gridid=""/>';
23465      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 63.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23466      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23467      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23468      put '<Node Id="Reg4" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg4" Event="Run" Pid="15800" Gridid=""/>';
23469      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

23470      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Reg4 : Beginning update before running 
* datetime : 09APR2022:19:32:31 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Reg4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Reg4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23490      %let _HPDMGRIDHOST=;
23491      %let _HPDMGRIDINSTALLLOC=;
23492      %let _HPDMGRIDDATASERVER=;
23493      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Reg4 : End update 
* datetime : 09APR2022:19:32:31 
* 
*------------------------------------------------------------* 
23494      %em_getactionstatus(emlib =EMWS1, nodeid=Reg4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23495      %let em_Train = N;
23496      %let em_Score = N;
23497      %let em_Report = N;
23498      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Reg4" has already run. 
Node "Reg4" succeeded. 
23499      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23500      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23501      put '<Node Id="Reg4" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg4" Event="Complete" Pid="15800" Gridid=""/>';
23502      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23503      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23504      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23505      put '<Node Id="Reg3" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg3" Event="Run" Pid="15800" Gridid=""/>';
23506      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23507      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Reg3 : Beginning update before running 
* datetime : 09APR2022:19:32:31 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Reg3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Reg3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23527      %let _HPDMGRIDHOST=;
23528      %let _HPDMGRIDINSTALLLOC=;
23529      %let _HPDMGRIDDATASERVER=;
23530      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Reg3 : End update 
* datetime : 09APR2022:19:32:31 
* 
*------------------------------------------------------------* 
23531      %em_getactionstatus(emlib =EMWS1, nodeid=Reg3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23532      %let em_Train = N;
23533      %let em_Score = N;
23534      %let em_Report = N;
23535      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Reg3" has already run. 
Node "Reg3" succeeded. 
23536      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23537      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23538      put '<Node Id="Reg3" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg3" Event="Complete" Pid="15800" Gridid=""/>';
23539      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23540      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23541      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23542      put '<Node Id="Reg2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg2" Event="Run" Pid="15800" Gridid=""/>';
23543      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23544      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Reg2 : Beginning update before running 
* datetime : 09APR2022:19:32:32 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Reg2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Reg2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23564      %let _HPDMGRIDHOST=;
23565      %let _HPDMGRIDINSTALLLOC=;
23566      %let _HPDMGRIDDATASERVER=;
23567      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Reg2 : End update 
* datetime : 09APR2022:19:32:32 
* 
*------------------------------------------------------------* 
23568      %em_getactionstatus(emlib =EMWS1, nodeid=Reg2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23569      %let em_Train = N;
23570      %let em_Score = N;
23571      %let em_Report = N;
23572      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Reg2" has already run. 
Node "Reg2" succeeded. 
23573      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23574      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23575      put '<Node Id="Reg2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg2" Event="Complete" Pid="15800" Gridid=""/>';
23576      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "MDLCOMP" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23577      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23578      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23579      put '<Node Id="Reg" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg" Event="Run" Pid="15800" Gridid=""/>';
23580      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23581      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Reg : Beginning update before running 
* datetime : 09APR2022:19:32:33 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Reg_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Reg\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23601      %let _HPDMGRIDHOST=;
23602      %let _HPDMGRIDINSTALLLOC=;
23603      %let _HPDMGRIDDATASERVER=;
23604      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Reg : End update 
* datetime : 09APR2022:19:32:33 
* 
*------------------------------------------------------------* 
23605      %em_getactionstatus(emlib =EMWS1, nodeid=Reg);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23606      %let em_Train = N;
23607      %let em_Score = N;
23608      %let em_Report = N;
23609      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Reg" has already run. 
Node "Reg" succeeded. 
23610      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23611      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23612      put '<Node Id="Reg" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg" Event="Complete" Pid="15800" Gridid=""/>';
23613      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "HPNNA" 
Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23614      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23615      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23616      put '<Node Id="MdlComp2" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp2" Event="Run" Pid="15800" Gridid=""/>';
23617      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23618      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp2 : Beginning update before running 
* datetime : 09APR2022:19:32:33 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree4_exportSet EMWS1.Tree3_exportSet EMWS1.Tree2_exportSet EMWS1.Tree_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("TREE_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE4_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE4_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base1DJ78EC as select * from WORK.M1EKSGDC order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp1DJ78EC as select * from WORK.M2WMT9Y4 order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base1DJ78EC compare=work._comp1DJ78EC out=WORK._DIFF2SMMDFI noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23675      %let _HPDMGRIDHOST=;
23676      %let _HPDMGRIDINSTALLLOC=;
23677      %let _HPDMGRIDDATASERVER=;
23678      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp2 : End update 
* datetime : 09APR2022:19:32:33 
* 
*------------------------------------------------------------* 
23679      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23680      %let em_Train = N;
23681      %let em_Score = N;
23682      %let em_Report = N;
23683      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "MdlComp2" has already run. 
Node "MdlComp2" succeeded. 
23684      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23685      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23686      put '<Node Id="MdlComp2" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp2" Event="Complete" Pid="15800" Gridid=""/>';
23687      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 60.
      The maximum record length was 60.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23688      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23689      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23690      put '<Node Id="MdlComp4" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp4" Event="Run" Pid="15800" Gridid=""/>';
23691      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

23692      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp4 : Beginning update before running 
* datetime : 09APR2022:19:32:34 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost4_exportSet EMWS1.Boost3_exportSet EMWS1.Boost2_exportSet EMWS1.Boost_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("BOOST_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST3_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST3_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST3_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST4_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base0S08Y8A as select * from WORK.M3HUKHTF order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp0S08Y8A as select * from WORK.M12_D7VU order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base0S08Y8A compare=work._comp0S08Y8A out=WORK._DIFF1N4698L noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23741      %let _HPDMGRIDHOST=;
23742      %let _HPDMGRIDINSTALLLOC=;
23743      %let _HPDMGRIDDATASERVER=;
23744      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp4 : End update 
* datetime : 09APR2022:19:32:34 
* 
*------------------------------------------------------------* 
23745      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23746      %let em_Train = N;
23747      %let em_Score = N;
23748      %let em_Report = N;
23749      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "MdlComp4" has already run. 
Node "MdlComp4" succeeded. 
23750      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23751      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23752      put '<Node Id="MdlComp4" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp4" Event="Complete" Pid="15800" Gridid=""/>';
23753      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 60.
      The maximum record length was 60.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
23754      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23755      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23756      put '<Node Id="MdlComp6" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp6" Event="Run" Pid="15800" Gridid=""/>';
23757      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23758      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp6 : Beginning update before running 
* datetime : 09APR2022:19:32:35 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp6_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.HPDMForest4_exportSet EMWS1.HPDMForest3_exportSet EMWS1.HPDMForest_exportSet EMWS1.HPDMForest2_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("HPDMFOREST_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST3_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST3_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST3_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST4_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPDMFOREST2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base057HRR_ as select * from WORK.M05_AL2C order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp057HRR_ as select * from WORK.M32M_N4A order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base057HRR_ compare=work._comp057HRR_ out=WORK._DIFF048FQOF noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp6\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23807      %let _HPDMGRIDHOST=;
23808      %let _HPDMGRIDINSTALLLOC=;
23809      %let _HPDMGRIDDATASERVER=;
23810      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp6 : End update 
* datetime : 09APR2022:19:32:35 
* 
*------------------------------------------------------------* 
23811      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp6);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23812      %let em_Train = N;
23813      %let em_Score = N;
23814      %let em_Report = N;
23815      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "MdlComp6" has already run. 
Node "MdlComp6" succeeded. 
23816      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23817      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23818      put '<Node Id="MdlComp6" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp6" Event="Complete" Pid="15800" Gridid=""/>';
23819      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 60.
      The maximum record length was 60.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
23820      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23821      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23822      put '<Node Id="MdlComp" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Run" Pid="15800" Gridid=""/>';
23823      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

23824      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp : Beginning update before running 
* datetime : 09APR2022:19:32:36 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_exportSet EMWS1.Reg3_exportSet EMWS1.Reg2_exportSet EMWS1.Reg_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("REG_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG3_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG3_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG3_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG4_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base1YXODRQ as select * from WORK.M2NCOX8P order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp1YXODRQ as select * from WORK.M1Y2FAC8 order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base1YXODRQ compare=work._comp1YXODRQ out=WORK._DIFF34KVX3D noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp\PROPERTIES.xml' encoding="UTF-8" NOBOM;
23873      %let _HPDMGRIDHOST=;
23874      %let _HPDMGRIDINSTALLLOC=;
23875      %let _HPDMGRIDDATASERVER=;
23876      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp : End update 
* datetime : 09APR2022:19:32:36 
* 
*------------------------------------------------------------* 
23877      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

23878      %let em_Train = N;
23879      %let em_Score = N;
23880      %let em_Report = N;
23881      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "MdlComp" has already run. 
Node "MdlComp" succeeded. 
23882      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23883      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23884      put '<Node Id="MdlComp" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Complete" Pid="15800" Gridid=""/>';
23885      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 59.
      The maximum record length was 59.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP5" 
Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
23886      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
23887      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
23888      put '<Node Id="HPNNA" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPNNA" Event="Run" Pid="15800" Gridid=""/>';
23889      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

23890      %let emloopmode =;
*------------------------------------------------------------* 
* 
* HPNNA : Beginning update before running 
* datetime : 09APR2022:19:32:36 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.HPNNA_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp2_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPNNA: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPNNA: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'CreditCard_ChurnRate';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * HPNNA: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Attrition_Flag;
MPRINT(EM_DECDATA):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   Attrition_Flag="1";
MPRINT(EM_DECDATA):   COUNT=1627;
MPRINT(EM_DECDATA):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Attrition_Flag="0";
MPRINT(EM_DECDATA):   COUNT=8500;
MPRINT(EM_DECDATA):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
24233      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
24234      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
24235      TARGET="Attrition_Flag";
MPRINT(EM_DIAGRAM):   TARGET="Attrition_Flag";
24236      DECDATA="EMWS1.Ids_Attrition_Flag_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Attrition_Flag_DD";
24237      DECMETA="EMWS1.Ids_Attrition_Flag_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Attrition_Flag_DM";
24238      output;
MPRINT(EM_DIAGRAM):   output;
24239      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24240      %let emexceptionString =;
24241      %let EMEXCEPTIONSTRING=;
24242      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24243      * UPDATE: HPNNA;
MPRINT(EM_DIAGRAM):   * UPDATE: HPNNA;
24244      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24245      %let EM_ACTION = UPDATE;
24246      %let syscc = 0;
24247      %macro main;
24248      
24249         %if %upcase(&EM_ACTION) = CREATE %then %do;
24250             filename temp catalog 'sashelp.hpdm.hpdmneural_create.source';
24251             %include temp;
24252             filename temp;
24253             %hpdm_Neural_create;
24254         %end;
24255         %else
24256         %if %upcase(&EM_ACTION) = TRAIN %then %do;
24257             filename temp catalog 'sashelp.hpdm.hpdmneural_train.source';
24258             %include temp;
24259             filename temp;
24260             %hpdm_Neural_train;
24261         %end;
24262         %else
24263         %if %upcase(&EM_ACTION) = REPORT %then %do;
24264             filename temp catalog 'sashelp.hpdm.hpdmneural_report.source';
24265             %include temp;
24266             filename temp;
24267             %hpdm_Neural_report;
24268         %end;
24269         %else
24270            %if %upcase(&EM_ACTION) = OPENTABLE  %then %do;
24271                 filename temp catalog 'sashelp.hpdm.hpdmneural_actions.source';
24272                 %include temp;
24273                 filename temp;
24274                 %hpdm_Neural_OpenTable;
24275         %end;
24276         %else
24277         %if %upcase(&EM_ACTION) = CLOSETABLE  %then %do;
24278                filename temp catalog 'sashelp.hpdm.hpdmneural_actions.source';
24279                 %include temp;
24280                 filename temp;
24281                 %hpdm_Neural_CloseTable ;
24282         %end;
24283      
24284      %mend main;
24285      
24286      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
24287      
24288      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24289      * End UPDATE: HPNNA;
MPRINT(EM_DIAGRAM):   * End UPDATE: HPNNA;
24290      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

24291      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\HPNNA\PROPERTIES.xml' encoding="UTF-8" NOBOM;
24293      %let _HPDMGRIDHOST=;
24294      %let _HPDMGRIDINSTALLLOC=;
24295      %let _HPDMGRIDDATASERVER=;
24296      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* HPNNA : End update 
* datetime : 09APR2022:19:32:37 
* 
*------------------------------------------------------------* 
24297      %em_getactionstatus(emlib =EMWS1, nodeid=HPNNA);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

24298      %let em_filemodtime=;
24299      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
24300      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
24301      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
24302      where fileref eq "#LN00907";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00907";
24303      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
24304      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00907';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24305      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
24306      %let em_filemodtime=;
24307      data _null_;
MPRINT(EM_GETACTIONSTATUS):     data _null_;
24308      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
24309      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
24310      where fileref eq "#LN00908";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00908";
24311      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
24312      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00908';
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

24313      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
24314      %let em_Train = N;
24315      %let em_Score = N;
24316      %let em_Report = N;
24317      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "HPNNA" has already run. 
Node "HPNNA" succeeded. 
24318      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24319      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24320      put '<Node Id="HPNNA" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="HPNNA" Event="Complete" Pid="15800" Gridid=""/>';
24321      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "CNTRL" 
Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
24322      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24323      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24324      put '<Node Id="MdlComp5" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp5" Event="Run" Pid="15800" Gridid=""/>';
24325      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24326      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp5 : Beginning update before running 
* datetime : 09APR2022:19:32:37 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp5_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural4_exportSet EMWS1.AutoNeural2_exportSet EMWS1.AutoNeural_exportSet EMWS1.HPNNA_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("AUTONEURAL_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("AUTONEURAL4_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPNNA_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPNNA_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("HPNNA_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base2VI9Q2Q as select * from WORK.M2R3FPC0 order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp2VI9Q2Q as select * from WORK.M2ABNGPG order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base2VI9Q2Q compare=work._comp2VI9Q2Q out=WORK._DIFF12TF_YM noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp5\PROPERTIES.xml' encoding="UTF-8" NOBOM;
24375      %let _HPDMGRIDHOST=;
24376      %let _HPDMGRIDINSTALLLOC=;
24377      %let _HPDMGRIDDATASERVER=;
24378      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp5 : End update 
* datetime : 09APR2022:19:32:38 
* 
*------------------------------------------------------------* 
24379      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp5);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

24380      %let em_Train = N;
24381      %let em_Score = N;
24382      %let em_Report = N;
24383      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "MdlComp5" has already run. 
Node "MdlComp5" succeeded. 
24384      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24385      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24386      put '<Node Id="MdlComp5" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp5" Event="Complete" Pid="15800" Gridid=""/>';
24387      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 60.
      The maximum record length was 60.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "ENSMBL" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
Node "CNTRL" succeeded. 
24388      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24389      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24390      put '<Node Id="CNTRL" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="CNTRL" Event="Complete" Pid="15800" Gridid=""/>';
24391      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
24392      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24393      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24394      put '<Node Id="Ensmbl" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ensmbl" Event="Run" Pid="15800" Gridid=""/>';
24395      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24396      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ensmbl : Beginning update before running 
* datetime : 09APR2022:19:32:39 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Ensmbl_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp4_exportSet EMWS1.MdlComp2_exportSet EMWS1.MdlComp5_exportSet EMWS1.MdlComp_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("MDLCOMP_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base187QOHQ as select * from WORK.M3FIE9RR order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp187QOHQ as select * from WORK.M1CGX2X5 order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base187QOHQ compare=work._comp187QOHQ out=WORK._DIFF04F2QI1 noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\Ensmbl\PROPERTIES.xml' encoding="UTF-8" NOBOM;
24467      %let _HPDMGRIDHOST=;
24468      %let _HPDMGRIDINSTALLLOC=;
24469      %let _HPDMGRIDDATASERVER=;
24470      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Ensmbl : End update 
* datetime : 09APR2022:19:32:39 
* 
*------------------------------------------------------------* 
24471      %em_getactionstatus(emlib =EMWS1, nodeid=Ensmbl);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

24472      %let em_Train = N;
24473      %let em_Score = N;
24474      %let em_Report = N;
24475      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Ensmbl" has already run. 
Node "Ensmbl" succeeded. 
24476      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24477      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24478      put '<Node Id="Ensmbl" Event="Complete" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ensmbl" Event="Complete" Pid="15800" Gridid=""/>';
24479      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_readyNode_note 
24480      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24481      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
24482      put '<Node Id="MdlComp3" Event="Run" Pid="15800" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp3" Event="Run" Pid="15800" Gridid=""/>';
24483      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-IC1MEGN,
      Local Host IP addr=fe80::34c3:408d:d52b:ebbf%9,
      Peer Hostname Name=DESKTOP-IC1MEGN,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=49534,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24484      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp3 : Beginning update before running 
* datetime : 09APR2022:19:32:39 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp6_exportSet EMWS1.MdlComp4_exportSet EMWS1.MdlComp2_exportSet EMWS1.MdlComp5_exportSet EMWS1.MdlComp_exportSet EMWS1.Ensmbl_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("MDLCOMP_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP5_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP4_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP2_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("ENSMBL_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("ENSMBL_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("ENSMBL_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP6_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP6_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP6_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP6_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP6_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("MDLCOMP6_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base1140ZX0 as select * from WORK.M3P6GBWY order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp1140ZX0 as select * from WORK.M1DVPCTQ order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base1140ZX0 compare=work._comp1140ZX0 out=WORK._DIFF3UH2VSP noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
24575      %let _HPDMGRIDHOST=;
24576      %let _HPDMGRIDINSTALLLOC=;
24577      %let _HPDMGRIDDATASERVER=;
24578      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp3 : End update 
* datetime : 09APR2022:19:32:40 
* 
*------------------------------------------------------------* 
24579      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

24580      %let em_Train = Y;
24581      %let em_Score = N;
24582      %let em_Report = N;
24583      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

24584      %let emloopmode =;
24585      %let emloopnumber =0;
24586      %let emloopId =MdlComp3;
*------------------------------------------------------------* 
* 
* MdlComp3 : Running 
* datetime : 09APR2022:19:32:40 
* 
*------------------------------------------------------------* 
24587      %let SYSCC =0;
24588      %let EMGROUPMODE =;
24589      %let EMGROUPID =;
MPRINT(EM_DIAGRAM):      filename temp catalog 'sashelp.emutil.em_vardist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_classdist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checksetinit.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checkerror.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odsliston.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odslistoff.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_getvarname.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    filename L0WV88MI "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\MdlComp3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto log=L0WV88MI new;
MPRINT(EM_DIAGRAM):   run;
