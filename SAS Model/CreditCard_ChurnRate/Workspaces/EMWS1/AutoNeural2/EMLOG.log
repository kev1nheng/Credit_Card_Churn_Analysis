*------------------------------------------------------------*
User:                Kevin
Date:                April 09, 2022
Time:                15:18:32
Site:                70135990
Platform:            X64_10HOME
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:14:32" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                April 09, 2022
Time:                15:14:32
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1FSKU86
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMTRAIN.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1FSKU86 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMLOG.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:14:32" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Kevin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70135990";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMTRAIN.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMSCORE.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMREPORT.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMOUTPUT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:14:32" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Kevin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMTRAIN.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMSCORE.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMREPORT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMRUNSTATUS.xml'
encoding="UTF-8" NOBOM;
390008     proc freq data=EMWS1.AutoNeural2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.AutoNeural2_VariableSet noprint;
390009     table ROLE*LEVEL/out=WORK.AutoNeural2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural2META;
390010     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.AUTONEURAL2_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL2META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
390011     proc print data=WORK.AutoNeural2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural2META label noobs;
390012     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
390013     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
390013   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
390013   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
390014     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
390015     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
390016     run;
 
NOTE: There were 3 observations read from the data set WORK.AUTONEURAL2META.
NOTE: The PROCEDURE PRINT printed page 224.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
390017     title10;
MPRINT(EM_DIAGRAM):   title10;
390018     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN EMWS1 Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN EMWS1 Part2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Part2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class Attrition_Flag(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="Attrition_Flag";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=Attrition_Flag));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="Attrition_Flag";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_Attrition_Flag_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by Attrition_Flag;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by Attrition_Flag;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
390047     data WORK.AutoNeural2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
390048     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
390049     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
390049   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
390049   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
390050        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
390050   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
390050   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
390051     set EMWS1.IDS_ATTRITION_FLAG_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.IDS_ATTRITION_FLAG_DM( where=(_TYPE_="TARGET"));
390052     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
390053     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
390054     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
390055     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
390056     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
390057     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
390058     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
390059     end;
MPRINT(EM_DIAGRAM):   end;
390060     output;
MPRINT(EM_DIAGRAM):   output;
390061     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
390062     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
390063     proc print data=WORK.AutoNeural2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural2_EVENT noobs label;
390064     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
390065     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
390066     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
390067     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL2_EVENT.
NOTE: The PROCEDURE PRINT printed page 225.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
390068     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "Attrition_Flag"."
390069     proc print data = EMWS1.Ids_Attrition_Flag_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Ids_Attrition_Flag_DM noobs label;
390070     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
390071     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
390072     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
390072   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
390072   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
390073     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
390074     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
390075     run;
 
NOTE: There were 7 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 226.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
390076     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M25BYTBH;
MPRINT(EM_DIAGRAM):   set WORK.M25BYTBH;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
390085     data WORK.M25BYTBH;
MPRINT(EM_DIAGRAM):    data WORK.M25BYTBH;
390086     set WORK.M25BYTBH end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M25BYTBH end=eof;
390087     output;
MPRINT(EM_DIAGRAM):   output;
390088     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
390089     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
390090     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
390091     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
390092     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
390093     output;
MPRINT(EM_DIAGRAM):   output;
390094     end;
MPRINT(EM_DIAGRAM):   end;
390095     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.M25BYTBH.
NOTE: The data set WORK.M25BYTBH has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DD.
NOTE: The data set WORK.ATTRITION_FLAG has 2 observations and 7 variables.
NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DD.
NOTE: The data set WORK.ATTRITION_FLAG has 2 observations and 7 variables.
390096     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
390097     * AutoNeural2: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Create decision matrix;
390098     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
390099     data WORK.Attrition_Flag;
MPRINT(EM_DIAGRAM):   data WORK.Attrition_Flag;
390100       length   Attrition_Flag                   $  32
390101                COUNT                                8
390102                DATAPRIOR                            8
390103                TRAINPRIOR                           8
390104                DECPRIOR                             8
390105                DECISION1                            8
390106                DECISION2                            8
390107                ;
MPRINT(EM_DIAGRAM):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8
DECISION1 8 DECISION2 8 ;
390108
390109       label    COUNT="Level Counts"
390110                DATAPRIOR="Data Proportions"
390111                TRAINPRIOR="Training Proportions"
390112                DECPRIOR="Decision Priors"
390113                DECISION1="1"
390114                DECISION2="0"
390115                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
390116       format   COUNT 10.
390117                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
390118     Attrition_Flag="1"; COUNT=1627; DATAPRIOR=0.16065962279055;
390118   ! TRAINPRIOR=0.16065962279055; DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   Attrition_Flag="1";
MPRINT(EM_DIAGRAM):   COUNT=1627;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
390119     output;
MPRINT(EM_DIAGRAM):   output;
390120     Attrition_Flag="0"; COUNT=8500; DATAPRIOR=0.83934037720944;
390120   ! TRAINPRIOR=0.83934037720944; DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   Attrition_Flag="0";
MPRINT(EM_DIAGRAM):   COUNT=8500;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
390121     output;
MPRINT(EM_DIAGRAM):   output;
390122     ;
MPRINT(EM_DIAGRAM):   ;
390123     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ATTRITION_FLAG has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390124     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
390125     modify Attrition_Flag(type=PROFIT label=Attrition_Flag);
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
390126     label DECISION1= '1';
390127     label DECISION2= '0';
390128     run;
 
NOTE: MODIFY was successful for WORK.ATTRITION_FLAG.DATA.
390129     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
390130     data EM_AutoNeural2;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural2;
390131     set EMWS1.Part2_TRAIN(keep=
390132     Attrition_Flag G_Contacts_Count_12_mon G_Customer_Age G_Months_Inactive_12_mon
390133     G_Months_on_book G_Total_Relationship_Count G_Total_Trans_Ct
390134     RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
390135     RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
390136     RANGE_Total_Revolving_Bal );
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN(keep= Attrition_Flag G_Contacts_Count_12_mon
G_Customer_Age G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1 RANGE_Total_Revolving_Bal );
390137     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390138     *------------------------------------------------------------* ;
390139     * AutoNeural2: DMDBClass Macro ;
390140     *------------------------------------------------------------* ;
390141     %macro DMDBClass;
390142         Attrition_Flag(DESC) G_Contacts_Count_12_mon(ASC) G_Customer_Age(ASC)
390143        G_Months_Inactive_12_mon(ASC) G_Months_on_book(ASC)
390144        G_Total_Relationship_Count(ASC) G_Total_Trans_Ct(ASC)
390145     %mend DMDBClass;
390146     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390147     * AutoNeural2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural2: DMDBVar Macro ;
390148     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390149     %macro DMDBVar;
390150         RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
390151        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
390152        RANGE_Total_Revolving_Bal
390153     %mend DMDBVar;
390154     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
390155     * AutoNeural2: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Create DMDB;
390156     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
390157     proc dmdb batch data=WORK.EM_AutoNeural2
390158     dmdbcat=WORK.AutoNeural2_DMDB
390159     maxlevel = 513
390160     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
390161     class %DMDBClass;
MPRINT(DMDBCLASS):   Attrition_Flag(DESC) G_Contacts_Count_12_mon(ASC) G_Customer_Age(ASC)
G_Months_Inactive_12_mon(ASC) G_Months_on_book(ASC) G_Total_Relationship_Count(ASC)
G_Total_Trans_Ct(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
390162     var %DMDBVar;
MPRINT(DMDBVAR):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1 RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):  ;
390163     target
390164     Attrition_Flag
390165     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag ;
390166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 7088   Memory used = 511K.
NOTE: There were 7088 observations read from the data set WORK.EM_AUTONEURAL2.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
390167     quit;
390168     *--- end code ---*;
 
390169     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
390170     * AutoNeural2: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Interval Inputs Macro ;
390171     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390172     %macro INTINPUTS;
390173         RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
390174        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
390175        RANGE_Total_Revolving_Bal
390176     %mend INTINPUTS;
390177     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390178     * AutoNeural2: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Binary Inputs Macro ;
390179     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390180     %macro BININPUTS;
390181
390182     %mend BININPUTS;
390183     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390184     * AutoNeural2: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Nominal Inputs Macro ;
390185     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390186     %macro NOMINPUTS;
390187         G_Contacts_Count_12_mon G_Customer_Age G_Months_Inactive_12_mon
390188        G_Months_on_book G_Total_Relationship_Count G_Total_Trans_Ct
390189     %mend NOMINPUTS;
390190     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390191     * AutoNeural2: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Ordinal Inputs Macro ;
390192     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
390193     %macro ORDINPUTS;
390194
390195     %mend ORDINPUTS;
390196     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
390197     ;
MPRINT(EM_DIAGRAM):   ;
390198     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
390199     options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
390200     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
390201     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
390202     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
390203     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390204     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
390204   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
390205     *;
 
390206     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390207     * Autoneural: search / BLOCK LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / BLOCK LAYERS;
390208     ;
MPRINT(EM_DIAGRAM):   ;
390209     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390210     *;
MPRINT(EM_DIAGRAM):   *;
 
390211     *;
MPRINT(EM_DIAGRAM):    *;
390212     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390213     validdata=EMWS1.Part2_VALIDATE
390214     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390215     *;
MPRINT(EM_DIAGRAM):   *;
390216     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390217     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390218     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390219     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390220     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390221     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390222     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390223     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
390224     ;
MPRINT(EM_DIAGRAM):   ;
390225     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390226     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
390227     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
390228     *;
MPRINT(EM_DIAGRAM):   *;
390229     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390230     *;
MPRINT(EM_DIAGRAM):   *;
390231     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390232     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390232   ! Search # 1 BLOCK LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=20 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 58 observations and 56 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390233     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390234     tech = Default;
390235     ;
390236     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.07 seconds
      cpu time            1.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390237     *;
390238     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390239     var _iter_ _aic_ _averr_ _misc_
390240     _vaverr_ _vmisc_
390241     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 227.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390243     *------------------------------------------------------------*;
390244     * Extract best iteration;
390245     ;
390246     *------------------------------------------------------------*;
390247     %global _iter;
390248     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
390249     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
390250     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
390251     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
390252     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
390253     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
390254     end;
MPRINT(EM_DIAGRAM):   end;
390255     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390256     *;
 
390257     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
390258     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
390259     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
390260     output;
MPRINT(EM_DIAGRAM):   output;
390261     stop;
MPRINT(EM_DIAGRAM):   stop;
390262     end;
MPRINT(EM_DIAGRAM):   end;
390263     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390264     *;
390265     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390266     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
390267     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
390268     output;
MPRINT(EM_DIAGRAM):   output;
390269     stop;
MPRINT(EM_DIAGRAM):   stop;
390270     end;
MPRINT(EM_DIAGRAM):   end;
390271     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390272     *;
MPRINT(EM_DIAGRAM):    *;
390273     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390274     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
390274   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
390275     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
390276     var _iter_ _aic_ _averr_ _misc_
390277     _vaverr_ _vmisc_
390278     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390279     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 228.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390280     title9;
MPRINT(EM_DIAGRAM):   title9;
390281     title10;
MPRINT(EM_DIAGRAM):   title10;
390282     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
390283     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390284     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
390285     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
390285   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
390286     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
390286   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
390287     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
390287   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
390288     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
390288   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
390289     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
390290     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
390291     _step_ = 'BLOCK LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'BLOCK LAYERS 1';
390292     set
390293     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
390294     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
390295     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
390296     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390297     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390298     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390300     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390301     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390302     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390303     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390304     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
390305     ;
MPRINT(EM_DIAGRAM):   ;
390306     data WORK.SAVEDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3MQB3H7;
390307     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390308     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3MQB3H7 has 1 observations and 56
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390309     data EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_BESTDS;
390310     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390311     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_BESTDS has 1 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390312     data WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3MQB3H7;
390313     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390314     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3MQB3H7 has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390315     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
390316     ;
MPRINT(EM_DIAGRAM):   ;
390317     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390318     set EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY;
390319     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
390320     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
390321     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390322     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390323     ;
MPRINT(EM_DIAGRAM):   ;
390324     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390325     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390326     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390327     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
390328     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
390329     _step_ = "BLOCK LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 1";
390330     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
390331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390332     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390333     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390335     *;
MPRINT(EM_DIAGRAM):    *;
390336     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390337     validdata=EMWS1.Part2_VALIDATE
390338     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390339     *;
MPRINT(EM_DIAGRAM):   *;
390340     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390341     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390342     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390343     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390344     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390345     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390346     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390347     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
390348     ;
MPRINT(EM_DIAGRAM):   ;
390349     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390350     Hidden 8 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=TANH;
390351     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
390352     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
390353     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
390354     *;
MPRINT(EM_DIAGRAM):   *;
390355     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390356     *;
MPRINT(EM_DIAGRAM):   *;
390357     initial
390358     ;
MPRINT(EM_DIAGRAM):   initial ;
390359     *;
MPRINT(EM_DIAGRAM):   *;
390360     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390361     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
390361   ! Search # 1 BLOCK LAYERS trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 2 : TANH :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 352 variables.
MPRINT(EM_DIAGRAM):   *;
390362     prelim 32 outest=_anpre pretime=30 preiter=10
390363     tech = Default
390364     ;
390365     *;
390366     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390367     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390367   ! Search # 1 BLOCK LAYERS trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 2 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 352 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390368     train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390369     tech = Default;
390370     ;
390371     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 229.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           25.38 seconds
      cpu time            25.09 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390372     *;
390373     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390374     var _iter_ _aic_ _averr_ _misc_
390375     _vaverr_ _vmisc_
390376     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 230.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390378     *------------------------------------------------------------*;
390379     * Extract best iteration;
390380     ;
390381     *------------------------------------------------------------*;
390382     %global _iter;
390383     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
390384     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
390385     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
390386     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
390387     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
390388     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
390389     end;
MPRINT(EM_DIAGRAM):   end;
390390     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390391     *;
 
390392     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
390393     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
390394     if _ITER_ eq 19 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 19 then do;
390395     output;
MPRINT(EM_DIAGRAM):   output;
390396     stop;
MPRINT(EM_DIAGRAM):   stop;
390397     end;
MPRINT(EM_DIAGRAM):   end;
390398     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 352 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390399     *;
390400     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390401     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
390402     if _ITER_ eq 19 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 19 and _NAME_ eq "OVERALL" then do;
390403     output;
MPRINT(EM_DIAGRAM):   output;
390404     stop;
MPRINT(EM_DIAGRAM):   stop;
390405     end;
MPRINT(EM_DIAGRAM):   end;
390406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390407     *;
MPRINT(EM_DIAGRAM):    *;
390408     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390409     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
390409   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
390410     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
390411     var _iter_ _aic_ _averr_ _misc_
390412     _vaverr_ _vmisc_
390413     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390414     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 231.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390415     title9;
MPRINT(EM_DIAGRAM):   title9;
390416     title10;
MPRINT(EM_DIAGRAM):   title10;
390417     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390418     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390419     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390420     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390421     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390422     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390423     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390424     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390425     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
390426     ;
MPRINT(EM_DIAGRAM):   ;
390427     data WORK.SAVEDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3MQB3H7;
390428     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390429     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3MQB3H7 has 1 observations and 352
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390430     data EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_BESTDS;
390431     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_BESTDS has 1 observations and 352
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390433     data WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3MQB3H7;
390434     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3MQB3H7 has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390436     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390437     ;
MPRINT(EM_DIAGRAM):   ;
390438     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390439     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390440     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390441     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
390442     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
390443     _step_ = "BLOCK LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 1";
390444     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
390445     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390446     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390447     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390448     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
390449     *;
MPRINT(EM_DIAGRAM):    *;
390450     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390451     validdata=EMWS1.Part2_VALIDATE
390452     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390453     *;
MPRINT(EM_DIAGRAM):   *;
390454     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390455     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390456     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390457     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390458     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390459     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390460     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390461     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
390462     ;
MPRINT(EM_DIAGRAM):   ;
390463     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390464     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
390465     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
390466     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
390467     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
390468     *;
MPRINT(EM_DIAGRAM):   *;
390469     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390470     *;
MPRINT(EM_DIAGRAM):   *;
390471     initial
390472     ;
MPRINT(EM_DIAGRAM):   initial ;
390473     *;
MPRINT(EM_DIAGRAM):   *;
390474     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390475     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
390475   ! Search # 1 BLOCK LAYERS trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 3 : NORMAL :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 352 variables.
MPRINT(EM_DIAGRAM):   *;
390476     prelim 32 outest=_anpre pretime=30 preiter=10
390477     tech = Default
390478     ;
390479     *;
390480     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390481     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390481   ! Search # 1 BLOCK LAYERS trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 3 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=893
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 352 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390482     train estiter=1 outest=_anest outfit=_anfit maxtime=893 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390483     tech = Default;
390484     ;
390485     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 232.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           25.47 seconds
      cpu time            25.18 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390486     *;
390487     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390488     var _iter_ _aic_ _averr_ _misc_
390489     _vaverr_ _vmisc_
390490     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 233.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390492     *------------------------------------------------------------*;
390493     * Extract best iteration;
390494     ;
390495     *------------------------------------------------------------*;
390496     %global _iter;
390497     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
390498     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
390499     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
390500     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
390501     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
390502     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
390503     end;
MPRINT(EM_DIAGRAM):   end;
390504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390505     *;
 
390506     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
390507     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
390508     if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
390509     output;
MPRINT(EM_DIAGRAM):   output;
390510     stop;
MPRINT(EM_DIAGRAM):   stop;
390511     end;
MPRINT(EM_DIAGRAM):   end;
390512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 352 variables.
NOTE: DATA statement used (Total process time):
The SAS System
 
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390513     *;
390514     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390515     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
390516     if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
390517     output;
MPRINT(EM_DIAGRAM):   output;
390518     stop;
MPRINT(EM_DIAGRAM):   stop;
390519     end;
MPRINT(EM_DIAGRAM):   end;
390520     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390521     *;
MPRINT(EM_DIAGRAM):    *;
390522     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390523     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
390523   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
390524     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
390525     var _iter_ _aic_ _averr_ _misc_
390526     _vaverr_ _vmisc_
390527     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390528     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 234.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390529     title9;
MPRINT(EM_DIAGRAM):   title9;
390530     title10;
MPRINT(EM_DIAGRAM):   title10;
390531     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390532     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390533     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390535     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390536     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390537     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390539     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
390540     ;
MPRINT(EM_DIAGRAM):   ;
390541     data WORK.SAVEDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3MQB3H7;
390542     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3MQB3H7 has 1 observations and 352
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390544     data EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_BESTDS;
390545     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_BESTDS has 1 observations and 352
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390547     data WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3MQB3H7;
390548     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3MQB3H7 has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390550     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390551     ;
MPRINT(EM_DIAGRAM):   ;
390552     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390553     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390554     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390555     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
390556     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
390557     _step_ = "BLOCK LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 1";
390558     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
390559     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390560     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390561     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390563     *;
MPRINT(EM_DIAGRAM):    *;
390564     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390565     validdata=EMWS1.Part2_VALIDATE
390566     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390567     *;
MPRINT(EM_DIAGRAM):   *;
390568     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390569     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390570     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390571     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390572     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390573     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390574     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390575     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
390576     ;
MPRINT(EM_DIAGRAM):   ;
390577     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390578     Hidden 8 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=SINE;
390579     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
390580     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
390581     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
390582     *;
MPRINT(EM_DIAGRAM):   *;
390583     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390584     *;
MPRINT(EM_DIAGRAM):   *;
390585     initial
390586     ;
MPRINT(EM_DIAGRAM):   initial ;
390587     *;
MPRINT(EM_DIAGRAM):   *;
390588     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390589     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
390589   ! Search # 1 BLOCK LAYERS trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 4 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 352 variables.
MPRINT(EM_DIAGRAM):   *;
390590     prelim 32 outest=_anpre pretime=30 preiter=10
390591     tech = Default
390592     ;
390593     *;
390594     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390595     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390595   ! Search # 1 BLOCK LAYERS trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 BLOCK LAYERS trial # 4 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=886
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 352 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390596     train estiter=1 outest=_anest outfit=_anfit maxtime=886 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390597     tech = Default;
390598     ;
390599     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 235.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           23.50 seconds
      cpu time            23.15 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390600     *;
390601     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390602     var _iter_ _aic_ _averr_ _misc_
390603     _vaverr_ _vmisc_
390604     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390605     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 236.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390606     *------------------------------------------------------------*;
390607     * Extract best iteration;
390608     ;
390609     *------------------------------------------------------------*;
390610     %global _iter;
390611     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
390612     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
390613     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
390614     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
390615     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
390616     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
390617     end;
MPRINT(EM_DIAGRAM):   end;
390618     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390619     *;
 
390620     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
390621     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
390622     if _ITER_ eq 13 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 then do;
390623     output;
MPRINT(EM_DIAGRAM):   output;
390624     stop;
MPRINT(EM_DIAGRAM):   stop;
390625     end;
MPRINT(EM_DIAGRAM):   end;
390626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 352 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390627     *;
390628     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390629     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
390630     if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
390631     output;
MPRINT(EM_DIAGRAM):   output;
390632     stop;
MPRINT(EM_DIAGRAM):   stop;
390633     end;
MPRINT(EM_DIAGRAM):   end;
390634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390635     *;
MPRINT(EM_DIAGRAM):    *;
390636     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390637     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
390637   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
390638     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
390639     var _iter_ _aic_ _averr_ _misc_
390640     _vaverr_ _vmisc_
390641     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390642     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 237.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390643     title9;
MPRINT(EM_DIAGRAM):   title9;
390644     title10;
MPRINT(EM_DIAGRAM):   title10;
390645     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390646     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390647     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390649     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390650     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390651     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390652     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390653     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390654     ;
MPRINT(EM_DIAGRAM):   ;
390655     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390656     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390657     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390658     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
390659     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
390660     _step_ = "BLOCK LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 1";
390661     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
390662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390663     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390664     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390666     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
390667     ;
MPRINT(EM_DIAGRAM):   ;
390668     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
390669     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
390670     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 352 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390671     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390672     set WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3MQB3H7;
390673     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3MQB3H7.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390674     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390675     ;
MPRINT(EM_DIAGRAM):   ;
390676     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390677     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390678     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390679     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
390680     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
390681     _step_ = "BLOCK LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 1";
390682     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
390683     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390684     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390685     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390686     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390687     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390688     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390689     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390690     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390691     *;
MPRINT(EM_DIAGRAM):    *;
390692     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390693     validdata=EMWS1.Part2_VALIDATE
390694     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390695     *;
MPRINT(EM_DIAGRAM):   *;
390696     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390697     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390698     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390699     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390700     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390701     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390702     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390703     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
390704     ;
MPRINT(EM_DIAGRAM):   ;
390705     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390706     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
390707     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
390708     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390709     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
390710     ;
MPRINT(EM_DIAGRAM):   ;
390711     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390712     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
390713     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
390714     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
390715     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
390716     *;
MPRINT(EM_DIAGRAM):   *;
390717     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390718     *;
MPRINT(EM_DIAGRAM):   *;
390719     initial
390720     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 352 variables.
390721     ;
MPRINT(EM_DIAGRAM):   ;
390722     *;
MPRINT(EM_DIAGRAM):   *;
390723     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390724     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
390724   ! Search # 2 BLOCK LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 1 : DIRECT :
Prelim";
390725     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 392 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 352 variables.
MPRINT(EM_DIAGRAM):   *;
390726     tech = Default
390727     inest = EMWS1.AutoNeural2_ESTDS bylabel
390728     ;
390729     *;
390730     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390731     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390731   ! Search # 2 BLOCK LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=880
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 392 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390732     train estiter=1 outest=_anest outfit=_anfit maxtime=880 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390733     tech = Default;
390734     ;
390735     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 238.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.31 seconds
      cpu time            2.29 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390736     *;
390737     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390738     var _iter_ _aic_ _averr_ _misc_
390739     _vaverr_ _vmisc_
390740     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390741     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 239.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390742     *------------------------------------------------------------*;
390743     * Extract best iteration;
390744     ;
390745     *------------------------------------------------------------*;
390746     %global _iter;
390747     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
390748     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
390749     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
390750     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
390751     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
390752     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
390753     end;
MPRINT(EM_DIAGRAM):   end;
390754     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390755     *;
 
390756     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
390757     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
390758     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
390759     output;
MPRINT(EM_DIAGRAM):   output;
390760     stop;
MPRINT(EM_DIAGRAM):   stop;
390761     end;
MPRINT(EM_DIAGRAM):   end;
390762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 392 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390763     *;
390764     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390765     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
390766     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
390767     output;
MPRINT(EM_DIAGRAM):   output;
390768     stop;
MPRINT(EM_DIAGRAM):   stop;
390769     end;
MPRINT(EM_DIAGRAM):   end;
390770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390771     *;
MPRINT(EM_DIAGRAM):    *;
390772     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390773     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
390773   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
390774     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
390775     var _iter_ _aic_ _averr_ _misc_
390776     _vaverr_ _vmisc_
390777     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 240.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390779     title9;
MPRINT(EM_DIAGRAM):   title9;
390780     title10;
MPRINT(EM_DIAGRAM):   title10;
390781     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390782     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390783     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390785     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390786     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390787     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390788     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390789     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
390790     ;
MPRINT(EM_DIAGRAM):   ;
390791     data WORK.SAVEDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3MQB3H7;
390792     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3MQB3H7 has 1 observations and 392
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390794     data EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_BESTDS;
390795     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390796     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_BESTDS has 1 observations and 392
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390797     data WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3MQB3H7;
390798     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3MQB3H7 has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390800     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390801     ;
MPRINT(EM_DIAGRAM):   ;
390802     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390803     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390804     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390805     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
390806     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
390807     _step_ = "BLOCK LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 2";
390808     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
390809     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390810     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390811     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390812     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390813     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
390814     ;
MPRINT(EM_DIAGRAM):   ;
390815     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
390816     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
390817     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 392 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390818     *;
MPRINT(EM_DIAGRAM):    *;
390819     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390820     validdata=EMWS1.Part2_VALIDATE
390821     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390822     *;
MPRINT(EM_DIAGRAM):   *;
390823     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390824     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390825     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390826     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390827     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390828     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390829     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390830     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
390831     ;
MPRINT(EM_DIAGRAM):   ;
390832     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390833     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
390834     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
390835     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
390836     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390837     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
390838     ;
MPRINT(EM_DIAGRAM):   ;
390839     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390840     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
390841     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
390842     connect H2x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H2x1_ Attrition_Flag;
390843     *;
MPRINT(EM_DIAGRAM):   *;
390844     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390845     *;
MPRINT(EM_DIAGRAM):   *;
390846     initial
390847     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 392 variables.
390848     ;
MPRINT(EM_DIAGRAM):   ;
390849     *;
MPRINT(EM_DIAGRAM):   *;
390850     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390851     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
390851   ! Search # 2 BLOCK LAYERS trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 2 : TANH :
Prelim";
390852     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 424 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 392 variables.
MPRINT(EM_DIAGRAM):   *;
390853     tech = Default
390854     inest = EMWS1.AutoNeural2_ESTDS bylabel
390855     ;
390856     *;
390857     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390858     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390858   ! Search # 2 BLOCK LAYERS trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 2 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=880
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 424 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390859     train estiter=1 outest=_anest outfit=_anfit maxtime=880 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390860     tech = Default;
390861     ;
390862     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 241.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           32.85 seconds
      cpu time            32.35 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390863     *;
390864     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390865     var _iter_ _aic_ _averr_ _misc_
390866     _vaverr_ _vmisc_
390867     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 242.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390869     *------------------------------------------------------------*;
390870     * Extract best iteration;
390871     ;
390872     *------------------------------------------------------------*;
390873     %global _iter;
390874     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
390875     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
390876     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
390877     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
390878     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
390879     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
390880     end;
MPRINT(EM_DIAGRAM):   end;
390881     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390882     *;
 
390883     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
390884     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
390885     if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
390886     output;
MPRINT(EM_DIAGRAM):   output;
390887     stop;
MPRINT(EM_DIAGRAM):   stop;
390888     end;
MPRINT(EM_DIAGRAM):   end;
390889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390890     *;
390891     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390892     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
390893     if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
390894     output;
MPRINT(EM_DIAGRAM):   output;
390895     stop;
MPRINT(EM_DIAGRAM):   stop;
390896     end;
MPRINT(EM_DIAGRAM):   end;
390897     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390898     *;
MPRINT(EM_DIAGRAM):    *;
390899     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390900     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
390900   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
390901     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
390902     var _iter_ _aic_ _averr_ _misc_
390903     _vaverr_ _vmisc_
390904     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 243.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390906     title9;
MPRINT(EM_DIAGRAM):   title9;
390907     title10;
MPRINT(EM_DIAGRAM):   title10;
390908     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390909     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390910     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390911     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390912     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
390913     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390914     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
390915     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390916     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
390917     ;
MPRINT(EM_DIAGRAM):   ;
390918     data WORK.SAVEDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3MQB3H7;
390919     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3MQB3H7 has 1 observations and 424
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390921     data EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_BESTDS;
390922     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
390923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_BESTDS has 1 observations and 424
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390924     data WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3MQB3H7;
390925     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3MQB3H7 has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390927     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
390928     ;
MPRINT(EM_DIAGRAM):   ;
390929     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
390930     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
390931     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
390932     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
390933     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
390934     _step_ = "BLOCK LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 2";
390935     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
390936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
390937     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
390938     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
390939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390940     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
390941     ;
MPRINT(EM_DIAGRAM):   ;
390942     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
390943     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
390944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
390945     *;
MPRINT(EM_DIAGRAM):    *;
390946     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
390947     validdata=EMWS1.Part2_VALIDATE
390948     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
390949     *;
MPRINT(EM_DIAGRAM):   *;
390950     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
390951     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
390952     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
390953     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
390954     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
390955     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
390956     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390957     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
390958     ;
MPRINT(EM_DIAGRAM):   ;
390959     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390960     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
390961     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
390962     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
390963     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390964     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
390965     ;
MPRINT(EM_DIAGRAM):   ;
390966     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390967     Hidden 8 / id = H2x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=GAUSS;
390968     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
390969     connect H2x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H2x1_ Attrition_Flag;
390970     *;
MPRINT(EM_DIAGRAM):   *;
390971     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
390972     *;
MPRINT(EM_DIAGRAM):   *;
390973     initial
390974     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
390975     ;
MPRINT(EM_DIAGRAM):   ;
390976     *;
MPRINT(EM_DIAGRAM):   *;
390977     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390978     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
390978   ! Search # 2 BLOCK LAYERS trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 3 : NORMAL :
Prelim";
390979     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 424 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
390980     tech = Default
390981     inest = EMWS1.AutoNeural2_ESTDS bylabel
390982     ;
390983     *;
390984     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
390985     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
390985   ! Search # 2 BLOCK LAYERS trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 3 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=871
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 424 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
390986     train estiter=1 outest=_anest outfit=_anfit maxtime=871 maxiter=20
MPRINT(EM_DIAGRAM):   run;
390987     tech = Default;
390988     ;
390989     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 244.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.65 seconds
      cpu time            2.62 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
390990     *;
390991     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
390992     var _iter_ _aic_ _averr_ _misc_
390993     _vaverr_ _vmisc_
390994     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
390995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 245.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
390996     *------------------------------------------------------------*;
390997     * Extract best iteration;
390998     ;
390999     *------------------------------------------------------------*;
391000     %global _iter;
391001     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391002     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391003     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391004     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391005     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391006     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391007     end;
MPRINT(EM_DIAGRAM):   end;
391008     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391009     *;
 
391010     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391011     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391012     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
391013     output;
MPRINT(EM_DIAGRAM):   output;
391014     stop;
MPRINT(EM_DIAGRAM):   stop;
391015     end;
MPRINT(EM_DIAGRAM):   end;
391016     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391017     *;
391018     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391019     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391020     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
391021     output;
MPRINT(EM_DIAGRAM):   output;
391022     stop;
MPRINT(EM_DIAGRAM):   stop;
391023     end;
MPRINT(EM_DIAGRAM):   end;
391024     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391025     *;
MPRINT(EM_DIAGRAM):    *;
391026     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391027     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391027   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391028     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391029     var _iter_ _aic_ _averr_ _misc_
391030     _vaverr_ _vmisc_
391031     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 246.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391033     title9;
MPRINT(EM_DIAGRAM):   title9;
391034     title10;
MPRINT(EM_DIAGRAM):   title10;
391035     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391036     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391037     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391038     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391039     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391040     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391041     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391042     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391043     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391044     ;
MPRINT(EM_DIAGRAM):   ;
391045     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391046     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391047     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391048     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
391049     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
391050     _step_ = "BLOCK LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 2";
391051     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
391052     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391053     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391054     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391055     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391056     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
391057     ;
MPRINT(EM_DIAGRAM):   ;
391058     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
391059     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
391060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391061     *;
MPRINT(EM_DIAGRAM):    *;
391062     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391063     validdata=EMWS1.Part2_VALIDATE
391064     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391065     *;
MPRINT(EM_DIAGRAM):   *;
391066     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391067     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391068     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391069     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391070     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391071     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391072     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391073     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391074     ;
MPRINT(EM_DIAGRAM):   ;
391075     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391076     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391077     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391078     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391079     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391080     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391081     ;
MPRINT(EM_DIAGRAM):   ;
391082     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391083     Hidden 8 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=SINE;
391084     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391085     connect H2x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H2x1_ Attrition_Flag;
391086     *;
MPRINT(EM_DIAGRAM):   *;
391087     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
391088     *;
MPRINT(EM_DIAGRAM):   *;
391089     initial
391090     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391091     ;
MPRINT(EM_DIAGRAM):   ;
391092     *;
MPRINT(EM_DIAGRAM):   *;
391093     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391094     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
391094   ! Search # 2 BLOCK LAYERS trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 4 : SINE :
Prelim";
391095     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 424 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
391096     tech = Default
391097     inest = EMWS1.AutoNeural2_ESTDS bylabel
391098     ;
391099     *;
391100     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391101     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
391101   ! Search # 2 BLOCK LAYERS trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 BLOCK LAYERS trial # 4 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=871
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 424 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
391102     train estiter=1 outest=_anest outfit=_anfit maxtime=871 maxiter=20
MPRINT(EM_DIAGRAM):   run;
391103     tech = Default;
391104     ;
391105     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 247.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.53 seconds
      cpu time            2.51 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391106     *;
391107     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
391108     var _iter_ _aic_ _averr_ _misc_
391109     _vaverr_ _vmisc_
391110     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 248.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391112     *------------------------------------------------------------*;
391113     * Extract best iteration;
391114     ;
391115     *------------------------------------------------------------*;
391116     %global _iter;
391117     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391118     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391119     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391120     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391121     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391122     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391123     end;
MPRINT(EM_DIAGRAM):   end;
391124     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391125     *;
 
391126     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391127     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391128     if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
391129     output;
MPRINT(EM_DIAGRAM):   output;
391130     stop;
MPRINT(EM_DIAGRAM):   stop;
391131     end;
MPRINT(EM_DIAGRAM):   end;
391132     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391133     *;
391134     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391135     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391136     if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
391137     output;
MPRINT(EM_DIAGRAM):   output;
391138     stop;
MPRINT(EM_DIAGRAM):   stop;
391139     end;
MPRINT(EM_DIAGRAM):   end;
391140     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391141     *;
MPRINT(EM_DIAGRAM):    *;
391142     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391143     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391143   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391144     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391145     var _iter_ _aic_ _averr_ _misc_
391146     _vaverr_ _vmisc_
391147     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391148     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 249.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391149     title9;
MPRINT(EM_DIAGRAM):   title9;
391150     title10;
MPRINT(EM_DIAGRAM):   title10;
391151     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391152     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391153     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391155     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391156     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391157     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391159     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391160     ;
MPRINT(EM_DIAGRAM):   ;
391161     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391162     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391163     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391164     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
391165     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
391166     _step_ = "BLOCK LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 2";
391167     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
391168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391169     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391170     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391172     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
391173     ;
MPRINT(EM_DIAGRAM):   ;
391174     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
391175     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
391176     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391177     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391178     set WORK.BFITDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3MQB3H7;
391179     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3MQB3H7.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391180     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391181     ;
MPRINT(EM_DIAGRAM):   ;
391182     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391183     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391184     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391185     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
391186     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
391187     _step_ = "BLOCK LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 2";
391188     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
391189     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391190     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391191     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391192     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391193     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391194     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391195     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391196     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391197     *;
MPRINT(EM_DIAGRAM):    *;
391198     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391199     validdata=EMWS1.Part2_VALIDATE
391200     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391201     *;
MPRINT(EM_DIAGRAM):   *;
391202     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391203     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391204     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391205     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391206     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391207     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391208     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391209     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
391210     ;
MPRINT(EM_DIAGRAM):   ;
391211     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391212     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
391213     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
391214     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391215     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391216     ;
MPRINT(EM_DIAGRAM):   ;
391217     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391218     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391219     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391220     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391221     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391222     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391223     ;
MPRINT(EM_DIAGRAM):   ;
391224     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391225     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
391226     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391227     connect H2x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H2x1_ Attrition_Flag;
391228     *;
MPRINT(EM_DIAGRAM):   *;
391229     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
391230     *;
MPRINT(EM_DIAGRAM):   *;
391231     initial
391232     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391233     ;
MPRINT(EM_DIAGRAM):   ;
391234     *;
MPRINT(EM_DIAGRAM):   *;
391235     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391236     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
391236   ! Search # 3 BLOCK LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 1 : DIRECT :
Prelim";
391237     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 464 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
391238     tech = Default
391239     inest = EMWS1.AutoNeural2_ESTDS bylabel
391240     ;
391241     *;
391242     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391243     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
391243   ! Search # 3 BLOCK LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=870
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 464 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
391244     train estiter=1 outest=_anest outfit=_anfit maxtime=870 maxiter=20
MPRINT(EM_DIAGRAM):   run;
391245     tech = Default;
391246     ;
391247     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 250.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.91 seconds
      cpu time            2.89 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391248     *;
391249     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
391250     var _iter_ _aic_ _averr_ _misc_
391251     _vaverr_ _vmisc_
391252     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391253     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 251.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391254     *------------------------------------------------------------*;
391255     * Extract best iteration;
391256     ;
391257     *------------------------------------------------------------*;
391258     %global _iter;
391259     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391260     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391261     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391262     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391263     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391264     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391265     end;
MPRINT(EM_DIAGRAM):   end;
391266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391267     *;
 
391268     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391269     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391270     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
391271     output;
MPRINT(EM_DIAGRAM):   output;
391272     stop;
MPRINT(EM_DIAGRAM):   stop;
391273     end;
MPRINT(EM_DIAGRAM):   end;
391274     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 464 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391275     *;
391276     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391277     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391278     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
391279     output;
MPRINT(EM_DIAGRAM):   output;
391280     stop;
MPRINT(EM_DIAGRAM):   stop;
391281     end;
MPRINT(EM_DIAGRAM):   end;
391282     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391283     *;
MPRINT(EM_DIAGRAM):    *;
391284     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391285     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391285   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391286     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391287     var _iter_ _aic_ _averr_ _misc_
391288     _vaverr_ _vmisc_
391289     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 252.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391291     title9;
MPRINT(EM_DIAGRAM):   title9;
391292     title10;
MPRINT(EM_DIAGRAM):   title10;
391293     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391294     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391295     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391296     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391297     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391298     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391299     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391301     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391302     ;
MPRINT(EM_DIAGRAM):   ;
391303     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391304     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391305     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391306     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
391307     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
391308     _step_ = "BLOCK LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 3";
391309     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
391310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391311     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391312     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391314     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
391315     ;
MPRINT(EM_DIAGRAM):   ;
391316     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
391317     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
391318     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391319     *;
MPRINT(EM_DIAGRAM):    *;
391320     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391321     validdata=EMWS1.Part2_VALIDATE
391322     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391323     *;
MPRINT(EM_DIAGRAM):   *;
391324     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391325     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391326     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391327     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391328     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391329     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391330     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391331     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391332     ;
MPRINT(EM_DIAGRAM):   ;
391333     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391334     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391335     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391336     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391337     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391338     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391339     ;
MPRINT(EM_DIAGRAM):   ;
391340     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391341     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
391342     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391343     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391344     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
391345     ;
MPRINT(EM_DIAGRAM):   ;
391346     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391347     Hidden 8 / id = H3x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H3x1_ act=TANH;
391348     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
391349     connect H3x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H3x1_ Attrition_Flag;
391350     *;
MPRINT(EM_DIAGRAM):   *;
391351     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
391352     *;
MPRINT(EM_DIAGRAM):   *;
391353     initial
391354     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391355     ;
MPRINT(EM_DIAGRAM):   ;
391356     *;
MPRINT(EM_DIAGRAM):   *;
391357     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391358     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
391358   ! Search # 3 BLOCK LAYERS trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 2 : TANH :
Prelim";
391359     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 496 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
391360     tech = Default
391361     inest = EMWS1.AutoNeural2_ESTDS bylabel
391362     ;
391363     *;
391364     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391365     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
391365   ! Search # 3 BLOCK LAYERS trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 2 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=869
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 496 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
391366     train estiter=1 outest=_anest outfit=_anfit maxtime=869 maxiter=20
MPRINT(EM_DIAGRAM):   run;
391367     tech = Default;
391368     ;
391369     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 253.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.35 seconds
      cpu time            34.79 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391370     *;
391371     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
391372     var _iter_ _aic_ _averr_ _misc_
391373     _vaverr_ _vmisc_
391374     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 254.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391376     *------------------------------------------------------------*;
391377     * Extract best iteration;
391378     ;
391379     *------------------------------------------------------------*;
391380     %global _iter;
391381     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391382     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391383     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391384     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391385     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391386     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391387     end;
MPRINT(EM_DIAGRAM):   end;
391388     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391389     *;
 
391390     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391391     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391392     if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
391393     output;
MPRINT(EM_DIAGRAM):   output;
391394     stop;
MPRINT(EM_DIAGRAM):   stop;
391395     end;
MPRINT(EM_DIAGRAM):   end;
391396     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 496 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391397     *;
391398     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391399     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391400     if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
391401     output;
MPRINT(EM_DIAGRAM):   output;
391402     stop;
MPRINT(EM_DIAGRAM):   stop;
391403     end;
MPRINT(EM_DIAGRAM):   end;
391404     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391405     *;
MPRINT(EM_DIAGRAM):    *;
391406     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391407     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391407   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391408     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391409     var _iter_ _aic_ _averr_ _misc_
391410     _vaverr_ _vmisc_
391411     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391412     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 255.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391413     title9;
MPRINT(EM_DIAGRAM):   title9;
391414     title10;
MPRINT(EM_DIAGRAM):   title10;
391415     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391416     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391417     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391418     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391419     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391420     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391421     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391422     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391423     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391424     ;
MPRINT(EM_DIAGRAM):   ;
391425     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391426     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391427     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391428     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
391429     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
391430     _step_ = "BLOCK LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 3";
391431     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
391432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391433     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391434     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391436     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
391437     ;
MPRINT(EM_DIAGRAM):   ;
391438     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
391439     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
391440     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391441     *;
MPRINT(EM_DIAGRAM):    *;
391442     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391443     validdata=EMWS1.Part2_VALIDATE
391444     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391445     *;
MPRINT(EM_DIAGRAM):   *;
391446     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391447     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391448     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391449     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391450     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391451     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391452     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391453     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391454     ;
MPRINT(EM_DIAGRAM):   ;
391455     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391456     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391457     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391458     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391459     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391460     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391461     ;
MPRINT(EM_DIAGRAM):   ;
391462     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391463     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
391464     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391465     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391466     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
391467     ;
MPRINT(EM_DIAGRAM):   ;
391468     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391469     Hidden 8 / id = H3x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H3x1_ act=GAUSS;
391470     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
391471     connect H3x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H3x1_ Attrition_Flag;
391472     *;
MPRINT(EM_DIAGRAM):   *;
391473     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
391474     *;
MPRINT(EM_DIAGRAM):   *;
391475     initial
391476     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391477     ;
MPRINT(EM_DIAGRAM):   ;
391478     *;
MPRINT(EM_DIAGRAM):   *;
391479     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391480     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
391480   ! Search # 3 BLOCK LAYERS trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 3 : NORMAL :
Prelim";
391481     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 496 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
391482     tech = Default
391483     inest = EMWS1.AutoNeural2_ESTDS bylabel
391484     ;
391485     *;
391486     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391487     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
391487   ! Search # 3 BLOCK LAYERS trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 3 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=860
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 496 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
391488     train estiter=1 outest=_anest outfit=_anfit maxtime=860 maxiter=20
MPRINT(EM_DIAGRAM):   run;
391489     tech = Default;
391490     ;
391491     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 256.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.34 seconds
      cpu time            34.93 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391492     *;
391493     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
391494     var _iter_ _aic_ _averr_ _misc_
391495     _vaverr_ _vmisc_
391496     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391497     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 257.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391498     *------------------------------------------------------------*;
391499     * Extract best iteration;
391500     ;
391501     *------------------------------------------------------------*;
391502     %global _iter;
391503     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391504     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391505     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391506     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391507     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391508     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391509     end;
MPRINT(EM_DIAGRAM):   end;
391510     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391511     *;
 
391512     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391513     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391514     if _ITER_ eq 18 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 then do;
391515     output;
MPRINT(EM_DIAGRAM):   output;
391516     stop;
MPRINT(EM_DIAGRAM):   stop;
391517     end;
MPRINT(EM_DIAGRAM):   end;
391518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 496 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391519     *;
391520     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391521     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391522     if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
391523     output;
MPRINT(EM_DIAGRAM):   output;
391524     stop;
MPRINT(EM_DIAGRAM):   stop;
391525     end;
MPRINT(EM_DIAGRAM):   end;
391526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
391527     *;
MPRINT(EM_DIAGRAM):    *;
391528     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391529     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391529   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391530     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391531     var _iter_ _aic_ _averr_ _misc_
391532     _vaverr_ _vmisc_
391533     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 258.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391535     title9;
MPRINT(EM_DIAGRAM):   title9;
391536     title10;
MPRINT(EM_DIAGRAM):   title10;
391537     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391538     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391539     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391540     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391541     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391542     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391543     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391544     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391545     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391546     ;
MPRINT(EM_DIAGRAM):   ;
391547     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391548     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391549     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391550     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
391551     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
391552     _step_ = "BLOCK LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 3";
391553     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
391554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391555     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391556     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391557     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
391558     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
391559     ;
MPRINT(EM_DIAGRAM):   ;
391560     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_ESTDS;
391561     set EMWS1.AutoNeural2_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_BESTDS;
391562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
391563     *;
MPRINT(EM_DIAGRAM):    *;
391564     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391565     validdata=EMWS1.Part2_VALIDATE
391566     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391567     *;
MPRINT(EM_DIAGRAM):   *;
391568     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391569     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391570     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391571     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391572     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391573     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391574     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391575     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391576     ;
MPRINT(EM_DIAGRAM):   ;
391577     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391578     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391579     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391580     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391581     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391582     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391583     ;
MPRINT(EM_DIAGRAM):   ;
391584     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391585     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
391586     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391587     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391588     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
391589     ;
MPRINT(EM_DIAGRAM):   ;
391590     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391591     Hidden 8 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H3x1_ act=SINE;
391592     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
391593     connect H3x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H3x1_ Attrition_Flag;
391594     *;
MPRINT(EM_DIAGRAM):   *;
391595     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
391596     *;
MPRINT(EM_DIAGRAM):   *;
391597     initial
391598     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391599     ;
MPRINT(EM_DIAGRAM):   ;
391600     *;
MPRINT(EM_DIAGRAM):   *;
391601     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391602     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
391602   ! Search # 3 BLOCK LAYERS trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 4 : SINE :
Prelim";
391603     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 496 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
391604     tech = Default
391605     inest = EMWS1.AutoNeural2_ESTDS bylabel
391606     ;
391607     *;
391608     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391609     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
391609   ! Search # 3 BLOCK LAYERS trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 BLOCK LAYERS trial # 4 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=851
maxiter=20 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 20 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 23 observations and 496 variables.
NOTE: The data set WORK._ANFIT has 44 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
391610     train estiter=1 outest=_anest outfit=_anfit maxtime=851 maxiter=20
MPRINT(EM_DIAGRAM):   run;
391611     tech = Default;
391612     ;
391613     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 259.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.37 seconds
      cpu time            34.98 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391614     *;
391615     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
391616     var _iter_ _aic_ _averr_ _misc_
391617     _vaverr_ _vmisc_
391618     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391619     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 260.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391620     *------------------------------------------------------------*;
391621     * Extract best iteration;
391622     ;
391623     *------------------------------------------------------------*;
391624     %global _iter;
391625     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391626     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391627     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391628     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391629     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391630     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391631     end;
MPRINT(EM_DIAGRAM):   end;
391632     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391633     *;
 
391634     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391635     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391636     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
391637     output;
MPRINT(EM_DIAGRAM):   output;
391638     stop;
MPRINT(EM_DIAGRAM):   stop;
391639     end;
MPRINT(EM_DIAGRAM):   end;
391640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 496 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391641     *;
391642     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391643     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391644     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
391645     output;
MPRINT(EM_DIAGRAM):   output;
391646     stop;
MPRINT(EM_DIAGRAM):   stop;
391647     end;
MPRINT(EM_DIAGRAM):   end;
391648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391649     *;
MPRINT(EM_DIAGRAM):    *;
391650     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391651     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391651   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391652     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391653     var _iter_ _aic_ _averr_ _misc_
391654     _vaverr_ _vmisc_
391655     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391656     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 261.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391657     title9;
MPRINT(EM_DIAGRAM):   title9;
391658     title10;
MPRINT(EM_DIAGRAM):   title10;
391659     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391660     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391661     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391663     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
391664     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391665     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
391666     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
391667     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391668     ;
MPRINT(EM_DIAGRAM):   ;
391669     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391670     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391671     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391672     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
391673     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
391674     _step_ = "BLOCK LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "BLOCK LAYERS 3";
391675     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
391676     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391677     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391678     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391679     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391680     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391681     set WORK.SAVEDS_AUTONEUR_3MQB3H7;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_3MQB3H7;
391682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_3MQB3H7.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391683     *;
MPRINT(EM_DIAGRAM):    *;
391684     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391685     validdata=EMWS1.Part2_VALIDATE
391686     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391687     *;
MPRINT(EM_DIAGRAM):   *;
391688     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391689     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391690     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391691     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391692     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391693     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391694     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391695     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391696     ;
MPRINT(EM_DIAGRAM):   ;
391697     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391698     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391699     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391700     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391701     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391702     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391703     ;
MPRINT(EM_DIAGRAM):   ;
391704     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391705     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
391706     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391707     connect H2x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H2x1_ Attrition_Flag;
391708     *;
MPRINT(EM_DIAGRAM):   *;
391709     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
391710     *;
MPRINT(EM_DIAGRAM):   *;
391711     initial
391712     inest = EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391713     ;
MPRINT(EM_DIAGRAM):   ;
391714     *;
MPRINT(EM_DIAGRAM):   *;
391715     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391716     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
391716   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
391717     prelim 32 outest=_anpre pretime=30 preiter=10
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=10 tech =
Default inest = EMWS1.AutoNeural2_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 424 variables.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
MPRINT(EM_DIAGRAM):   *;
391718     tech = Default
391719     inest = EMWS1.AutoNeural2_ESTDS bylabel
391720     ;
391721     *;
391722     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391723     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
391723   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=842
maxiter=5 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 424 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
391724     train estiter=1 outest=_anest outfit=_anfit maxtime=842 maxiter=5
MPRINT(EM_DIAGRAM):   run;
391725     tech = Default;
391726     ;
391727     run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 262.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.75 seconds
      cpu time            1.74 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391728     *;
391729     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
391730     var _iter_ _aic_ _averr_ _misc_
391731     _vaverr_ _vmisc_
391732     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391733     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 263.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391734     *------------------------------------------------------------*;
391735     * Extract best iteration;
391736     ;
391737     *------------------------------------------------------------*;
391738     %global _iter;
391739     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
391740     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
391741     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
391742     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
391743     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
391744     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
391745     end;
MPRINT(EM_DIAGRAM):   end;
391746     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391747     *;
 
391748     data EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_ESTDS;
391749     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
391750     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
391751     output;
MPRINT(EM_DIAGRAM):   output;
391752     stop;
MPRINT(EM_DIAGRAM):   stop;
391753     end;
MPRINT(EM_DIAGRAM):   end;
391754     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
391755     *;
391756     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391757     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
391758     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
391759     output;
MPRINT(EM_DIAGRAM):   output;
391760     stop;
MPRINT(EM_DIAGRAM):   stop;
391761     end;
MPRINT(EM_DIAGRAM):   end;
391762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391763     *;
MPRINT(EM_DIAGRAM):    *;
391764     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
391765     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
391765   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
391766     proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_OUTFIT noobs;
391767     var _iter_ _aic_ _averr_ _misc_
391768     _vaverr_ _vmisc_
391769     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
391770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 264.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391771     title9;
MPRINT(EM_DIAGRAM):   title9;
391772     title10;
MPRINT(EM_DIAGRAM):   title10;
391773     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
391774     ;
MPRINT(EM_DIAGRAM):   ;
391775     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391776     set EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT;
391777     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
391778     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
391779     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
391780     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
391781     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
391782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391783     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_HISTORY;
391784     set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY EMWS1.AutoNeural2_OUTFIT;
391785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391786     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
391787     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
391787   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
391788     proc print data=EMWS1.AutoNeural2_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_HISTORY noobs;
391789     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
391790     _vaverr_ _vmisc_
391791     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
391792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: The PROCEDURE PRINT printed page 265.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391793     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
391794     set EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY;
391795     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
391796     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
391797     else neurons=8;
MPRINT(EM_DIAGRAM):   else neurons=8;
391798     label neurons="%sysfunc(sasmsg(sashelp.dmine,
391798   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
391799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS1.AUTONEURAL2_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391800     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
391801     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
391801   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
391802     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
391802   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
391802   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
391803     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
391804     var _func_ _averr_
391805     _vaverr_
391806     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
391807     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
391808     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 266.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391809     title8;
MPRINT(EM_DIAGRAM):   title8;
391810     title9;
MPRINT(EM_DIAGRAM):   title9;
391811     title10;
MPRINT(EM_DIAGRAM):   title10;
391812     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391813     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
391814     ;
MPRINT(EM_DIAGRAM):   ;
391815     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391816     *;
MPRINT(EM_DIAGRAM):   *;
391817     proc neural data=EM_AutoNeural2 dmdbcat=WORK.AutoNeural2_DMDB
391818     validdata=EMWS1.Part2_VALIDATE
391819     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural2
dmdbcat=WORK.AutoNeural2_DMDB validdata=EMWS1.Part2_VALIDATE ;
391820     *;
MPRINT(EM_DIAGRAM):   *;
391821     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
391822     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
391823     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
391824     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
391825     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
391826     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
391827     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391828     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
391829     ;
MPRINT(EM_DIAGRAM):   ;
391830     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391831     Hidden 8 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H1x1_ act=GAUSS;
391832     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
391833     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
391834     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391835     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
391836     ;
MPRINT(EM_DIAGRAM):   ;
391837     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391838     Hidden 8 / id = H2x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 8 / id = H2x1_ act=TANH;
391839     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
391840     connect H2x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H2x1_ Attrition_Flag;
391841     *;
MPRINT(EM_DIAGRAM):   *;
391842     initial inest= EMWS1.AutoNeural2_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS1.AutoNeural2_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL2_ESTDS has 1 observations and 424 variables.
391843     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
391844     code
391844   ! file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural
391844   ! 2\SCORECODE.sas"
391845     group=AutoNeural2
391846     ;
MPRINT(EM_DIAGRAM):   code
file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\SCORECODE
.sas" group=AutoNeural2 ;
NOTE: External file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\SCORECODE
      .sas opened.
391847     ;
MPRINT(EM_DIAGRAM):   ;
391848     code
391848   ! file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural
391848   ! 2\RESIDUALSCORECODE.sas"
391849     group=AutoNeural2
391850     residual
391851     ;
MPRINT(EM_DIAGRAM):   code
file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\RESIDUALS
CORECODE.sas" group=AutoNeural2 residual ;
NOTE: External file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\RESIDUALS
      CORECODE.sas opened.
391852     ;
MPRINT(EM_DIAGRAM):   ;
391853     score data=EMWS1.Part2_TRAIN out=_NULL_
391854     outfit=WORK.FIT1
391855     role=TRAIN
391856     outkey=EMWS1.AutoNeural2_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Part2_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS1.AutoNeural2_OUTKEY;
NOTE: The data set EMWS1.AUTONEURAL2_OUTKEY has 68 observations and 8 variables.
NOTE: The data set EMWS1.PART2_TRAIN has 7088 observations and 37 variables.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
391857     score data=EMWS1.Part2_VALIDATE out=_NULL_
391858     outfit=WORK.FIT2
391859     outkey=EMWS1.AutoNeural2_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Part2_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS1.AutoNeural2_OUTKEY;
NOTE: The data set EMWS1.AUTONEURAL2_OUTKEY has 68 observations and 8 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
391860     score data=EMWS1.Part2_TEST out=_NULL_
391861     outfit=WORK.FIT3
391862     role=TEST
391863     outkey=EMWS1.AutoNeural2_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Part2_TEST out=_NULL_ outfit=WORK.FIT3
role=TEST outkey=EMWS1.AutoNeural2_OUTKEY;
NOTE: The data set EMWS1.AUTONEURAL2_OUTKEY has 68 observations and 8 variables.
NOTE: The data set EMWS1.PART2_TEST has 1014 observations and 37 variables.
NOTE: The data set WORK.FIT3 has 2 observations and 17 variables.
391864     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL2 has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
391865     data EMWS1.AutoNeural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_OUTFIT;
391866     merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
391867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: There were 2 observations read from the data set WORK.FIT3.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 2 observations and 51 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391868     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391869     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
391870     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
391871     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
391871   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
391872     set EMWS1.AutoNeural2_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_ESTDS;
391873     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 416 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
391874     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
391875     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
391876     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 416 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
391877     proc transpose data=tempweight out=EMWS1.AutoNeural2_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS1.AutoNeural2_WEIGHTS;
391878     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
391879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS1.AUTONEURAL2_WEIGHTS has 414 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
391880     data EMWS1.AutoNeural2_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_WEIGHTS;
391881     set EMWS1.AutoNeural2_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_WEIGHTS;
391882     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
391883     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
391884     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
391885     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
391886     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
391886   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
391886   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
391886   ! NOQUOTE))" WEIGHT =
391887        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
391888     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
391889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 414 observations read from the data set
      EMWS1.AUTONEURAL2_WEIGHTS.
NOTE: The data set EMWS1.AUTONEURAL2_WEIGHTS has 409 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
391890     * restore printing options;
391891     ;
391892     title10;
MPRINT(EM_DIAGRAM):   title10;
391893     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
391894     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
391895     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
391896     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
391897     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
391898     *;
391899     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
391900     delete EM_AutoNeural2;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural2;
391901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL2 (memtype=DATA).
391902     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
391903     data EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_HISTORY;
391904     set EMWS1.AutoNeural2_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_HISTORY;
391905     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
391906     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
391906   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
391907     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
391908     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS1.AUTONEURAL2_HISTORY.
NOTE: The data set EMWS1.AUTONEURAL2_HISTORY has 16 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:18:27" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 09, 2022
Time:                15:18:27
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2HW6XHB
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMSCORE.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2HW6XHB new;
MPRINT(EM_DIAGRAM):   run;
392010     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
392011     set EMWS1.AutoNeural2_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTKEY;
392012     if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
392013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set EMWS1.AUTONEURAL2_OUTKEY.
NOTE: The data set WORK.OUTKEY has 21 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
392014     filename emflow
392014   ! "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
392015     *------------------------------------------------------------*;
392016     * AutoNeural2: Scoring DATA data;
392017     *------------------------------------------------------------*;
392018     data EMWS1.AutoNeural2_TRAIN
392019     / view=EMWS1.AutoNeural2_TRAIN
392020     ;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_TRAIN / view=EMWS1.AutoNeural2_TRAIN ;
392021     set EMWS1.Part2_TRAIN
392022     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN ;
392023     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas.
392024    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
392025    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
392026    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
392027    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
392028    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
392029    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
392030    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
392031    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
392032    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
392033    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
392034    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
392035    +LENGTH _WARN_ $4
392036    +      F_Attrition_Flag  $ 17
392037    +      I_Attrition_Flag  $ 17
392038    +      U_Attrition_Flag  $ 17
392039    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Attrition_Flag $ 17 I_Attrition_Flag $ 17
U_Attrition_Flag $ 17 ;
392040    +      label S_RANGE_LOG_Total_Trans_Amt =
392041    +'Standard: RANGE_LOG_Total_Trans_Amt' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_LOG_Total_Trans_Amt = 'Standard:
RANGE_LOG_Total_Trans_Amt' ;
392042    +
392043    +      label S_RANGE_SQRT_Avg_Utilization_Rat =
392044    +'Standard: RANGE_SQRT_Avg_Utilization_Ratio' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Avg_Utilization_Rat = 'Standard:
RANGE_SQRT_Avg_Utilization_Ratio' ;
392045    +
392046    +      label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q =
392047    +'Standard: RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = 'Standard:
RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
392048    +
392049    +      label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 =
392050    +'Standard: RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = 'Standard:
RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
392051    +
392052    +      label S_RANGE_Total_Revolving_Bal =
392053    +'Standard: RANGE_Total_Revolving_Bal' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Total_Revolving_Bal = 'Standard:
RANGE_Total_Revolving_Bal' ;
392054    +
392055    +      label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
392056    +
392057    +      label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
392058    +
392059    +      label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
392060    +
392061    +      label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
392062    +
392063    +      label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
392064    +
392065    +      label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
392066    +
392067    +      label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
392068    +
392069    +      label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
392070    +
392071    +      label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
392072    +
392073    +      label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
392074    +
392075    +      label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
392076    +
392077    +      label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
392078    +
392079    +      label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
392080    +
392081    +      label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
392082    +
392083    +      label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
392084    +
392085    +      label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
392086    +
392087    +      label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
392088    +
392089    +      label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
392090    +
392091    +      label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
392092    +
392093    +      label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
392094    +
392095    +      label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
392096    +
392097    +      label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
392098    +
392099    +      label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
392100    +
392101    +      label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
392102    +
392103    +      label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
392104    +
392105    +      label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
392106    +
392107    +      label G_Total_Relationship_Count0 =
392108    +'Dummy: G_Total_Relationship_Count=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count0 = 'Dummy:
G_Total_Relationship_Count=0' ;
392109    +
392110    +      label G_Total_Relationship_Count1 =
392111    +'Dummy: G_Total_Relationship_Count=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count1 = 'Dummy:
G_Total_Relationship_Count=1' ;
392112    +
392113    +      label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
392114    +
392115    +      label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
392116    +
392117    +      label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
392118    +
392119    +      label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
392120    +
392121    +      label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
392122    +
392123    +      label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
392124    +
392125    +      label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
392126    +
392127    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
392128    +
392129    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
392130    +
392131    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
392132    +
392133    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
392134    +
392135    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
392136    +
392137    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
392138    +
392139    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
392140    +
392141    +      label H1x1_8 = 'Hidden: H1x1_=8' ;
MPRINT(EM_DIAGRAM):   label H1x1_8 = 'Hidden: H1x1_=8' ;
392142    +
392143    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
392144    +
392145    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
392146    +
392147    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
392148    +
392149    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
392150    +
392151    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
392152    +
392153    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
392154    +
392155    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
392156    +
392157    +      label H2x1_8 = 'Hidden: H2x1_=8' ;
MPRINT(EM_DIAGRAM):   label H2x1_8 = 'Hidden: H2x1_=8' ;
392158    +
392159    +      label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
392160    +
392161    +      label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
392162    +
392163    +      label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
392164    +
392165    +      label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
392166    +
392167    +      label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
392168    +
392169    +      label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
392170    +
392171    +      label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
392172    +
392173    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
392174    +
392175    +*** Generate dummy variables for G_Contacts_Count_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Contacts_Count_12_mon ;
392176    +drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
392177    +        G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
392178    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
392179    +G_Contacts_Count_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 0;
392180    +G_Contacts_Count_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 0;
392181    +G_Contacts_Count_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 0;
392182    +G_Contacts_Count_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 0;
392183    +if missing( G_Contacts_Count_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Contacts_Count_12_mon ) then do;
392184    +   G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
392185    +   G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
392186    +   G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
392187    +   G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
392188    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
392189    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392190    +end;
MPRINT(EM_DIAGRAM):   end;
392191    +else do;
MPRINT(EM_DIAGRAM):   else do;
392192    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
392193    +   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
392194    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
392195    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
392196    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
392197    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
392198    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
392199    +            G_Contacts_Count_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 1;
392200    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392201    +         end;
MPRINT(EM_DIAGRAM):   end;
392202    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392203    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
392204    +               G_Contacts_Count_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 1;
392205    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392206    +            end;
MPRINT(EM_DIAGRAM):   end;
392207    +         end;
MPRINT(EM_DIAGRAM):   end;
392208    +      end;
MPRINT(EM_DIAGRAM):   end;
392209    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392210    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
392211    +            G_Contacts_Count_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 1;
392212    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392213    +         end;
MPRINT(EM_DIAGRAM):   end;
392214    +      end;
MPRINT(EM_DIAGRAM):   end;
392215    +   end;
MPRINT(EM_DIAGRAM):   end;
392216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
392217    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
392218    +         G_Contacts_Count_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 1;
392219    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392220    +      end;
MPRINT(EM_DIAGRAM):   end;
392221    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392222    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
392223    +            G_Contacts_Count_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = -1;
392224    +            G_Contacts_Count_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = -1;
392225    +            G_Contacts_Count_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = -1;
392226    +            G_Contacts_Count_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = -1;
392227    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392228    +         end;
MPRINT(EM_DIAGRAM):   end;
392229    +      end;
MPRINT(EM_DIAGRAM):   end;
392230    +   end;
MPRINT(EM_DIAGRAM):   end;
392231    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
392232    +      G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
392233    +      G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
392234    +      G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
392235    +      G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
392236    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
392237    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392238    +   end;
MPRINT(EM_DIAGRAM):   end;
392239    +end;
MPRINT(EM_DIAGRAM):   end;
392240    +
392241    +*** Generate dummy variables for G_Customer_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Customer_Age ;
392242    +drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
392243    +        G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7
392244    +        G_Customer_Age8 G_Customer_Age9 ;
MPRINT(EM_DIAGRAM):   drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7 G_Customer_Age8
G_Customer_Age9 ;
392245    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
392246    +G_Customer_Age0 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 0;
392247    +G_Customer_Age1 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 0;
392248    +G_Customer_Age2 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 0;
392249    +G_Customer_Age3 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 0;
392250    +G_Customer_Age4 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 0;
392251    +G_Customer_Age5 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 0;
392252    +G_Customer_Age6 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 0;
392253    +G_Customer_Age7 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 0;
392254    +G_Customer_Age8 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 0;
392255    +G_Customer_Age9 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 0;
392256    +if missing( G_Customer_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Customer_Age ) then do;
392257    +   G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
392258    +   G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
392259    +   G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
392260    +   G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
392261    +   G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
392262    +   G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
392263    +   G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
392264    +   G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
392265    +   G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
392266    +   G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
392267    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
392268    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392269    +end;
MPRINT(EM_DIAGRAM):   end;
392270    +else do;
MPRINT(EM_DIAGRAM):   else do;
392271    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
392272    +   _dm12 = put( G_Customer_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Customer_Age , BEST12. );
392273    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
392274    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
392275    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
392276    +      if _dm12 <= '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '10' then do;
392277    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
392278    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
392279    +               G_Customer_Age0 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 1;
392280    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392281    +            end;
MPRINT(EM_DIAGRAM):   end;
392282    +            else do;
MPRINT(EM_DIAGRAM):   else do;
392283    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
392284    +                  G_Customer_Age1 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 1;
392285    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392286    +               end;
MPRINT(EM_DIAGRAM):   end;
392287    +            end;
MPRINT(EM_DIAGRAM):   end;
392288    +         end;
MPRINT(EM_DIAGRAM):   end;
392289    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392290    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
392291    +               G_Customer_Age0 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = -1;
392292    +               G_Customer_Age1 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = -1;
392293    +               G_Customer_Age2 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = -1;
392294    +               G_Customer_Age3 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = -1;
392295    +               G_Customer_Age4 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = -1;
392296    +               G_Customer_Age5 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = -1;
392297    +               G_Customer_Age6 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = -1;
392298    +               G_Customer_Age7 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = -1;
392299    +               G_Customer_Age8 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = -1;
392300    +               G_Customer_Age9 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = -1;
392301    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392302    +            end;
MPRINT(EM_DIAGRAM):   end;
392303    +         end;
MPRINT(EM_DIAGRAM):   end;
392304    +      end;
MPRINT(EM_DIAGRAM):   end;
392305    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392306    +         if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
392307    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
392308    +               G_Customer_Age2 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 1;
392309    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392310    +            end;
MPRINT(EM_DIAGRAM):   end;
392311    +            else do;
MPRINT(EM_DIAGRAM):   else do;
392312    +               if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
392313    +                  G_Customer_Age3 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 1;
392314    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392315    +               end;
MPRINT(EM_DIAGRAM):   end;
392316    +            end;
MPRINT(EM_DIAGRAM):   end;
392317    +         end;
MPRINT(EM_DIAGRAM):   end;
392318    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392319    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
392320    +               G_Customer_Age4 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 1;
392321    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392322    +            end;
MPRINT(EM_DIAGRAM):   end;
392323    +         end;
MPRINT(EM_DIAGRAM):   end;
392324    +      end;
MPRINT(EM_DIAGRAM):   end;
392325    +   end;
MPRINT(EM_DIAGRAM):   end;
392326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
392327    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
392328    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
392329    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
392330    +               G_Customer_Age5 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 1;
392331    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392332    +            end;
MPRINT(EM_DIAGRAM):   end;
392333    +            else do;
MPRINT(EM_DIAGRAM):   else do;
392334    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
392335    +                  G_Customer_Age6 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 1;
392336    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392337    +               end;
MPRINT(EM_DIAGRAM):   end;
392338    +            end;
MPRINT(EM_DIAGRAM):   end;
392339    +         end;
MPRINT(EM_DIAGRAM):   end;
392340    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392341    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
392342    +               G_Customer_Age7 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 1;
392343    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392344    +            end;
MPRINT(EM_DIAGRAM):   end;
392345    +         end;
MPRINT(EM_DIAGRAM):   end;
392346    +      end;
MPRINT(EM_DIAGRAM):   end;
392347    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392348    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
392349    +            G_Customer_Age8 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 1;
392350    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392351    +         end;
MPRINT(EM_DIAGRAM):   end;
392352    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392353    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
392354    +               G_Customer_Age9 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 1;
392355    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392356    +            end;
MPRINT(EM_DIAGRAM):   end;
392357    +         end;
MPRINT(EM_DIAGRAM):   end;
392358    +      end;
MPRINT(EM_DIAGRAM):   end;
392359    +   end;
MPRINT(EM_DIAGRAM):   end;
392360    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
392361    +      G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
392362    +      G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
392363    +      G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
392364    +      G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
392365    +      G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
392366    +      G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
392367    +      G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
392368    +      G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
392369    +      G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
392370    +      G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
392371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
392372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392373    +   end;
MPRINT(EM_DIAGRAM):   end;
392374    +end;
MPRINT(EM_DIAGRAM):   end;
392375    +
392376    +*** Generate dummy variables for G_Months_Inactive_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_Inactive_12_mon ;
392377    +drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
392378    +        G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
392379    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
392380    +G_Months_Inactive_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 0;
392381    +G_Months_Inactive_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 0;
392382    +G_Months_Inactive_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 0;
392383    +G_Months_Inactive_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 0;
392384    +if missing( G_Months_Inactive_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_Inactive_12_mon ) then do;
392385    +   G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
392386    +   G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
392387    +   G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
392388    +   G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
392389    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
392390    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392391    +end;
MPRINT(EM_DIAGRAM):   end;
392392    +else do;
MPRINT(EM_DIAGRAM):   else do;
392393    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
392394    +   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
392395    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
392396    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
392397    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
392398    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
392399    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
392400    +            G_Months_Inactive_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 1;
392401    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392402    +         end;
MPRINT(EM_DIAGRAM):   end;
392403    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392404    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
392405    +               G_Months_Inactive_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 1;
392406    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392407    +            end;
MPRINT(EM_DIAGRAM):   end;
392408    +         end;
MPRINT(EM_DIAGRAM):   end;
392409    +      end;
MPRINT(EM_DIAGRAM):   end;
392410    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392411    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
392412    +            G_Months_Inactive_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 1;
392413    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392414    +         end;
MPRINT(EM_DIAGRAM):   end;
392415    +      end;
MPRINT(EM_DIAGRAM):   end;
392416    +   end;
MPRINT(EM_DIAGRAM):   end;
392417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
392418    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
392419    +         G_Months_Inactive_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 1;
392420    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392421    +      end;
MPRINT(EM_DIAGRAM):   end;
392422    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392423    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
392424    +            G_Months_Inactive_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = -1;
392425    +            G_Months_Inactive_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = -1;
392426    +            G_Months_Inactive_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = -1;
392427    +            G_Months_Inactive_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = -1;
392428    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392429    +         end;
MPRINT(EM_DIAGRAM):   end;
392430    +      end;
MPRINT(EM_DIAGRAM):   end;
392431    +   end;
MPRINT(EM_DIAGRAM):   end;
392432    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
392433    +      G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
392434    +      G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
392435    +      G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
392436    +      G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
392437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
392438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392439    +   end;
MPRINT(EM_DIAGRAM):   end;
392440    +end;
MPRINT(EM_DIAGRAM):   end;
392441    +
392442    +*** Generate dummy variables for G_Months_on_book ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_on_book ;
392443    +drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2 G_Months_on_book3
392444    +        G_Months_on_book4 G_Months_on_book5 G_Months_on_book6
392445    +        G_Months_on_book7 ;
MPRINT(EM_DIAGRAM):   drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2
G_Months_on_book3 G_Months_on_book4 G_Months_on_book5 G_Months_on_book6 G_Months_on_book7 ;
392446    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
392447    +G_Months_on_book0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 0;
392448    +G_Months_on_book1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 0;
392449    +G_Months_on_book2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 0;
392450    +G_Months_on_book3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 0;
392451    +G_Months_on_book4 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 0;
392452    +G_Months_on_book5 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 0;
392453    +G_Months_on_book6 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 0;
392454    +G_Months_on_book7 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 0;
392455    +if missing( G_Months_on_book ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_on_book ) then do;
392456    +   G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
392457    +   G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
392458    +   G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
392459    +   G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
392460    +   G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
392461    +   G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
392462    +   G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
392463    +   G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
392464    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
392465    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392466    +end;
MPRINT(EM_DIAGRAM):   end;
392467    +else do;
MPRINT(EM_DIAGRAM):   else do;
392468    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
392469    +   _dm12 = put( G_Months_on_book , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_on_book , BEST12. );
392470    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
392471    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
392472    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
392473    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
392474    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
392475    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
392476    +               G_Months_on_book0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 1;
392477    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392478    +            end;
MPRINT(EM_DIAGRAM):   end;
392479    +            else do;
MPRINT(EM_DIAGRAM):   else do;
392480    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
392481    +                  G_Months_on_book1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 1;
392482    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392483    +               end;
MPRINT(EM_DIAGRAM):   end;
392484    +            end;
MPRINT(EM_DIAGRAM):   end;
392485    +         end;
MPRINT(EM_DIAGRAM):   end;
392486    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392487    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
392488    +               G_Months_on_book2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 1;
392489    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392490    +            end;
MPRINT(EM_DIAGRAM):   end;
392491    +         end;
MPRINT(EM_DIAGRAM):   end;
392492    +      end;
MPRINT(EM_DIAGRAM):   end;
392493    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392494    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
392495    +            G_Months_on_book3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 1;
392496    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392497    +         end;
MPRINT(EM_DIAGRAM):   end;
392498    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392499    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
392500    +               G_Months_on_book4 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 1;
392501    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392502    +            end;
MPRINT(EM_DIAGRAM):   end;
392503    +         end;
MPRINT(EM_DIAGRAM):   end;
392504    +      end;
MPRINT(EM_DIAGRAM):   end;
392505    +   end;
MPRINT(EM_DIAGRAM):   end;
392506    +   else do;
MPRINT(EM_DIAGRAM):   else do;
392507    +      if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
392508    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
392509    +            G_Months_on_book5 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 1;
392510    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392511    +         end;
MPRINT(EM_DIAGRAM):   end;
392512    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392513    +            if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
392514    +               G_Months_on_book6 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 1;
392515    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392516    +            end;
MPRINT(EM_DIAGRAM):   end;
392517    +         end;
MPRINT(EM_DIAGRAM):   end;
392518    +      end;
MPRINT(EM_DIAGRAM):   end;
392519    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392520    +         if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
392521    +            G_Months_on_book7 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 1;
392522    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392523    +         end;
MPRINT(EM_DIAGRAM):   end;
392524    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392525    +            if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
392526    +               G_Months_on_book0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = -1;
392527    +               G_Months_on_book1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = -1;
392528    +               G_Months_on_book2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = -1;
392529    +               G_Months_on_book3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = -1;
392530    +               G_Months_on_book4 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = -1;
392531    +               G_Months_on_book5 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = -1;
392532    +               G_Months_on_book6 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = -1;
392533    +               G_Months_on_book7 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = -1;
392534    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392535    +            end;
MPRINT(EM_DIAGRAM):   end;
392536    +         end;
MPRINT(EM_DIAGRAM):   end;
392537    +      end;
MPRINT(EM_DIAGRAM):   end;
392538    +   end;
MPRINT(EM_DIAGRAM):   end;
392539    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
392540    +      G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
392541    +      G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
392542    +      G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
392543    +      G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
392544    +      G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
392545    +      G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
392546    +      G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
392547    +      G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
392548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
392549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392550    +   end;
MPRINT(EM_DIAGRAM):   end;
392551    +end;
MPRINT(EM_DIAGRAM):   end;
392552    +
392553    +*** Generate dummy variables for G_Total_Relationship_Count ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Relationship_Count ;
392554    +drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
392555    +if missing( G_Total_Relationship_Count ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Relationship_Count ) then do;
392556    +   G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
392557    +   G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
392558    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
392559    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392560    +end;
MPRINT(EM_DIAGRAM):   end;
392561    +else do;
MPRINT(EM_DIAGRAM):   else do;
392562    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
392563    +   _dm12 = put( G_Total_Relationship_Count , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Relationship_Count , BEST12. );
392564    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
392565    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
392566    +      G_Total_Relationship_Count0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = -1;
392567    +      G_Total_Relationship_Count1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = -1;
392568    +   end;
MPRINT(EM_DIAGRAM):   end;
392569    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
392570    +      G_Total_Relationship_Count0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 0;
392571    +      G_Total_Relationship_Count1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 1;
392572    +   end;
MPRINT(EM_DIAGRAM):   end;
392573    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
392574    +      G_Total_Relationship_Count0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 1;
392575    +      G_Total_Relationship_Count1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 0;
392576    +   end;
MPRINT(EM_DIAGRAM):   end;
392577    +   else do;
MPRINT(EM_DIAGRAM):   else do;
392578    +      G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
392579    +      G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
392580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
392581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392582    +   end;
MPRINT(EM_DIAGRAM):   end;
392583    +end;
MPRINT(EM_DIAGRAM):   end;
392584    +
392585    +*** Generate dummy variables for G_Total_Trans_Ct ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Trans_Ct ;
392586    +drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2 G_Total_Trans_Ct3
392587    +        G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2
G_Total_Trans_Ct3 G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
392588    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
392589    +G_Total_Trans_Ct0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 0;
392590    +G_Total_Trans_Ct1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 0;
392591    +G_Total_Trans_Ct2 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 0;
392592    +G_Total_Trans_Ct3 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 0;
392593    +G_Total_Trans_Ct4 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 0;
392594    +G_Total_Trans_Ct5 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 0;
392595    +G_Total_Trans_Ct6 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 0;
392596    +if missing( G_Total_Trans_Ct ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Trans_Ct ) then do;
392597    +   G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
392598    +   G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
392599    +   G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
392600    +   G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
392601    +   G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
392602    +   G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
392603    +   G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
392604    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
392605    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392606    +end;
MPRINT(EM_DIAGRAM):   end;
392607    +else do;
MPRINT(EM_DIAGRAM):   else do;
392608    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
392609    +   _dm12 = put( G_Total_Trans_Ct , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Trans_Ct , BEST12. );
392610    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
392611    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
392612    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
392613    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
392614    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
392615    +            G_Total_Trans_Ct0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 1;
392616    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392617    +         end;
MPRINT(EM_DIAGRAM):   end;
392618    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392619    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
392620    +               G_Total_Trans_Ct1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 1;
392621    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392622    +            end;
MPRINT(EM_DIAGRAM):   end;
392623    +         end;
MPRINT(EM_DIAGRAM):   end;
392624    +      end;
MPRINT(EM_DIAGRAM):   end;
392625    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392626    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
392627    +            G_Total_Trans_Ct2 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 1;
392628    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392629    +         end;
MPRINT(EM_DIAGRAM):   end;
392630    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392631    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
392632    +               G_Total_Trans_Ct3 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 1;
392633    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392634    +            end;
MPRINT(EM_DIAGRAM):   end;
392635    +         end;
MPRINT(EM_DIAGRAM):   end;
392636    +      end;
MPRINT(EM_DIAGRAM):   end;
392637    +   end;
MPRINT(EM_DIAGRAM):   end;
392638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
392639    +      if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
392640    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
392641    +            G_Total_Trans_Ct4 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 1;
392642    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392643    +         end;
MPRINT(EM_DIAGRAM):   end;
392644    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392645    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
392646    +               G_Total_Trans_Ct5 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 1;
392647    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392648    +            end;
MPRINT(EM_DIAGRAM):   end;
392649    +         end;
MPRINT(EM_DIAGRAM):   end;
392650    +      end;
MPRINT(EM_DIAGRAM):   end;
392651    +      else do;
MPRINT(EM_DIAGRAM):   else do;
392652    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
392653    +            G_Total_Trans_Ct6 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 1;
392654    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392655    +         end;
MPRINT(EM_DIAGRAM):   end;
392656    +         else do;
MPRINT(EM_DIAGRAM):   else do;
392657    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
392658    +               G_Total_Trans_Ct0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = -1;
392659    +               G_Total_Trans_Ct1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = -1;
392660    +               G_Total_Trans_Ct2 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = -1;
392661    +               G_Total_Trans_Ct3 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = -1;
392662    +               G_Total_Trans_Ct4 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = -1;
392663    +               G_Total_Trans_Ct5 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = -1;
392664    +               G_Total_Trans_Ct6 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = -1;
392665    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
392666    +            end;
MPRINT(EM_DIAGRAM):   end;
392667    +         end;
MPRINT(EM_DIAGRAM):   end;
392668    +      end;
MPRINT(EM_DIAGRAM):   end;
392669    +   end;
MPRINT(EM_DIAGRAM):   end;
392670    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
392671    +      G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
392672    +      G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
392673    +      G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
392674    +      G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
392675    +      G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
392676    +      G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
392677    +      G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
392678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
392679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392680    +   end;
MPRINT(EM_DIAGRAM):   end;
392681    +end;
MPRINT(EM_DIAGRAM):   end;
392682    +
392683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392684    +*** Checking missing input Interval
392685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
392686    +
392687    +IF NMISS(
392688    +   RANGE_LOG_Total_Trans_Amt ,
392689    +   RANGE_SQRT_Avg_Utilization_Ratio ,
392690    +   RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ,
392691    +   RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ,
392692    +   RANGE_Total_Revolving_Bal   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( RANGE_LOG_Total_Trans_Amt , RANGE_SQRT_Avg_Utilization_Ratio ,
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 , RANGE_SQRT_Total_Ct_Chng_Q4_Q1 , RANGE_Total_Revolving_Bal )
THEN DO;
392693    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
392694    +
392695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
392696    +END;
MPRINT(EM_DIAGRAM):   END;
392697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392698    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
392699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392700    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
392701    +   S_RANGE_LOG_Total_Trans_Amt
392702    +          =    -1.34747068578628 +      5.0128535511494 *
392703    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
392704    +   S_RANGE_SQRT_Avg_Utilization_Rat
392705    +          =    -1.34502734827526 +     3.19469433649726 *
392706    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 + 3.19469433649726
* RANGE_SQRT_Avg_Utilization_Ratio ;
392707    +   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392708    +          =    -7.21426643857002 +     15.4166020949803 *
392709    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 + 15.4166020949803
* RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
392710    +   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392711    +          =    -6.16155815683527 +     14.2791680762335 *
392712    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 + 14.2791680762335
* RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
392713    +   S_RANGE_Total_Revolving_Bal
392714    +          =    -1.43123481780808 +     3.09032113107013 *
392715    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013 *
RANGE_Total_Revolving_Bal ;
392716    +END;
MPRINT(EM_DIAGRAM):   END;
392717    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
392718    +   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
392719    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
= . ;
392720    +   ELSE S_RANGE_LOG_Total_Trans_Amt
392721    +          =    -1.34747068578628 +      5.0128535511494 *
392722    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
392723    +   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
392724    +        S_RANGE_SQRT_Avg_Utilization_Rat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
S_RANGE_SQRT_Avg_Utilization_Rat = . ;
392725    +   ELSE S_RANGE_SQRT_Avg_Utilization_Rat
392726    +          =    -1.34502734827526 +     3.19469433649726 *
392727    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 +
3.19469433649726 * RANGE_SQRT_Avg_Utilization_Ratio ;
392728    +   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
392729    +        S_RANGE_SQRT_Total_Amt_Chng_Q4_Q  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = . ;
392730    +   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392731    +          =    -7.21426643857002 +     15.4166020949803 *
392732    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 +
15.4166020949803 * RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
392733    +   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
392734    +        S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = . ;
392735    +   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392736    +          =    -6.16155815683527 +     14.2791680762335 *
392737    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 +
14.2791680762335 * RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
392738    +   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
392739    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
= . ;
392740    +   ELSE S_RANGE_Total_Revolving_Bal
392741    +          =    -1.43123481780808 +     3.09032113107013 *
392742    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013
* RANGE_Total_Revolving_Bal ;
392743    +END;
MPRINT(EM_DIAGRAM):   END;
392744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392745    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
392746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392748    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
392749    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
392750    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
392751    +   H1x1_1  =     1.44473759114969 * S_RANGE_LOG_Total_Trans_Amt
392752    +          +     0.47469974135661 * S_RANGE_SQRT_Avg_Utilization_Rat
392753    +          +    -0.17678823515738 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392754    +          +    -0.08782898438529 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392755    +          +    -0.10170689517149 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.44473759114969 * S_RANGE_LOG_Total_Trans_Amt +
0.47469974135661 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.17678823515738 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.08782898438529 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.10170689517149 * S_RANGE_Total_Revolving_Bal ;
392756    +   H1x1_2  =     0.36929693742029 * S_RANGE_LOG_Total_Trans_Amt
392757    +          +    -0.01537901404435 * S_RANGE_SQRT_Avg_Utilization_Rat
392758    +          +     -0.1616364096451 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392759    +          +    -0.37499771317328 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392760    +          +     0.08835331999141 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.36929693742029 * S_RANGE_LOG_Total_Trans_Amt +
-0.01537901404435 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.1616364096451 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.37499771317328 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.08835331999141 * S_RANGE_Total_Revolving_Bal ;
392761    +   H1x1_3  =    -0.65329413311593 * S_RANGE_LOG_Total_Trans_Amt
392762    +          +    -0.00989031057679 * S_RANGE_SQRT_Avg_Utilization_Rat
392763    +          +     0.09776476847062 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392764    +          +    -0.21803849346102 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392765    +          +     0.04657341403647 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.65329413311593 * S_RANGE_LOG_Total_Trans_Amt +
-0.00989031057679 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.09776476847062 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.21803849346102 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.04657341403647 * S_RANGE_Total_Revolving_Bal ;
392766    +   H1x1_4  =     0.04977727115697 * S_RANGE_LOG_Total_Trans_Amt
392767    +          +    -0.10521857706601 * S_RANGE_SQRT_Avg_Utilization_Rat
392768    +          +     0.03861353473435 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392769    +          +    -0.09694035600906 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392770    +          +      0.9203372027378 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.04977727115697 * S_RANGE_LOG_Total_Trans_Amt +
-0.10521857706601 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.03861353473435 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.09694035600906 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.9203372027378 * S_RANGE_Total_Revolving_Bal ;
392771    +   H1x1_5  =    -1.59771632812293 * S_RANGE_LOG_Total_Trans_Amt
392772    +          +    -0.02987802593845 * S_RANGE_SQRT_Avg_Utilization_Rat
392773    +          +     0.10595296726603 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392774    +          +     0.27930848833776 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392775    +          +     0.04184764543759 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.59771632812293 * S_RANGE_LOG_Total_Trans_Amt +
-0.02987802593845 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.10595296726603 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.27930848833776 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.04184764543759 * S_RANGE_Total_Revolving_Bal ;
392776    +   H1x1_6  =    -2.22002826316663 * S_RANGE_LOG_Total_Trans_Amt
392777    +          +     0.21449118089117 * S_RANGE_SQRT_Avg_Utilization_Rat
392778    +          +    -0.32833690690622 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392779    +          +     -0.2609169087665 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392780    +          +    -0.09335223376937 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.22002826316663 * S_RANGE_LOG_Total_Trans_Amt +
0.21449118089117 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.32833690690622 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.2609169087665 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.09335223376937 * S_RANGE_Total_Revolving_Bal ;
392781    +   H1x1_7  =     0.72365350252617 * S_RANGE_LOG_Total_Trans_Amt
392782    +          +    -0.12419914430011 * S_RANGE_SQRT_Avg_Utilization_Rat
392783    +          +     0.33890432072219 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392784    +          +     0.17595883654803 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392785    +          +    -0.06385044401415 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0.72365350252617 * S_RANGE_LOG_Total_Trans_Amt +
-0.12419914430011 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.33890432072219 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.17595883654803 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.06385044401415 * S_RANGE_Total_Revolving_Bal ;
392786    +   H1x1_8  =    -0.49450992077366 * S_RANGE_LOG_Total_Trans_Amt
392787    +          +    -0.05101251026586 * S_RANGE_SQRT_Avg_Utilization_Rat
392788    +          +     0.04194737766537 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
392789    +          +    -0.07281283622008 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
392790    +          +     -0.2334475719234 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_8 = -0.49450992077366 * S_RANGE_LOG_Total_Trans_Amt +
-0.05101251026586 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.04194737766537 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.07281283622008 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.2334475719234 * S_RANGE_Total_Revolving_Bal ;
392791    +   H1x1_1  = H1x1_1  +      0.1401700161345 * G_Contacts_Count_12_mon0
392792    +          +     0.16853078942958 * G_Contacts_Count_12_mon1
392793    +          +     0.01393498187406 * G_Contacts_Count_12_mon2
392794    +          +    -0.06426539048063 * G_Contacts_Count_12_mon3
392795    +          +     0.16424725078514 * G_Customer_Age0  +     0.00806065325306 *
392796    +        G_Customer_Age1  +     0.58854449762957 * G_Customer_Age2
392797    +          +    -0.04304863480935 * G_Customer_Age3  +    -0.09153885425916 *
392798    +        G_Customer_Age4  +    -0.03009001489594 * G_Customer_Age5
392799    +          +    -0.01277382132587 * G_Customer_Age6  +    -0.05120552017464 *
392800    +        G_Customer_Age7  +    -0.19484100703007 * G_Customer_Age8
392801    +          +     0.36400231982018 * G_Customer_Age9  +      0.2128372684892 *
392802    +        G_Months_Inactive_12_mon0  +     0.08881972076719 *
392803    +        G_Months_Inactive_12_mon1  +     0.01871007502673 *
392804    +        G_Months_Inactive_12_mon2  +      0.1377784670933 *
392805    +        G_Months_Inactive_12_mon3  +      -0.187522328146 * G_Months_on_book0
392806    +          +     0.10828753003058 * G_Months_on_book1
392807    +          +    -0.01639538197714 * G_Months_on_book2
392808    +          +    -0.09230711881682 * G_Months_on_book3
392809    +          +     0.14260542762716 * G_Months_on_book4
392810    +          +     0.34699450273742 * G_Months_on_book5
392811    +          +     0.36459716975736 * G_Months_on_book6
392812    +          +     0.02278453878232 * G_Months_on_book7
392813    +          +     0.51803242503762 * G_Total_Relationship_Count0
392814    +          +     0.06899136153159 * G_Total_Relationship_Count1
392815    +          +     0.68336451142155 * G_Total_Trans_Ct0
392816    +          +     0.06265331654524 * G_Total_Trans_Ct1
392817    +          +     0.15673138151852 * G_Total_Trans_Ct2
392818    +          +    -0.26306701715366 * G_Total_Trans_Ct3
392819    +          +     0.26998656463782 * G_Total_Trans_Ct4
392820    +          +    -0.12858111211938 * G_Total_Trans_Ct5
392821    +          +    -0.81643640957676 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1401700161345 * G_Contacts_Count_12_mon0 +
0.16853078942958 * G_Contacts_Count_12_mon1 + 0.01393498187406 * G_Contacts_Count_12_mon2 +
-0.06426539048063 * G_Contacts_Count_12_mon3 + 0.16424725078514 * G_Customer_Age0 +
0.00806065325306 * G_Customer_Age1 + 0.58854449762957 * G_Customer_Age2 + -0.04304863480935 *
G_Customer_Age3 + -0.09153885425916 * G_Customer_Age4 + -0.03009001489594 * G_Customer_Age5 +
-0.01277382132587 * G_Customer_Age6 + -0.05120552017464 * G_Customer_Age7 + -0.19484100703007
* G_Customer_Age8 + 0.36400231982018 * G_Customer_Age9 + 0.2128372684892 *
G_Months_Inactive_12_mon0 + 0.08881972076719 * G_Months_Inactive_12_mon1 + 0.01871007502673 *
G_Months_Inactive_12_mon2 + 0.1377784670933 * G_Months_Inactive_12_mon3 + -0.187522328146 *
G_Months_on_book0 + 0.10828753003058 * G_Months_on_book1 + -0.01639538197714 *
G_Months_on_book2 + -0.09230711881682 * G_Months_on_book3 + 0.14260542762716 *
G_Months_on_book4 + 0.34699450273742 * G_Months_on_book5 + 0.36459716975736 *
G_Months_on_book6 + 0.02278453878232 * G_Months_on_book7 + 0.51803242503762 *
G_Total_Relationship_Count0 + 0.06899136153159 * G_Total_Relationship_Count1 +
0.68336451142155 * G_Total_Trans_Ct0 + 0.06265331654524 * G_Total_Trans_Ct1 + 0.15673138151852
* G_Total_Trans_Ct2 + -0.26306701715366 * G_Total_Trans_Ct3 + 0.26998656463782 *
G_Total_Trans_Ct4 + -0.12858111211938 * G_Total_Trans_Ct5 + -0.81643640957676 *
G_Total_Trans_Ct6 ;
392822    +   H1x1_2  = H1x1_2  +     0.21444873800256 * G_Contacts_Count_12_mon0
392823    +          +     0.07842833493788 * G_Contacts_Count_12_mon1
392824    +          +    -0.27823122493985 * G_Contacts_Count_12_mon2
392825    +          +     0.01239271758814 * G_Contacts_Count_12_mon3
392826    +          +     0.20121751980973 * G_Customer_Age0  +     0.04172957843644 *
392827    +        G_Customer_Age1  +    -0.16008797816304 * G_Customer_Age2
392828    +          +     0.27840956839148 * G_Customer_Age3  +    -0.02289075036396 *
392829    +        G_Customer_Age4  +     0.33090235630478 * G_Customer_Age5
392830    +          +     0.08213248268936 * G_Customer_Age6  +     0.03126151274543 *
392831    +        G_Customer_Age7  +    -0.24954134832656 * G_Customer_Age8
392832    +          +    -0.34342240474159 * G_Customer_Age9  +     0.26688451751649 *
392833    +        G_Months_Inactive_12_mon0  +     -0.0849028829979 *
392834    +        G_Months_Inactive_12_mon1  +    -0.34906695553271 *
392835    +        G_Months_Inactive_12_mon2  +    -0.26802657223186 *
392836    +        G_Months_Inactive_12_mon3  +    -0.18828281305165 * G_Months_on_book0
392837    +          +     0.11689915130834 * G_Months_on_book1
392838    +          +     0.15571564774987 * G_Months_on_book2
392839    +          +     0.12417575218142 * G_Months_on_book3
392840    +          +    -0.20544107518855 * G_Months_on_book4
392841    +          +    -0.14961896181352 * G_Months_on_book5
392842    +          +     -0.2163634043033 * G_Months_on_book6
392843    +          +    -0.15920685944267 * G_Months_on_book7
392844    +          +     0.05721641813512 * G_Total_Relationship_Count0
392845    +          +     0.10738726316658 * G_Total_Relationship_Count1
392846    +          +     0.46770513165672 * G_Total_Trans_Ct0
392847    +          +    -0.49698932986798 * G_Total_Trans_Ct1
392848    +          +    -0.12245383948982 * G_Total_Trans_Ct2
392849    +          +    -0.55196286962318 * G_Total_Trans_Ct3
392850    +          +    -0.15095383414794 * G_Total_Trans_Ct4
392851    +          +    -0.28805837771929 * G_Total_Trans_Ct5
392852    +          +     0.07494905893528 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.21444873800256 * G_Contacts_Count_12_mon0 +
0.07842833493788 * G_Contacts_Count_12_mon1 + -0.27823122493985 * G_Contacts_Count_12_mon2 +
0.01239271758814 * G_Contacts_Count_12_mon3 + 0.20121751980973 * G_Customer_Age0 +
0.04172957843644 * G_Customer_Age1 + -0.16008797816304 * G_Customer_Age2 + 0.27840956839148 *
G_Customer_Age3 + -0.02289075036396 * G_Customer_Age4 + 0.33090235630478 * G_Customer_Age5 +
0.08213248268936 * G_Customer_Age6 + 0.03126151274543 * G_Customer_Age7 + -0.24954134832656 *
G_Customer_Age8 + -0.34342240474159 * G_Customer_Age9 + 0.26688451751649 *
G_Months_Inactive_12_mon0 + -0.0849028829979 * G_Months_Inactive_12_mon1 + -0.34906695553271 *
G_Months_Inactive_12_mon2 + -0.26802657223186 * G_Months_Inactive_12_mon3 + -0.18828281305165
* G_Months_on_book0 + 0.11689915130834 * G_Months_on_book1 + 0.15571564774987 *
G_Months_on_book2 + 0.12417575218142 * G_Months_on_book3 + -0.20544107518855 *
G_Months_on_book4 + -0.14961896181352 * G_Months_on_book5 + -0.2163634043033 *
G_Months_on_book6 + -0.15920685944267 * G_Months_on_book7 + 0.05721641813512 *
G_Total_Relationship_Count0 + 0.10738726316658 * G_Total_Relationship_Count1 +
0.46770513165672 * G_Total_Trans_Ct0 + -0.49698932986798 * G_Total_Trans_Ct1 +
-0.12245383948982 * G_Total_Trans_Ct2 + -0.55196286962318 * G_Total_Trans_Ct3 +
-0.15095383414794 * G_Total_Trans_Ct4 + -0.28805837771929 * G_Total_Trans_Ct5 +
0.07494905893528 * G_Total_Trans_Ct6 ;
392853    +   H1x1_3  = H1x1_3  +     0.07076997283851 * G_Contacts_Count_12_mon0
392854    +          +      0.4053112894421 * G_Contacts_Count_12_mon1
392855    +          +    -0.01193233191664 * G_Contacts_Count_12_mon2
392856    +          +     0.11019777907243 * G_Contacts_Count_12_mon3
392857    +          +     0.07706884296578 * G_Customer_Age0  +    -0.37152092198474 *
392858    +        G_Customer_Age1  +    -0.22828344167191 * G_Customer_Age2
392859    +          +    -0.05061057943019 * G_Customer_Age3  +    -0.11730355838374 *
392860    +        G_Customer_Age4  +    -0.16657836727629 * G_Customer_Age5
392861    +          +    -0.19930312229165 * G_Customer_Age6  +    -0.22497785692239 *
392862    +        G_Customer_Age7  +        0.02355586974 * G_Customer_Age8
392863    +          +      0.1209977427348 * G_Customer_Age9  +    -0.00246569984757 *
392864    +        G_Months_Inactive_12_mon0  +    -0.04282271630458 *
392865    +        G_Months_Inactive_12_mon1  +       0.192766910686 *
392866    +        G_Months_Inactive_12_mon2  +      0.0688797059827 *
392867    +        G_Months_Inactive_12_mon3  +    -0.07346516413568 * G_Months_on_book0
392868    +          +     0.29892632213851 * G_Months_on_book1
392869    +          +    -0.01256186499973 * G_Months_on_book2
392870    +          +    -0.15627292530888 * G_Months_on_book3
392871    +          +    -0.38203200145326 * G_Months_on_book4
392872    +          +     0.02609861849884 * G_Months_on_book5
392873    +          +    -0.10987207384174 * G_Months_on_book6
392874    +          +     0.13169504559396 * G_Months_on_book7
392875    +          +    -0.09494293869854 * G_Total_Relationship_Count0
392876    +          +     0.03030101782007 * G_Total_Relationship_Count1
392877    +          +     0.09922577750406 * G_Total_Trans_Ct0
392878    +          +     0.62167149120482 * G_Total_Trans_Ct1
392879    +          +     1.09837857192449 * G_Total_Trans_Ct2
392880    +          +     0.88990320473212 * G_Total_Trans_Ct3
392881    +          +     0.14603842645544 * G_Total_Trans_Ct4
392882    +          +    -0.05725013848453 * G_Total_Trans_Ct5
392883    +          +    -0.07479772375474 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.07076997283851 * G_Contacts_Count_12_mon0 +
0.4053112894421 * G_Contacts_Count_12_mon1 + -0.01193233191664 * G_Contacts_Count_12_mon2 +
0.11019777907243 * G_Contacts_Count_12_mon3 + 0.07706884296578 * G_Customer_Age0 +
-0.37152092198474 * G_Customer_Age1 + -0.22828344167191 * G_Customer_Age2 + -0.05061057943019
* G_Customer_Age3 + -0.11730355838374 * G_Customer_Age4 + -0.16657836727629 * G_Customer_Age5
+ -0.19930312229165 * G_Customer_Age6 + -0.22497785692239 * G_Customer_Age7 + 0.02355586974 *
G_Customer_Age8 + 0.1209977427348 * G_Customer_Age9 + -0.00246569984757 *
G_Months_Inactive_12_mon0 + -0.04282271630458 * G_Months_Inactive_12_mon1 + 0.192766910686 *
G_Months_Inactive_12_mon2 + 0.0688797059827 * G_Months_Inactive_12_mon3 + -0.07346516413568 *
G_Months_on_book0 + 0.29892632213851 * G_Months_on_book1 + -0.01256186499973 *
G_Months_on_book2 + -0.15627292530888 * G_Months_on_book3 + -0.38203200145326 *
G_Months_on_book4 + 0.02609861849884 * G_Months_on_book5 + -0.10987207384174 *
G_Months_on_book6 + 0.13169504559396 * G_Months_on_book7 + -0.09494293869854 *
G_Total_Relationship_Count0 + 0.03030101782007 * G_Total_Relationship_Count1 +
0.09922577750406 * G_Total_Trans_Ct0 + 0.62167149120482 * G_Total_Trans_Ct1 + 1.09837857192449
* G_Total_Trans_Ct2 + 0.88990320473212 * G_Total_Trans_Ct3 + 0.14603842645544 *
G_Total_Trans_Ct4 + -0.05725013848453 * G_Total_Trans_Ct5 + -0.07479772375474 *
G_Total_Trans_Ct6 ;
392884    +   H1x1_4  = H1x1_4  +    -0.20788908396801 * G_Contacts_Count_12_mon0
392885    +          +    -0.39937066992208 * G_Contacts_Count_12_mon1
392886    +          +     0.23098390094251 * G_Contacts_Count_12_mon2
392887    +          +      0.2127179266351 * G_Contacts_Count_12_mon3
392888    +          +    -0.11711142776988 * G_Customer_Age0  +     0.08758329474303 *
392889    +        G_Customer_Age1  +    -0.12946577860857 * G_Customer_Age2
392890    +          +    -0.20984622032713 * G_Customer_Age3  +     0.01543054380114 *
392891    +        G_Customer_Age4  +     0.01744527086181 * G_Customer_Age5
392892    +          +    -0.12679305846676 * G_Customer_Age6  +    -0.15490204363057 *
392893    +        G_Customer_Age7  +    -0.03666340889065 * G_Customer_Age8
392894    +          +     0.38882646973981 * G_Customer_Age9  +     0.25963553341962 *
392895    +        G_Months_Inactive_12_mon0  +     0.07006278804627 *
392896    +        G_Months_Inactive_12_mon1  +    -0.02110503693861 *
392897    +        G_Months_Inactive_12_mon2  +    -0.10613087621136 *
392898    +        G_Months_Inactive_12_mon3  +    -0.21095466449456 * G_Months_on_book0
392899    +          +    -0.06453257990504 * G_Months_on_book1
392900    +          +     0.19605382103997 * G_Months_on_book2
392901    +          +     0.07222632323077 * G_Months_on_book3
392902    +          +    -0.05336430789811 * G_Months_on_book4
392903    +          +     0.11363368224674 * G_Months_on_book5
392904    +          +     0.09853243776679 * G_Months_on_book6
392905    +          +     0.06881256086949 * G_Months_on_book7
392906    +          +    -0.11915180567564 * G_Total_Relationship_Count0
392907    +          +     0.08464523731571 * G_Total_Relationship_Count1
392908    +          +     -0.0582771620162 * G_Total_Trans_Ct0
392909    +          +    -0.11735306221869 * G_Total_Trans_Ct1
392910    +          +     0.07977042868499 * G_Total_Trans_Ct2
392911    +          +    -0.01121366479248 * G_Total_Trans_Ct3
392912    +          +     0.00086124112134 * G_Total_Trans_Ct4
392913    +          +    -0.14234381283026 * G_Total_Trans_Ct5
392914    +          +    -0.10161876925237 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.20788908396801 * G_Contacts_Count_12_mon0 +
-0.39937066992208 * G_Contacts_Count_12_mon1 + 0.23098390094251 * G_Contacts_Count_12_mon2 +
0.2127179266351 * G_Contacts_Count_12_mon3 + -0.11711142776988 * G_Customer_Age0 +
0.08758329474303 * G_Customer_Age1 + -0.12946577860857 * G_Customer_Age2 + -0.20984622032713 *
G_Customer_Age3 + 0.01543054380114 * G_Customer_Age4 + 0.01744527086181 * G_Customer_Age5 +
-0.12679305846676 * G_Customer_Age6 + -0.15490204363057 * G_Customer_Age7 + -0.03666340889065
* G_Customer_Age8 + 0.38882646973981 * G_Customer_Age9 + 0.25963553341962 *
G_Months_Inactive_12_mon0 + 0.07006278804627 * G_Months_Inactive_12_mon1 + -0.02110503693861 *
G_Months_Inactive_12_mon2 + -0.10613087621136 * G_Months_Inactive_12_mon3 + -0.21095466449456
* G_Months_on_book0 + -0.06453257990504 * G_Months_on_book1 + 0.19605382103997 *
G_Months_on_book2 + 0.07222632323077 * G_Months_on_book3 + -0.05336430789811 *
G_Months_on_book4 + 0.11363368224674 * G_Months_on_book5 + 0.09853243776679 *
G_Months_on_book6 + 0.06881256086949 * G_Months_on_book7 + -0.11915180567564 *
G_Total_Relationship_Count0 + 0.08464523731571 * G_Total_Relationship_Count1 +
-0.0582771620162 * G_Total_Trans_Ct0 + -0.11735306221869 * G_Total_Trans_Ct1 +
0.07977042868499 * G_Total_Trans_Ct2 + -0.01121366479248 * G_Total_Trans_Ct3 +
0.00086124112134 * G_Total_Trans_Ct4 + -0.14234381283026 * G_Total_Trans_Ct5 +
-0.10161876925237 * G_Total_Trans_Ct6 ;
392915    +   H1x1_5  = H1x1_5  +    -0.56902878790282 * G_Contacts_Count_12_mon0
392916    +          +    -0.16661261863249 * G_Contacts_Count_12_mon1
392917    +          +     0.08076675187438 * G_Contacts_Count_12_mon2
392918    +          +    -0.04057310022146 * G_Contacts_Count_12_mon3
392919    +          +    -0.48914285297075 * G_Customer_Age0  +     0.00170634322548 *
392920    +        G_Customer_Age1  +    -0.03975363775767 * G_Customer_Age2
392921    +          +    -0.01004834554468 * G_Customer_Age3  +     0.07215975430623 *
392922    +        G_Customer_Age4  +     0.11860041310799 * G_Customer_Age5
392923    +          +     0.04386124283943 * G_Customer_Age6  +    -0.02226006521088 *
392924    +        G_Customer_Age7  +     -0.0829461915445 * G_Customer_Age8
392925    +          +     0.97010783558513 * G_Customer_Age9  +    -0.35584533888723 *
392926    +        G_Months_Inactive_12_mon0  +      0.1574507014307 *
392927    +        G_Months_Inactive_12_mon1  +    -0.22690548181964 *
392928    +        G_Months_Inactive_12_mon2  +    -0.02402805082996 *
392929    +        G_Months_Inactive_12_mon3  +    -0.10211365537508 * G_Months_on_book0
392930    +          +    -0.40331789307737 * G_Months_on_book1
392931    +          +       0.111045361897 * G_Months_on_book2
392932    +          +     0.10992466576811 * G_Months_on_book3
392933    +          +     0.24056560603644 * G_Months_on_book4
392934    +          +     0.09226782022325 * G_Months_on_book5
392935    +          +     0.30704641402586 * G_Months_on_book6
392936    +          +     0.02608767076246 * G_Months_on_book7
392937    +          +    -0.10991821081945 * G_Total_Relationship_Count0
392938    +          +      0.1857841458513 * G_Total_Relationship_Count1
392939    +          +    -0.57942689171738 * G_Total_Trans_Ct0
392940    +          +    -0.68283775177985 * G_Total_Trans_Ct1
392941    +          +    -0.89750294872048 * G_Total_Trans_Ct2
392942    +          +    -0.67542502097146 * G_Total_Trans_Ct3
392943    +          +     0.30309836129805 * G_Total_Trans_Ct4
392944    +          +     0.77487769325225 * G_Total_Trans_Ct5
392945    +          +     1.02605659513191 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56902878790282 * G_Contacts_Count_12_mon0 +
-0.16661261863249 * G_Contacts_Count_12_mon1 + 0.08076675187438 * G_Contacts_Count_12_mon2 +
-0.04057310022146 * G_Contacts_Count_12_mon3 + -0.48914285297075 * G_Customer_Age0 +
0.00170634322548 * G_Customer_Age1 + -0.03975363775767 * G_Customer_Age2 + -0.01004834554468 *
G_Customer_Age3 + 0.07215975430623 * G_Customer_Age4 + 0.11860041310799 * G_Customer_Age5 +
0.04386124283943 * G_Customer_Age6 + -0.02226006521088 * G_Customer_Age7 + -0.0829461915445 *
G_Customer_Age8 + 0.97010783558513 * G_Customer_Age9 + -0.35584533888723 *
G_Months_Inactive_12_mon0 + 0.1574507014307 * G_Months_Inactive_12_mon1 + -0.22690548181964 *
G_Months_Inactive_12_mon2 + -0.02402805082996 * G_Months_Inactive_12_mon3 + -0.10211365537508
* G_Months_on_book0 + -0.40331789307737 * G_Months_on_book1 + 0.111045361897 *
G_Months_on_book2 + 0.10992466576811 * G_Months_on_book3 + 0.24056560603644 *
G_Months_on_book4 + 0.09226782022325 * G_Months_on_book5 + 0.30704641402586 *
G_Months_on_book6 + 0.02608767076246 * G_Months_on_book7 + -0.10991821081945 *
G_Total_Relationship_Count0 + 0.1857841458513 * G_Total_Relationship_Count1 +
-0.57942689171738 * G_Total_Trans_Ct0 + -0.68283775177985 * G_Total_Trans_Ct1 +
-0.89750294872048 * G_Total_Trans_Ct2 + -0.67542502097146 * G_Total_Trans_Ct3 +
0.30309836129805 * G_Total_Trans_Ct4 + 0.77487769325225 * G_Total_Trans_Ct5 + 1.02605659513191
* G_Total_Trans_Ct6 ;
392946    +   H1x1_6  = H1x1_6  +     0.13221112619587 * G_Contacts_Count_12_mon0
392947    +          +     0.06873025796286 * G_Contacts_Count_12_mon1
392948    +          +     0.15106577297273 * G_Contacts_Count_12_mon2
392949    +          +     0.02758955335574 * G_Contacts_Count_12_mon3
392950    +          +    -0.29581799524654 * G_Customer_Age0  +     0.33907010213137 *
392951    +        G_Customer_Age1  +    -0.08748797480777 * G_Customer_Age2
392952    +          +     0.23533147426665 * G_Customer_Age3  +    -0.13925157936482 *
392953    +        G_Customer_Age4  +    -0.08246938124949 * G_Customer_Age5
392954    +          +     0.08407167326123 * G_Customer_Age6  +     0.10094164575548 *
392955    +        G_Customer_Age7  +     0.12405820912475 * G_Customer_Age8
392956    +          +    -0.27674343160986 * G_Customer_Age9  +     0.22216749562418 *
392957    +        G_Months_Inactive_12_mon0  +      0.0052454194168 *
392958    +        G_Months_Inactive_12_mon1  +     0.30735551162206 *
392959    +        G_Months_Inactive_12_mon2  +     0.13429569680964 *
392960    +        G_Months_Inactive_12_mon3  +     0.15691372658011 * G_Months_on_book0
392961    +          +    -0.01231673079327 * G_Months_on_book1
392962    +          +     0.04161404001317 * G_Months_on_book2
392963    +          +      0.0537182206432 * G_Months_on_book3
392964    +          +    -0.28089933654563 * G_Months_on_book4
392965    +          +    -0.17604035689726 * G_Months_on_book5
392966    +          +     0.24792432349444 * G_Months_on_book6
392967    +          +     0.03887575032577 * G_Months_on_book7
392968    +          +     0.16571491692789 * G_Total_Relationship_Count0
392969    +          +    -0.02906776998496 * G_Total_Relationship_Count1
392970    +          +     0.38599519077683 * G_Total_Trans_Ct0
392971    +          +     0.12103406377764 * G_Total_Trans_Ct1
392972    +          +      0.1665955472516 * G_Total_Trans_Ct2
392973    +          +     0.18842838894433 * G_Total_Trans_Ct3
392974    +          +    -0.22091742274663 * G_Total_Trans_Ct4
392975    +          +    -0.16146582654558 * G_Total_Trans_Ct5
392976    +          +    -0.58765542396033 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.13221112619587 * G_Contacts_Count_12_mon0 +
0.06873025796286 * G_Contacts_Count_12_mon1 + 0.15106577297273 * G_Contacts_Count_12_mon2 +
0.02758955335574 * G_Contacts_Count_12_mon3 + -0.29581799524654 * G_Customer_Age0 +
0.33907010213137 * G_Customer_Age1 + -0.08748797480777 * G_Customer_Age2 + 0.23533147426665 *
G_Customer_Age3 + -0.13925157936482 * G_Customer_Age4 + -0.08246938124949 * G_Customer_Age5 +
0.08407167326123 * G_Customer_Age6 + 0.10094164575548 * G_Customer_Age7 + 0.12405820912475 *
G_Customer_Age8 + -0.27674343160986 * G_Customer_Age9 + 0.22216749562418 *
G_Months_Inactive_12_mon0 + 0.0052454194168 * G_Months_Inactive_12_mon1 + 0.30735551162206 *
G_Months_Inactive_12_mon2 + 0.13429569680964 * G_Months_Inactive_12_mon3 + 0.15691372658011 *
G_Months_on_book0 + -0.01231673079327 * G_Months_on_book1 + 0.04161404001317 *
G_Months_on_book2 + 0.0537182206432 * G_Months_on_book3 + -0.28089933654563 *
G_Months_on_book4 + -0.17604035689726 * G_Months_on_book5 + 0.24792432349444 *
G_Months_on_book6 + 0.03887575032577 * G_Months_on_book7 + 0.16571491692789 *
G_Total_Relationship_Count0 + -0.02906776998496 * G_Total_Relationship_Count1 +
0.38599519077683 * G_Total_Trans_Ct0 + 0.12103406377764 * G_Total_Trans_Ct1 + 0.1665955472516
* G_Total_Trans_Ct2 + 0.18842838894433 * G_Total_Trans_Ct3 + -0.22091742274663 *
G_Total_Trans_Ct4 + -0.16146582654558 * G_Total_Trans_Ct5 + -0.58765542396033 *
G_Total_Trans_Ct6 ;
392977    +   H1x1_7  = H1x1_7  +     0.52979284063353 * G_Contacts_Count_12_mon0
392978    +          +    -0.00927053652737 * G_Contacts_Count_12_mon1
392979    +          +    -0.20151253370614 * G_Contacts_Count_12_mon2
392980    +          +    -0.32482266013186 * G_Contacts_Count_12_mon3
392981    +          +     0.28872518748449 * G_Customer_Age0  +     0.27372518652188 *
392982    +        G_Customer_Age1  +    -0.07641157440357 * G_Customer_Age2
392983    +          +     0.17754100292617 * G_Customer_Age3  +      0.2114128425926 *
392984    +        G_Customer_Age4  +     0.22055682171423 * G_Customer_Age5
392985    +          +    -0.00718728894877 * G_Customer_Age6  +    -0.05710622042797 *
392986    +        G_Customer_Age7  +     0.04337724542871 * G_Customer_Age8
392987    +          +    -0.34634671262451 * G_Customer_Age9  +     0.39054305983726 *
392988    +        G_Months_Inactive_12_mon0  +      0.0584319065406 *
392989    +        G_Months_Inactive_12_mon1  +     0.05072065962762 *
392990    +        G_Months_Inactive_12_mon2  +     -0.1972631125201 *
392991    +        G_Months_Inactive_12_mon3  +     0.10983158695445 * G_Months_on_book0
392992    +          +    -0.10780752641854 * G_Months_on_book1
392993    +          +     0.19890305414935 * G_Months_on_book2
392994    +          +    -0.02871177908005 * G_Months_on_book3
392995    +          +     0.07115842629584 * G_Months_on_book4
392996    +          +     0.07042674563525 * G_Months_on_book5
392997    +          +     0.12878592163255 * G_Months_on_book6
392998    +          +     -0.1092783116355 * G_Months_on_book7
392999    +          +    -0.10515030909733 * G_Total_Relationship_Count0
393000    +          +    -0.15072520294283 * G_Total_Relationship_Count1
393001    +          +     1.19553165179253 * G_Total_Trans_Ct0
393002    +          +     0.39569879975941 * G_Total_Trans_Ct1
393003    +          +     0.12633022908457 * G_Total_Trans_Ct2
393004    +          +     0.64963494787214 * G_Total_Trans_Ct3
393005    +          +    -0.03209221597063 * G_Total_Trans_Ct4
393006    +          +     0.01435877324027 * G_Total_Trans_Ct5
393007    +          +      -1.000780001653 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.52979284063353 * G_Contacts_Count_12_mon0 +
-0.00927053652737 * G_Contacts_Count_12_mon1 + -0.20151253370614 * G_Contacts_Count_12_mon2 +
-0.32482266013186 * G_Contacts_Count_12_mon3 + 0.28872518748449 * G_Customer_Age0 +
0.27372518652188 * G_Customer_Age1 + -0.07641157440357 * G_Customer_Age2 + 0.17754100292617 *
G_Customer_Age3 + 0.2114128425926 * G_Customer_Age4 + 0.22055682171423 * G_Customer_Age5 +
-0.00718728894877 * G_Customer_Age6 + -0.05710622042797 * G_Customer_Age7 + 0.04337724542871 *
G_Customer_Age8 + -0.34634671262451 * G_Customer_Age9 + 0.39054305983726 *
G_Months_Inactive_12_mon0 + 0.0584319065406 * G_Months_Inactive_12_mon1 + 0.05072065962762 *
G_Months_Inactive_12_mon2 + -0.1972631125201 * G_Months_Inactive_12_mon3 + 0.10983158695445 *
G_Months_on_book0 + -0.10780752641854 * G_Months_on_book1 + 0.19890305414935 *
G_Months_on_book2 + -0.02871177908005 * G_Months_on_book3 + 0.07115842629584 *
G_Months_on_book4 + 0.07042674563525 * G_Months_on_book5 + 0.12878592163255 *
G_Months_on_book6 + -0.1092783116355 * G_Months_on_book7 + -0.10515030909733 *
G_Total_Relationship_Count0 + -0.15072520294283 * G_Total_Relationship_Count1 +
1.19553165179253 * G_Total_Trans_Ct0 + 0.39569879975941 * G_Total_Trans_Ct1 + 0.12633022908457
* G_Total_Trans_Ct2 + 0.64963494787214 * G_Total_Trans_Ct3 + -0.03209221597063 *
G_Total_Trans_Ct4 + 0.01435877324027 * G_Total_Trans_Ct5 + -1.000780001653 * G_Total_Trans_Ct6
;
393008    +   H1x1_8  = H1x1_8  +     0.43559578908991 * G_Contacts_Count_12_mon0
393009    +          +     0.15482576026797 * G_Contacts_Count_12_mon1
393010    +          +     0.22003771328343 * G_Contacts_Count_12_mon2
393011    +          +    -0.32351859644489 * G_Contacts_Count_12_mon3
393012    +          +     0.25527818982735 * G_Customer_Age0  +    -0.34625101213556 *
393013    +        G_Customer_Age1  +    -0.10206653170454 * G_Customer_Age2
393014    +          +     0.16238377490538 * G_Customer_Age3  +     0.23820362187239 *
393015    +        G_Customer_Age4  +    -0.28893981282635 * G_Customer_Age5
393016    +          +    -0.15157347323935 * G_Customer_Age6  +    -0.09709525607225 *
393017    +        G_Customer_Age7  +     0.05101807706778 * G_Customer_Age8
393018    +          +      0.1833303362658 * G_Customer_Age9  +     0.22150219250501 *
393019    +        G_Months_Inactive_12_mon0  +      0.1914152418903 *
393020    +        G_Months_Inactive_12_mon1  +    -0.13661547545204 *
393021    +        G_Months_Inactive_12_mon2  +     0.04075969886218 *
393022    +        G_Months_Inactive_12_mon3  +     0.16588195769456 * G_Months_on_book0
393023    +          +     0.35595447039136 * G_Months_on_book1
393024    +          +    -0.13428049455488 * G_Months_on_book2
393025    +          +     0.11005558553554 * G_Months_on_book3
393026    +          +     0.04235545524164 * G_Months_on_book4
393027    +          +    -0.19070437958701 * G_Months_on_book5
393028    +          +     -0.0897976458589 * G_Months_on_book6
393029    +          +     0.15754587346328 * G_Months_on_book7
393030    +          +     0.77093275314634 * G_Total_Relationship_Count0
393031    +          +    -0.21505110573527 * G_Total_Relationship_Count1
393032    +          +     0.55685628450068 * G_Total_Trans_Ct0
393033    +          +      0.2374533906488 * G_Total_Trans_Ct1
393034    +          +     -0.1958105436154 * G_Total_Trans_Ct2
393035    +          +     0.13056576720194 * G_Total_Trans_Ct3
393036    +          +     0.00648614572271 * G_Total_Trans_Ct4
393037    +          +     0.15255649554313 * G_Total_Trans_Ct5
393038    +          +    -0.31681419802422 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_8 = H1x1_8 + 0.43559578908991 * G_Contacts_Count_12_mon0 +
0.15482576026797 * G_Contacts_Count_12_mon1 + 0.22003771328343 * G_Contacts_Count_12_mon2 +
-0.32351859644489 * G_Contacts_Count_12_mon3 + 0.25527818982735 * G_Customer_Age0 +
-0.34625101213556 * G_Customer_Age1 + -0.10206653170454 * G_Customer_Age2 + 0.16238377490538 *
G_Customer_Age3 + 0.23820362187239 * G_Customer_Age4 + -0.28893981282635 * G_Customer_Age5 +
-0.15157347323935 * G_Customer_Age6 + -0.09709525607225 * G_Customer_Age7 + 0.05101807706778 *
G_Customer_Age8 + 0.1833303362658 * G_Customer_Age9 + 0.22150219250501 *
G_Months_Inactive_12_mon0 + 0.1914152418903 * G_Months_Inactive_12_mon1 + -0.13661547545204 *
G_Months_Inactive_12_mon2 + 0.04075969886218 * G_Months_Inactive_12_mon3 + 0.16588195769456 *
G_Months_on_book0 + 0.35595447039136 * G_Months_on_book1 + -0.13428049455488 *
G_Months_on_book2 + 0.11005558553554 * G_Months_on_book3 + 0.04235545524164 *
G_Months_on_book4 + -0.19070437958701 * G_Months_on_book5 + -0.0897976458589 *
G_Months_on_book6 + 0.15754587346328 * G_Months_on_book7 + 0.77093275314634 *
G_Total_Relationship_Count0 + -0.21505110573527 * G_Total_Relationship_Count1 +
0.55685628450068 * G_Total_Trans_Ct0 + 0.2374533906488 * G_Total_Trans_Ct1 + -0.1958105436154
* G_Total_Trans_Ct2 + 0.13056576720194 * G_Total_Trans_Ct3 + 0.00648614572271 *
G_Total_Trans_Ct4 + 0.15255649554313 * G_Total_Trans_Ct5 + -0.31681419802422 *
G_Total_Trans_Ct6 ;
393039    +   H1x1_1  =     0.02650025320783 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.02650025320783 + H1x1_1 ;
393040    +   H1x1_2  =    -0.25684105730406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.25684105730406 + H1x1_2 ;
393041    +   H1x1_3  =    -0.50787825627603 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.50787825627603 + H1x1_3 ;
393042    +   H1x1_4  =     -0.5245695310695 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.5245695310695 + H1x1_4 ;
393043    +   H1x1_5  =     1.16436476363924 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.16436476363924 + H1x1_5 ;
393044    +   H1x1_6  =     0.33913994954524 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.33913994954524 + H1x1_6 ;
393045    +   H1x1_7  =     1.58805018436023 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.58805018436023 + H1x1_7 ;
393046    +   H1x1_8  =    -2.12315030302658 + H1x1_8 ;
MPRINT(EM_DIAGRAM):   H1x1_8 = -2.12315030302658 + H1x1_8 ;
393047    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
393048    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
393049    +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
393050    +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
393051    +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
393052    +   H1x1_4  = EXP(MIN(-0.5 * H1x1_4 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(MIN(-0.5 * H1x1_4 **2, _EXP_BAR));
393053    +   H1x1_5  = EXP(MIN(-0.5 * H1x1_5 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(MIN(-0.5 * H1x1_5 **2, _EXP_BAR));
393054    +   H1x1_6  = EXP(MIN(-0.5 * H1x1_6 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(MIN(-0.5 * H1x1_6 **2, _EXP_BAR));
393055    +   H1x1_7  = EXP(MIN(-0.5 * H1x1_7 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(MIN(-0.5 * H1x1_7 **2, _EXP_BAR));
393056    +   H1x1_8  = EXP(MIN(-0.5 * H1x1_8 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_8 = EXP(MIN(-0.5 * H1x1_8 **2, _EXP_BAR));
393057    +END;
MPRINT(EM_DIAGRAM):   END;
393058    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
393059    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
393060    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
393061    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
393062    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
393063    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
393064    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
393065    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
393066    +   H1x1_8  = .;
MPRINT(EM_DIAGRAM):   H1x1_8 = .;
393067    +END;
MPRINT(EM_DIAGRAM):   END;
393068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393069    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
393070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393071    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
393072    +   H2x1_1  =     0.08862660282113 * H1x1_1  +     0.40243412973248 * H1x1_2
393073    +          +     2.02443454653222 * H1x1_3  +    -1.72744500671302 * H1x1_4
393074    +          +      1.8238088425411 * H1x1_5  +    -1.93408809997984 * H1x1_6
393075    +          +    -0.75757402320895 * H1x1_7  +      1.1743020655621 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.08862660282113 * H1x1_1 + 0.40243412973248 * H1x1_2 +
2.02443454653222 * H1x1_3 + -1.72744500671302 * H1x1_4 + 1.8238088425411 * H1x1_5 +
-1.93408809997984 * H1x1_6 + -0.75757402320895 * H1x1_7 + 1.1743020655621 * H1x1_8 ;
393076    +   H2x1_2  =     2.04689085726492 * H1x1_1  +    -0.20793468317806 * H1x1_2
393077    +          +     0.88358710261429 * H1x1_3  +     0.56058137974114 * H1x1_4
393078    +          +     0.08505573871889 * H1x1_5  +     0.11321169903443 * H1x1_6
393079    +          +     0.28214925336371 * H1x1_7  +     0.93894860595328 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.04689085726492 * H1x1_1 + -0.20793468317806 * H1x1_2 +
0.88358710261429 * H1x1_3 + 0.56058137974114 * H1x1_4 + 0.08505573871889 * H1x1_5 +
0.11321169903443 * H1x1_6 + 0.28214925336371 * H1x1_7 + 0.93894860595328 * H1x1_8 ;
393080    +   H2x1_3  =     -1.2184808904648 * H1x1_1  +    -0.19460736676124 * H1x1_2
393081    +          +    -0.46304820196999 * H1x1_3  +     1.67787333554577 * H1x1_4
393082    +          +    -1.29800064995406 * H1x1_5  +     0.66380298593322 * H1x1_6
393083    +          +     0.90021515216269 * H1x1_7  +    -1.34294578583942 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.2184808904648 * H1x1_1 + -0.19460736676124 * H1x1_2 +
-0.46304820196999 * H1x1_3 + 1.67787333554577 * H1x1_4 + -1.29800064995406 * H1x1_5 +
0.66380298593322 * H1x1_6 + 0.90021515216269 * H1x1_7 + -1.34294578583942 * H1x1_8 ;
393084    +   H2x1_4  =     0.07420954177297 * H1x1_1  +     0.06245751395874 * H1x1_2
393085    +          +     1.75101414002355 * H1x1_3  +    -0.69876187290575 * H1x1_4
393086    +          +     1.64522917242144 * H1x1_5  +     0.58439192388549 * H1x1_6
393087    +          +     1.71684196350147 * H1x1_7  +    -0.09182458057059 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.07420954177297 * H1x1_1 + 0.06245751395874 * H1x1_2 +
1.75101414002355 * H1x1_3 + -0.69876187290575 * H1x1_4 + 1.64522917242144 * H1x1_5 +
0.58439192388549 * H1x1_6 + 1.71684196350147 * H1x1_7 + -0.09182458057059 * H1x1_8 ;
393088    +   H2x1_5  =    -1.98024643363819 * H1x1_1  +     0.27225061249304 * H1x1_2
393089    +          +     0.07627795727865 * H1x1_3  +    -0.91980460817422 * H1x1_4
393090    +          +    -0.59096956501431 * H1x1_5  +    -0.50710914261851 * H1x1_6
393091    +          +     -1.9770496377027 * H1x1_7  +     0.24951909623587 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.98024643363819 * H1x1_1 + 0.27225061249304 * H1x1_2 +
0.07627795727865 * H1x1_3 + -0.91980460817422 * H1x1_4 + -0.59096956501431 * H1x1_5 +
-0.50710914261851 * H1x1_6 + -1.9770496377027 * H1x1_7 + 0.24951909623587 * H1x1_8 ;
393092    +   H2x1_6  =    -2.24015626845506 * H1x1_1  +    -1.85105325756077 * H1x1_2
393093    +          +     1.03975495809148 * H1x1_3  +      1.3268323396913 * H1x1_4
393094    +          +     1.61406315831088 * H1x1_5  +    -1.31415185757273 * H1x1_6
393095    +          +     -1.5906272596979 * H1x1_7  +     1.44315645396274 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.24015626845506 * H1x1_1 + -1.85105325756077 * H1x1_2 +
1.03975495809148 * H1x1_3 + 1.3268323396913 * H1x1_4 + 1.61406315831088 * H1x1_5 +
-1.31415185757273 * H1x1_6 + -1.5906272596979 * H1x1_7 + 1.44315645396274 * H1x1_8 ;
393096    +   H2x1_7  =    -0.68488963405252 * H1x1_1  +    -1.78048017163839 * H1x1_2
393097    +          +    -0.80113851495727 * H1x1_3  +    -0.30303871473155 * H1x1_4
393098    +          +    -0.89424738421983 * H1x1_5  +     0.88296045952163 * H1x1_6
393099    +          +     1.46780135693795 * H1x1_7  +    -0.54776833354744 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -0.68488963405252 * H1x1_1 + -1.78048017163839 * H1x1_2 +
-0.80113851495727 * H1x1_3 + -0.30303871473155 * H1x1_4 + -0.89424738421983 * H1x1_5 +
0.88296045952163 * H1x1_6 + 1.46780135693795 * H1x1_7 + -0.54776833354744 * H1x1_8 ;
393100    +   H2x1_8  =     0.84377114826897 * H1x1_1  +    -0.14810018909791 * H1x1_2
393101    +          +     1.11853545850139 * H1x1_3  +    -0.52413654460248 * H1x1_4
393102    +          +     0.26423935198202 * H1x1_5  +     0.73287134084679 * H1x1_6
393103    +          +    -0.10968109058294 * H1x1_7  +     0.05373159333235 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_8 = 0.84377114826897 * H1x1_1 + -0.14810018909791 * H1x1_2 +
1.11853545850139 * H1x1_3 + -0.52413654460248 * H1x1_4 + 0.26423935198202 * H1x1_5 +
0.73287134084679 * H1x1_6 + -0.10968109058294 * H1x1_7 + 0.05373159333235 * H1x1_8 ;
393104    +   H2x1_1  =    -0.31574497820096 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.31574497820096 + H2x1_1 ;
393105    +   H2x1_2  =     -1.1221477339575 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.1221477339575 + H2x1_2 ;
393106    +   H2x1_3  =    -0.09036454817003 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.09036454817003 + H2x1_3 ;
393107    +   H2x1_4  =    -0.11931722312594 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11931722312594 + H2x1_4 ;
393108    +   H2x1_5  =     0.18308841470994 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.18308841470994 + H2x1_5 ;
393109    +   H2x1_6  =    -1.66376461184436 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.66376461184436 + H2x1_6 ;
393110    +   H2x1_7  =     1.50948440714938 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.50948440714938 + H2x1_7 ;
393111    +   H2x1_8  =    -1.19197165918413 + H2x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_8 = -1.19197165918413 + H2x1_8 ;
393112    +   H2x1_1  = TANH(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = TANH(H2x1_1 );
393113    +   H2x1_2  = TANH(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = TANH(H2x1_2 );
393114    +   H2x1_3  = TANH(H2x1_3 );
MPRINT(EM_DIAGRAM):   H2x1_3 = TANH(H2x1_3 );
393115    +   H2x1_4  = TANH(H2x1_4 );
MPRINT(EM_DIAGRAM):   H2x1_4 = TANH(H2x1_4 );
393116    +   H2x1_5  = TANH(H2x1_5 );
MPRINT(EM_DIAGRAM):   H2x1_5 = TANH(H2x1_5 );
393117    +   H2x1_6  = TANH(H2x1_6 );
MPRINT(EM_DIAGRAM):   H2x1_6 = TANH(H2x1_6 );
393118    +   H2x1_7  = TANH(H2x1_7 );
MPRINT(EM_DIAGRAM):   H2x1_7 = TANH(H2x1_7 );
393119    +   H2x1_8  = TANH(H2x1_8 );
MPRINT(EM_DIAGRAM):   H2x1_8 = TANH(H2x1_8 );
393120    +END;
MPRINT(EM_DIAGRAM):   END;
393121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
393122    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
393123    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
393124    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
393125    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
393126    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
393127    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
393128    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
393129    +   H2x1_8  = .;
MPRINT(EM_DIAGRAM):   H2x1_8 = .;
393130    +END;
MPRINT(EM_DIAGRAM):   END;
393131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393132    +*** Writing the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Attrition_Flag ;
393133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393134    +
393135    +*** Generate dummy variables for Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Attrition_Flag ;
393136    +drop Attrition_Flag1 Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   drop Attrition_Flag1 Attrition_Flag0 ;
393137    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
393138    +length F_Attrition_Flag $ 17;
MPRINT(EM_DIAGRAM):   length F_Attrition_Flag $ 17;
393139    +F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
MPRINT(EM_DIAGRAM):   F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
393140    +%DMNORMIP( F_Attrition_Flag )
MPRINT(DMNORMIP):   call dmnorm(F_Attrition_Flag,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393141    +if missing( Attrition_Flag ) then do;
MPRINT(EM_DIAGRAM):   if missing( Attrition_Flag ) then do;
393142    +   Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
393143    +   Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
393144    +end;
MPRINT(EM_DIAGRAM):   end;
393145    +else do;
MPRINT(EM_DIAGRAM):   else do;
393146    +   if F_Attrition_Flag = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_Attrition_Flag = '0' then do;
393147    +      Attrition_Flag1 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 0;
393148    +      Attrition_Flag0 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 1;
393149    +   end;
MPRINT(EM_DIAGRAM):   end;
393150    +   else if F_Attrition_Flag = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_Attrition_Flag = '1' then do;
393151    +      Attrition_Flag1 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 1;
393152    +      Attrition_Flag0 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 0;
393153    +   end;
MPRINT(EM_DIAGRAM):   end;
393154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393155    +      Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
393156    +      Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
393157    +   end;
MPRINT(EM_DIAGRAM):   end;
393158    +end;
MPRINT(EM_DIAGRAM):   end;
393159    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
393160    +   P_Attrition_Flag1  =     2.47649940953865 * H2x1_1
393161    +          +     0.82822394165393 * H2x1_2  +    -2.28704272678157 * H2x1_3
393162    +          +     0.98345755322308 * H2x1_4  +    -0.80209601445336 * H2x1_5
393163    +          +    -0.80328250572529 * H2x1_6  +    -2.19260501467389 * H2x1_7
393164    +          +     0.11593680364832 * H2x1_8 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 2.47649940953865 * H2x1_1 + 0.82822394165393 *
H2x1_2 + -2.28704272678157 * H2x1_3 + 0.98345755322308 * H2x1_4 + -0.80209601445336 * H2x1_5 +
-0.80328250572529 * H2x1_6 + -2.19260501467389 * H2x1_7 + 0.11593680364832 * H2x1_8 ;
393165    +   P_Attrition_Flag1  =    -3.90025292308802 + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = -3.90025292308802 + P_Attrition_Flag1 ;
393166    +   P_Attrition_Flag0  = 0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
393167    +   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
393168    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
393169    +   P_Attrition_Flag1  = EXP(P_Attrition_Flag1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = EXP(P_Attrition_Flag1 - _MAX_);
393170    +   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
393171    +   P_Attrition_Flag0  = EXP(P_Attrition_Flag0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = EXP(P_Attrition_Flag0 - _MAX_);
393172    +   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
393173    +   P_Attrition_Flag1  = P_Attrition_Flag1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 / _SUM_;
393174    +   P_Attrition_Flag0  = P_Attrition_Flag0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = P_Attrition_Flag0 / _SUM_;
393175    +END;
MPRINT(EM_DIAGRAM):   END;
393176    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
393177    +   P_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = .;
393178    +   P_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = .;
393179    +END;
MPRINT(EM_DIAGRAM):   END;
393180    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
393181    +   P_Attrition_Flag1  =      0.1606941309255;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1606941309255;
393182    +   P_Attrition_Flag0  =     0.83930586907449;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83930586907449;
393183    +END;
MPRINT(EM_DIAGRAM):   END;
393184    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
393185    +*** Writing the Residuals  of the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Attrition_Flag ;
393186    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
393187    +IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1 = . ;
393188    +ELSE R_Attrition_Flag1  = Attrition_Flag1  - P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag1 = Attrition_Flag1 - P_Attrition_Flag1 ;
393189    +IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0 = . ;
393190    +ELSE R_Attrition_Flag0  = Attrition_Flag0  - P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag0 = Attrition_Flag0 - P_Attrition_Flag0 ;
393191    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393192    +*** Writing the I_Attrition_Flag  AND U_Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Attrition_Flag AND U_Attrition_Flag ;
393193    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393194    +_MAXP_ = P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag1 ;
393195    +I_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "1                " ;
393196    +U_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "1                " ;
393197    +IF( _MAXP_ LT P_Attrition_Flag0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Attrition_Flag0 ) THEN DO;
393198    +   _MAXP_ = P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag0 ;
393199    +   I_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "0                " ;
393200    +   U_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "0                " ;
393201    +END;
MPRINT(EM_DIAGRAM):   END;
393202    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
393203    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
393204    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
393205    +drop
393206    +S_RANGE_LOG_Total_Trans_Amt
393207    +S_RANGE_SQRT_Avg_Utilization_Rat
393208    +S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393209    +S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393210    +S_RANGE_Total_Revolving_Bal
393211    +H1x1_1
393212    +H1x1_2
393213    +H1x1_3
393214    +H1x1_4
393215    +H1x1_5
393216    +H1x1_6
393217    +H1x1_7
393218    +H1x1_8
393219    +H2x1_1
393220    +H2x1_2
393221    +H2x1_3
393222    +H2x1_4
393223    +H2x1_5
393224    +H2x1_6
393225    +H2x1_7
393226    +H2x1_8
393227    +;
MPRINT(EM_DIAGRAM):   drop S_RANGE_LOG_Total_Trans_Amt S_RANGE_SQRT_Avg_Utilization_Rat
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 S_RANGE_Total_Revolving_Bal
H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x1_8 H2x1_1 H2x1_2 H2x1_3 H2x1_4 H2x1_5
H2x1_6 H2x1_7 H2x1_8 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
393228     run;
 
NOTE: DATA STEP view saved on file EMWS1.AUTONEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
393229     quit;
393230     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
393231     filename emflow
393231   ! "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
393232     *------------------------------------------------------------*;
393233     * AutoNeural2: Scoring VALIDATE data;
393234     *------------------------------------------------------------*;
393235     data EMWS1.AutoNeural2_VALIDATE
393236     / view=EMWS1.AutoNeural2_VALIDATE
393237     ;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_VALIDATE / view=EMWS1.AutoNeural2_VALIDATE ;
393238     set EMWS1.Part2_VALIDATE
393239     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_VALIDATE ;
393240     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas.
393241    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
393242    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
393243    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
393244    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
393245    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
393246    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
393247    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
393248    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
393249    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
393250    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
393251    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
393252    +LENGTH _WARN_ $4
393253    +      F_Attrition_Flag  $ 17
393254    +      I_Attrition_Flag  $ 17
393255    +      U_Attrition_Flag  $ 17
393256    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Attrition_Flag $ 17 I_Attrition_Flag $ 17
U_Attrition_Flag $ 17 ;
393257    +      label S_RANGE_LOG_Total_Trans_Amt =
393258    +'Standard: RANGE_LOG_Total_Trans_Amt' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_LOG_Total_Trans_Amt = 'Standard:
RANGE_LOG_Total_Trans_Amt' ;
393259    +
393260    +      label S_RANGE_SQRT_Avg_Utilization_Rat =
393261    +'Standard: RANGE_SQRT_Avg_Utilization_Ratio' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Avg_Utilization_Rat = 'Standard:
RANGE_SQRT_Avg_Utilization_Ratio' ;
393262    +
393263    +      label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q =
393264    +'Standard: RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = 'Standard:
RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
393265    +
393266    +      label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 =
393267    +'Standard: RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = 'Standard:
RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
393268    +
393269    +      label S_RANGE_Total_Revolving_Bal =
393270    +'Standard: RANGE_Total_Revolving_Bal' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Total_Revolving_Bal = 'Standard:
RANGE_Total_Revolving_Bal' ;
393271    +
393272    +      label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
393273    +
393274    +      label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
393275    +
393276    +      label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
393277    +
393278    +      label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
393279    +
393280    +      label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
393281    +
393282    +      label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
393283    +
393284    +      label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
393285    +
393286    +      label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
393287    +
393288    +      label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
393289    +
393290    +      label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
393291    +
393292    +      label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
393293    +
393294    +      label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
393295    +
393296    +      label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
393297    +
393298    +      label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
393299    +
393300    +      label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
393301    +
393302    +      label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
393303    +
393304    +      label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
393305    +
393306    +      label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
393307    +
393308    +      label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
393309    +
393310    +      label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
393311    +
393312    +      label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
393313    +
393314    +      label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
393315    +
393316    +      label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
393317    +
393318    +      label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
393319    +
393320    +      label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
393321    +
393322    +      label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
393323    +
393324    +      label G_Total_Relationship_Count0 =
393325    +'Dummy: G_Total_Relationship_Count=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count0 = 'Dummy:
G_Total_Relationship_Count=0' ;
393326    +
393327    +      label G_Total_Relationship_Count1 =
393328    +'Dummy: G_Total_Relationship_Count=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count1 = 'Dummy:
G_Total_Relationship_Count=1' ;
393329    +
393330    +      label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
393331    +
393332    +      label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
393333    +
393334    +      label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
393335    +
393336    +      label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
393337    +
393338    +      label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
393339    +
393340    +      label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
393341    +
393342    +      label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
393343    +
393344    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
393345    +
393346    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
393347    +
393348    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
393349    +
393350    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
393351    +
393352    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
393353    +
393354    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
393355    +
393356    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
393357    +
393358    +      label H1x1_8 = 'Hidden: H1x1_=8' ;
MPRINT(EM_DIAGRAM):   label H1x1_8 = 'Hidden: H1x1_=8' ;
393359    +
393360    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
393361    +
393362    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
393363    +
393364    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
393365    +
393366    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
393367    +
393368    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
393369    +
393370    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
393371    +
393372    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
393373    +
393374    +      label H2x1_8 = 'Hidden: H2x1_=8' ;
MPRINT(EM_DIAGRAM):   label H2x1_8 = 'Hidden: H2x1_=8' ;
393375    +
393376    +      label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
393377    +
393378    +      label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
393379    +
393380    +      label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
393381    +
393382    +      label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
393383    +
393384    +      label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
393385    +
393386    +      label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
393387    +
393388    +      label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
393389    +
393390    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
393391    +
393392    +*** Generate dummy variables for G_Contacts_Count_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Contacts_Count_12_mon ;
393393    +drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
393394    +        G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
393395    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
393396    +G_Contacts_Count_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 0;
393397    +G_Contacts_Count_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 0;
393398    +G_Contacts_Count_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 0;
393399    +G_Contacts_Count_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 0;
393400    +if missing( G_Contacts_Count_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Contacts_Count_12_mon ) then do;
393401    +   G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
393402    +   G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
393403    +   G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
393404    +   G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
393405    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
393406    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393407    +end;
MPRINT(EM_DIAGRAM):   end;
393408    +else do;
MPRINT(EM_DIAGRAM):   else do;
393409    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
393410    +   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
393411    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393412    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
393413    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
393414    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
393415    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
393416    +            G_Contacts_Count_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 1;
393417    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393418    +         end;
MPRINT(EM_DIAGRAM):   end;
393419    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393420    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
393421    +               G_Contacts_Count_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 1;
393422    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393423    +            end;
MPRINT(EM_DIAGRAM):   end;
393424    +         end;
MPRINT(EM_DIAGRAM):   end;
393425    +      end;
MPRINT(EM_DIAGRAM):   end;
393426    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393427    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
393428    +            G_Contacts_Count_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 1;
393429    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393430    +         end;
MPRINT(EM_DIAGRAM):   end;
393431    +      end;
MPRINT(EM_DIAGRAM):   end;
393432    +   end;
MPRINT(EM_DIAGRAM):   end;
393433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393434    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
393435    +         G_Contacts_Count_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 1;
393436    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393437    +      end;
MPRINT(EM_DIAGRAM):   end;
393438    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393439    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
393440    +            G_Contacts_Count_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = -1;
393441    +            G_Contacts_Count_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = -1;
393442    +            G_Contacts_Count_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = -1;
393443    +            G_Contacts_Count_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = -1;
393444    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393445    +         end;
MPRINT(EM_DIAGRAM):   end;
393446    +      end;
MPRINT(EM_DIAGRAM):   end;
393447    +   end;
MPRINT(EM_DIAGRAM):   end;
393448    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
393449    +      G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
393450    +      G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
393451    +      G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
393452    +      G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
393453    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
393454    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393455    +   end;
MPRINT(EM_DIAGRAM):   end;
393456    +end;
MPRINT(EM_DIAGRAM):   end;
393457    +
393458    +*** Generate dummy variables for G_Customer_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Customer_Age ;
393459    +drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
393460    +        G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7
393461    +        G_Customer_Age8 G_Customer_Age9 ;
MPRINT(EM_DIAGRAM):   drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7 G_Customer_Age8
G_Customer_Age9 ;
393462    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
393463    +G_Customer_Age0 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 0;
393464    +G_Customer_Age1 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 0;
393465    +G_Customer_Age2 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 0;
393466    +G_Customer_Age3 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 0;
393467    +G_Customer_Age4 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 0;
393468    +G_Customer_Age5 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 0;
393469    +G_Customer_Age6 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 0;
393470    +G_Customer_Age7 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 0;
393471    +G_Customer_Age8 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 0;
393472    +G_Customer_Age9 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 0;
393473    +if missing( G_Customer_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Customer_Age ) then do;
393474    +   G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
393475    +   G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
393476    +   G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
393477    +   G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
393478    +   G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
393479    +   G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
393480    +   G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
393481    +   G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
393482    +   G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
393483    +   G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
393484    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
393485    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393486    +end;
MPRINT(EM_DIAGRAM):   end;
393487    +else do;
MPRINT(EM_DIAGRAM):   else do;
393488    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
393489    +   _dm12 = put( G_Customer_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Customer_Age , BEST12. );
393490    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393491    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
393492    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
393493    +      if _dm12 <= '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '10' then do;
393494    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
393495    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
393496    +               G_Customer_Age0 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 1;
393497    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393498    +            end;
MPRINT(EM_DIAGRAM):   end;
393499    +            else do;
MPRINT(EM_DIAGRAM):   else do;
393500    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
393501    +                  G_Customer_Age1 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 1;
393502    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393503    +               end;
MPRINT(EM_DIAGRAM):   end;
393504    +            end;
MPRINT(EM_DIAGRAM):   end;
393505    +         end;
MPRINT(EM_DIAGRAM):   end;
393506    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393507    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
393508    +               G_Customer_Age0 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = -1;
393509    +               G_Customer_Age1 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = -1;
393510    +               G_Customer_Age2 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = -1;
393511    +               G_Customer_Age3 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = -1;
393512    +               G_Customer_Age4 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = -1;
393513    +               G_Customer_Age5 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = -1;
393514    +               G_Customer_Age6 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = -1;
393515    +               G_Customer_Age7 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = -1;
393516    +               G_Customer_Age8 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = -1;
393517    +               G_Customer_Age9 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = -1;
393518    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393519    +            end;
MPRINT(EM_DIAGRAM):   end;
393520    +         end;
MPRINT(EM_DIAGRAM):   end;
393521    +      end;
MPRINT(EM_DIAGRAM):   end;
393522    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393523    +         if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
393524    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
393525    +               G_Customer_Age2 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 1;
393526    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393527    +            end;
MPRINT(EM_DIAGRAM):   end;
393528    +            else do;
MPRINT(EM_DIAGRAM):   else do;
393529    +               if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
393530    +                  G_Customer_Age3 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 1;
393531    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393532    +               end;
MPRINT(EM_DIAGRAM):   end;
393533    +            end;
MPRINT(EM_DIAGRAM):   end;
393534    +         end;
MPRINT(EM_DIAGRAM):   end;
393535    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393536    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
393537    +               G_Customer_Age4 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 1;
393538    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393539    +            end;
MPRINT(EM_DIAGRAM):   end;
393540    +         end;
MPRINT(EM_DIAGRAM):   end;
393541    +      end;
MPRINT(EM_DIAGRAM):   end;
393542    +   end;
MPRINT(EM_DIAGRAM):   end;
393543    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393544    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
393545    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
393546    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
393547    +               G_Customer_Age5 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 1;
393548    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393549    +            end;
MPRINT(EM_DIAGRAM):   end;
393550    +            else do;
MPRINT(EM_DIAGRAM):   else do;
393551    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
393552    +                  G_Customer_Age6 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 1;
393553    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393554    +               end;
MPRINT(EM_DIAGRAM):   end;
393555    +            end;
MPRINT(EM_DIAGRAM):   end;
393556    +         end;
MPRINT(EM_DIAGRAM):   end;
393557    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393558    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
393559    +               G_Customer_Age7 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 1;
393560    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393561    +            end;
MPRINT(EM_DIAGRAM):   end;
393562    +         end;
MPRINT(EM_DIAGRAM):   end;
393563    +      end;
MPRINT(EM_DIAGRAM):   end;
393564    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393565    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
393566    +            G_Customer_Age8 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 1;
393567    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393568    +         end;
MPRINT(EM_DIAGRAM):   end;
393569    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393570    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
393571    +               G_Customer_Age9 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 1;
393572    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393573    +            end;
MPRINT(EM_DIAGRAM):   end;
393574    +         end;
MPRINT(EM_DIAGRAM):   end;
393575    +      end;
MPRINT(EM_DIAGRAM):   end;
393576    +   end;
MPRINT(EM_DIAGRAM):   end;
393577    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
393578    +      G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
393579    +      G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
393580    +      G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
393581    +      G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
393582    +      G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
393583    +      G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
393584    +      G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
393585    +      G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
393586    +      G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
393587    +      G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
393588    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
393589    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393590    +   end;
MPRINT(EM_DIAGRAM):   end;
393591    +end;
MPRINT(EM_DIAGRAM):   end;
393592    +
393593    +*** Generate dummy variables for G_Months_Inactive_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_Inactive_12_mon ;
393594    +drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
393595    +        G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
393596    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
393597    +G_Months_Inactive_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 0;
393598    +G_Months_Inactive_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 0;
393599    +G_Months_Inactive_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 0;
393600    +G_Months_Inactive_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 0;
393601    +if missing( G_Months_Inactive_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_Inactive_12_mon ) then do;
393602    +   G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
393603    +   G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
393604    +   G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
393605    +   G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
393606    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
393607    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393608    +end;
MPRINT(EM_DIAGRAM):   end;
393609    +else do;
MPRINT(EM_DIAGRAM):   else do;
393610    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
393611    +   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
393612    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393613    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
393614    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
393615    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
393616    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
393617    +            G_Months_Inactive_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 1;
393618    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393619    +         end;
MPRINT(EM_DIAGRAM):   end;
393620    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393621    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
393622    +               G_Months_Inactive_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 1;
393623    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393624    +            end;
MPRINT(EM_DIAGRAM):   end;
393625    +         end;
MPRINT(EM_DIAGRAM):   end;
393626    +      end;
MPRINT(EM_DIAGRAM):   end;
393627    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393628    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
393629    +            G_Months_Inactive_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 1;
393630    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393631    +         end;
MPRINT(EM_DIAGRAM):   end;
393632    +      end;
MPRINT(EM_DIAGRAM):   end;
393633    +   end;
MPRINT(EM_DIAGRAM):   end;
393634    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393635    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
393636    +         G_Months_Inactive_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 1;
393637    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393638    +      end;
MPRINT(EM_DIAGRAM):   end;
393639    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393640    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
393641    +            G_Months_Inactive_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = -1;
393642    +            G_Months_Inactive_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = -1;
393643    +            G_Months_Inactive_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = -1;
393644    +            G_Months_Inactive_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = -1;
393645    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393646    +         end;
MPRINT(EM_DIAGRAM):   end;
393647    +      end;
MPRINT(EM_DIAGRAM):   end;
393648    +   end;
MPRINT(EM_DIAGRAM):   end;
393649    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
393650    +      G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
393651    +      G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
393652    +      G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
393653    +      G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
393654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
393655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393656    +   end;
MPRINT(EM_DIAGRAM):   end;
393657    +end;
MPRINT(EM_DIAGRAM):   end;
393658    +
393659    +*** Generate dummy variables for G_Months_on_book ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_on_book ;
393660    +drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2 G_Months_on_book3
393661    +        G_Months_on_book4 G_Months_on_book5 G_Months_on_book6
393662    +        G_Months_on_book7 ;
MPRINT(EM_DIAGRAM):   drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2
G_Months_on_book3 G_Months_on_book4 G_Months_on_book5 G_Months_on_book6 G_Months_on_book7 ;
393663    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
393664    +G_Months_on_book0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 0;
393665    +G_Months_on_book1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 0;
393666    +G_Months_on_book2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 0;
393667    +G_Months_on_book3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 0;
393668    +G_Months_on_book4 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 0;
393669    +G_Months_on_book5 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 0;
393670    +G_Months_on_book6 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 0;
393671    +G_Months_on_book7 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 0;
393672    +if missing( G_Months_on_book ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_on_book ) then do;
393673    +   G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
393674    +   G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
393675    +   G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
393676    +   G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
393677    +   G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
393678    +   G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
393679    +   G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
393680    +   G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
393681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
393682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393683    +end;
MPRINT(EM_DIAGRAM):   end;
393684    +else do;
MPRINT(EM_DIAGRAM):   else do;
393685    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
393686    +   _dm12 = put( G_Months_on_book , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_on_book , BEST12. );
393687    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393688    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
393689    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
393690    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
393691    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
393692    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
393693    +               G_Months_on_book0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 1;
393694    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393695    +            end;
MPRINT(EM_DIAGRAM):   end;
393696    +            else do;
MPRINT(EM_DIAGRAM):   else do;
393697    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
393698    +                  G_Months_on_book1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 1;
393699    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393700    +               end;
MPRINT(EM_DIAGRAM):   end;
393701    +            end;
MPRINT(EM_DIAGRAM):   end;
393702    +         end;
MPRINT(EM_DIAGRAM):   end;
393703    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393704    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
393705    +               G_Months_on_book2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 1;
393706    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393707    +            end;
MPRINT(EM_DIAGRAM):   end;
393708    +         end;
MPRINT(EM_DIAGRAM):   end;
393709    +      end;
MPRINT(EM_DIAGRAM):   end;
393710    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393711    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
393712    +            G_Months_on_book3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 1;
393713    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393714    +         end;
MPRINT(EM_DIAGRAM):   end;
393715    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393716    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
393717    +               G_Months_on_book4 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 1;
393718    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393719    +            end;
MPRINT(EM_DIAGRAM):   end;
393720    +         end;
MPRINT(EM_DIAGRAM):   end;
393721    +      end;
MPRINT(EM_DIAGRAM):   end;
393722    +   end;
MPRINT(EM_DIAGRAM):   end;
393723    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393724    +      if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
393725    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
393726    +            G_Months_on_book5 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 1;
393727    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393728    +         end;
MPRINT(EM_DIAGRAM):   end;
393729    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393730    +            if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
393731    +               G_Months_on_book6 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 1;
393732    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393733    +            end;
MPRINT(EM_DIAGRAM):   end;
393734    +         end;
MPRINT(EM_DIAGRAM):   end;
393735    +      end;
MPRINT(EM_DIAGRAM):   end;
393736    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393737    +         if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
393738    +            G_Months_on_book7 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 1;
393739    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393740    +         end;
MPRINT(EM_DIAGRAM):   end;
393741    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393742    +            if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
393743    +               G_Months_on_book0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = -1;
393744    +               G_Months_on_book1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = -1;
393745    +               G_Months_on_book2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = -1;
393746    +               G_Months_on_book3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = -1;
393747    +               G_Months_on_book4 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = -1;
393748    +               G_Months_on_book5 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = -1;
393749    +               G_Months_on_book6 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = -1;
393750    +               G_Months_on_book7 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = -1;
393751    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393752    +            end;
MPRINT(EM_DIAGRAM):   end;
393753    +         end;
MPRINT(EM_DIAGRAM):   end;
393754    +      end;
MPRINT(EM_DIAGRAM):   end;
393755    +   end;
MPRINT(EM_DIAGRAM):   end;
393756    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
393757    +      G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
393758    +      G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
393759    +      G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
393760    +      G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
393761    +      G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
393762    +      G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
393763    +      G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
393764    +      G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
393765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
393766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393767    +   end;
MPRINT(EM_DIAGRAM):   end;
393768    +end;
MPRINT(EM_DIAGRAM):   end;
393769    +
393770    +*** Generate dummy variables for G_Total_Relationship_Count ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Relationship_Count ;
393771    +drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
393772    +if missing( G_Total_Relationship_Count ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Relationship_Count ) then do;
393773    +   G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
393774    +   G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
393775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
393776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393777    +end;
MPRINT(EM_DIAGRAM):   end;
393778    +else do;
MPRINT(EM_DIAGRAM):   else do;
393779    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
393780    +   _dm12 = put( G_Total_Relationship_Count , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Relationship_Count , BEST12. );
393781    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393782    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
393783    +      G_Total_Relationship_Count0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = -1;
393784    +      G_Total_Relationship_Count1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = -1;
393785    +   end;
MPRINT(EM_DIAGRAM):   end;
393786    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
393787    +      G_Total_Relationship_Count0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 0;
393788    +      G_Total_Relationship_Count1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 1;
393789    +   end;
MPRINT(EM_DIAGRAM):   end;
393790    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
393791    +      G_Total_Relationship_Count0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 1;
393792    +      G_Total_Relationship_Count1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 0;
393793    +   end;
MPRINT(EM_DIAGRAM):   end;
393794    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393795    +      G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
393796    +      G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
393797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
393798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393799    +   end;
MPRINT(EM_DIAGRAM):   end;
393800    +end;
MPRINT(EM_DIAGRAM):   end;
393801    +
393802    +*** Generate dummy variables for G_Total_Trans_Ct ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Trans_Ct ;
393803    +drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2 G_Total_Trans_Ct3
393804    +        G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2
G_Total_Trans_Ct3 G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
393805    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
393806    +G_Total_Trans_Ct0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 0;
393807    +G_Total_Trans_Ct1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 0;
393808    +G_Total_Trans_Ct2 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 0;
393809    +G_Total_Trans_Ct3 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 0;
393810    +G_Total_Trans_Ct4 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 0;
393811    +G_Total_Trans_Ct5 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 0;
393812    +G_Total_Trans_Ct6 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 0;
393813    +if missing( G_Total_Trans_Ct ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Trans_Ct ) then do;
393814    +   G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
393815    +   G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
393816    +   G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
393817    +   G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
393818    +   G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
393819    +   G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
393820    +   G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
393821    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
393822    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393823    +end;
MPRINT(EM_DIAGRAM):   end;
393824    +else do;
MPRINT(EM_DIAGRAM):   else do;
393825    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
393826    +   _dm12 = put( G_Total_Trans_Ct , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Trans_Ct , BEST12. );
393827    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
393828    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
393829    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
393830    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
393831    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
393832    +            G_Total_Trans_Ct0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 1;
393833    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393834    +         end;
MPRINT(EM_DIAGRAM):   end;
393835    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393836    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
393837    +               G_Total_Trans_Ct1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 1;
393838    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393839    +            end;
MPRINT(EM_DIAGRAM):   end;
393840    +         end;
MPRINT(EM_DIAGRAM):   end;
393841    +      end;
MPRINT(EM_DIAGRAM):   end;
393842    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393843    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
393844    +            G_Total_Trans_Ct2 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 1;
393845    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393846    +         end;
MPRINT(EM_DIAGRAM):   end;
393847    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393848    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
393849    +               G_Total_Trans_Ct3 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 1;
393850    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393851    +            end;
MPRINT(EM_DIAGRAM):   end;
393852    +         end;
MPRINT(EM_DIAGRAM):   end;
393853    +      end;
MPRINT(EM_DIAGRAM):   end;
393854    +   end;
MPRINT(EM_DIAGRAM):   end;
393855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
393856    +      if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
393857    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
393858    +            G_Total_Trans_Ct4 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 1;
393859    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393860    +         end;
MPRINT(EM_DIAGRAM):   end;
393861    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393862    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
393863    +               G_Total_Trans_Ct5 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 1;
393864    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393865    +            end;
MPRINT(EM_DIAGRAM):   end;
393866    +         end;
MPRINT(EM_DIAGRAM):   end;
393867    +      end;
MPRINT(EM_DIAGRAM):   end;
393868    +      else do;
MPRINT(EM_DIAGRAM):   else do;
393869    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
393870    +            G_Total_Trans_Ct6 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 1;
393871    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393872    +         end;
MPRINT(EM_DIAGRAM):   end;
393873    +         else do;
MPRINT(EM_DIAGRAM):   else do;
393874    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
393875    +               G_Total_Trans_Ct0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = -1;
393876    +               G_Total_Trans_Ct1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = -1;
393877    +               G_Total_Trans_Ct2 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = -1;
393878    +               G_Total_Trans_Ct3 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = -1;
393879    +               G_Total_Trans_Ct4 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = -1;
393880    +               G_Total_Trans_Ct5 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = -1;
393881    +               G_Total_Trans_Ct6 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = -1;
393882    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
393883    +            end;
MPRINT(EM_DIAGRAM):   end;
393884    +         end;
MPRINT(EM_DIAGRAM):   end;
393885    +      end;
MPRINT(EM_DIAGRAM):   end;
393886    +   end;
MPRINT(EM_DIAGRAM):   end;
393887    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
393888    +      G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
393889    +      G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
393890    +      G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
393891    +      G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
393892    +      G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
393893    +      G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
393894    +      G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
393895    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
393896    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393897    +   end;
MPRINT(EM_DIAGRAM):   end;
393898    +end;
MPRINT(EM_DIAGRAM):   end;
393899    +
393900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393901    +*** Checking missing input Interval
393902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
393903    +
393904    +IF NMISS(
393905    +   RANGE_LOG_Total_Trans_Amt ,
393906    +   RANGE_SQRT_Avg_Utilization_Ratio ,
393907    +   RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ,
393908    +   RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ,
393909    +   RANGE_Total_Revolving_Bal   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( RANGE_LOG_Total_Trans_Amt , RANGE_SQRT_Avg_Utilization_Ratio ,
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 , RANGE_SQRT_Total_Ct_Chng_Q4_Q1 , RANGE_Total_Revolving_Bal )
THEN DO;
393910    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
393911    +
393912    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
393913    +END;
MPRINT(EM_DIAGRAM):   END;
393914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393915    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
393916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393917    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
393918    +   S_RANGE_LOG_Total_Trans_Amt
393919    +          =    -1.34747068578628 +      5.0128535511494 *
393920    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
393921    +   S_RANGE_SQRT_Avg_Utilization_Rat
393922    +          =    -1.34502734827526 +     3.19469433649726 *
393923    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 + 3.19469433649726
* RANGE_SQRT_Avg_Utilization_Ratio ;
393924    +   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393925    +          =    -7.21426643857002 +     15.4166020949803 *
393926    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 + 15.4166020949803
* RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
393927    +   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393928    +          =    -6.16155815683527 +     14.2791680762335 *
393929    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 + 14.2791680762335
* RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
393930    +   S_RANGE_Total_Revolving_Bal
393931    +          =    -1.43123481780808 +     3.09032113107013 *
393932    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013 *
RANGE_Total_Revolving_Bal ;
393933    +END;
MPRINT(EM_DIAGRAM):   END;
393934    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
393935    +   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
393936    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
= . ;
393937    +   ELSE S_RANGE_LOG_Total_Trans_Amt
393938    +          =    -1.34747068578628 +      5.0128535511494 *
393939    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
393940    +   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
393941    +        S_RANGE_SQRT_Avg_Utilization_Rat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
S_RANGE_SQRT_Avg_Utilization_Rat = . ;
393942    +   ELSE S_RANGE_SQRT_Avg_Utilization_Rat
393943    +          =    -1.34502734827526 +     3.19469433649726 *
393944    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 +
3.19469433649726 * RANGE_SQRT_Avg_Utilization_Ratio ;
393945    +   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
393946    +        S_RANGE_SQRT_Total_Amt_Chng_Q4_Q  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = . ;
393947    +   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393948    +          =    -7.21426643857002 +     15.4166020949803 *
393949    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 +
15.4166020949803 * RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
393950    +   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
393951    +        S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = . ;
393952    +   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393953    +          =    -6.16155815683527 +     14.2791680762335 *
393954    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 +
14.2791680762335 * RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
393955    +   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
393956    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
= . ;
393957    +   ELSE S_RANGE_Total_Revolving_Bal
393958    +          =    -1.43123481780808 +     3.09032113107013 *
393959    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013
* RANGE_Total_Revolving_Bal ;
393960    +END;
MPRINT(EM_DIAGRAM):   END;
393961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393962    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
393963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393965    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
393966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
393967    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
393968    +   H1x1_1  =     1.44473759114969 * S_RANGE_LOG_Total_Trans_Amt
393969    +          +     0.47469974135661 * S_RANGE_SQRT_Avg_Utilization_Rat
393970    +          +    -0.17678823515738 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393971    +          +    -0.08782898438529 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393972    +          +    -0.10170689517149 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.44473759114969 * S_RANGE_LOG_Total_Trans_Amt +
0.47469974135661 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.17678823515738 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.08782898438529 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.10170689517149 * S_RANGE_Total_Revolving_Bal ;
393973    +   H1x1_2  =     0.36929693742029 * S_RANGE_LOG_Total_Trans_Amt
393974    +          +    -0.01537901404435 * S_RANGE_SQRT_Avg_Utilization_Rat
393975    +          +     -0.1616364096451 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393976    +          +    -0.37499771317328 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393977    +          +     0.08835331999141 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.36929693742029 * S_RANGE_LOG_Total_Trans_Amt +
-0.01537901404435 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.1616364096451 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.37499771317328 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.08835331999141 * S_RANGE_Total_Revolving_Bal ;
393978    +   H1x1_3  =    -0.65329413311593 * S_RANGE_LOG_Total_Trans_Amt
393979    +          +    -0.00989031057679 * S_RANGE_SQRT_Avg_Utilization_Rat
393980    +          +     0.09776476847062 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393981    +          +    -0.21803849346102 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393982    +          +     0.04657341403647 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.65329413311593 * S_RANGE_LOG_Total_Trans_Amt +
-0.00989031057679 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.09776476847062 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.21803849346102 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.04657341403647 * S_RANGE_Total_Revolving_Bal ;
393983    +   H1x1_4  =     0.04977727115697 * S_RANGE_LOG_Total_Trans_Amt
393984    +          +    -0.10521857706601 * S_RANGE_SQRT_Avg_Utilization_Rat
393985    +          +     0.03861353473435 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393986    +          +    -0.09694035600906 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393987    +          +      0.9203372027378 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.04977727115697 * S_RANGE_LOG_Total_Trans_Amt +
-0.10521857706601 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.03861353473435 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.09694035600906 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.9203372027378 * S_RANGE_Total_Revolving_Bal ;
393988    +   H1x1_5  =    -1.59771632812293 * S_RANGE_LOG_Total_Trans_Amt
393989    +          +    -0.02987802593845 * S_RANGE_SQRT_Avg_Utilization_Rat
393990    +          +     0.10595296726603 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393991    +          +     0.27930848833776 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393992    +          +     0.04184764543759 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.59771632812293 * S_RANGE_LOG_Total_Trans_Amt +
-0.02987802593845 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.10595296726603 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.27930848833776 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.04184764543759 * S_RANGE_Total_Revolving_Bal ;
393993    +   H1x1_6  =    -2.22002826316663 * S_RANGE_LOG_Total_Trans_Amt
393994    +          +     0.21449118089117 * S_RANGE_SQRT_Avg_Utilization_Rat
393995    +          +    -0.32833690690622 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
393996    +          +     -0.2609169087665 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
393997    +          +    -0.09335223376937 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.22002826316663 * S_RANGE_LOG_Total_Trans_Amt +
0.21449118089117 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.32833690690622 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.2609169087665 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.09335223376937 * S_RANGE_Total_Revolving_Bal ;
393998    +   H1x1_7  =     0.72365350252617 * S_RANGE_LOG_Total_Trans_Amt
393999    +          +    -0.12419914430011 * S_RANGE_SQRT_Avg_Utilization_Rat
394000    +          +     0.33890432072219 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
394001    +          +     0.17595883654803 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
394002    +          +    -0.06385044401415 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0.72365350252617 * S_RANGE_LOG_Total_Trans_Amt +
-0.12419914430011 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.33890432072219 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.17595883654803 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.06385044401415 * S_RANGE_Total_Revolving_Bal ;
394003    +   H1x1_8  =    -0.49450992077366 * S_RANGE_LOG_Total_Trans_Amt
394004    +          +    -0.05101251026586 * S_RANGE_SQRT_Avg_Utilization_Rat
394005    +          +     0.04194737766537 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
394006    +          +    -0.07281283622008 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
394007    +          +     -0.2334475719234 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_8 = -0.49450992077366 * S_RANGE_LOG_Total_Trans_Amt +
-0.05101251026586 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.04194737766537 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.07281283622008 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.2334475719234 * S_RANGE_Total_Revolving_Bal ;
394008    +   H1x1_1  = H1x1_1  +      0.1401700161345 * G_Contacts_Count_12_mon0
394009    +          +     0.16853078942958 * G_Contacts_Count_12_mon1
394010    +          +     0.01393498187406 * G_Contacts_Count_12_mon2
394011    +          +    -0.06426539048063 * G_Contacts_Count_12_mon3
394012    +          +     0.16424725078514 * G_Customer_Age0  +     0.00806065325306 *
394013    +        G_Customer_Age1  +     0.58854449762957 * G_Customer_Age2
394014    +          +    -0.04304863480935 * G_Customer_Age3  +    -0.09153885425916 *
394015    +        G_Customer_Age4  +    -0.03009001489594 * G_Customer_Age5
394016    +          +    -0.01277382132587 * G_Customer_Age6  +    -0.05120552017464 *
394017    +        G_Customer_Age7  +    -0.19484100703007 * G_Customer_Age8
394018    +          +     0.36400231982018 * G_Customer_Age9  +      0.2128372684892 *
394019    +        G_Months_Inactive_12_mon0  +     0.08881972076719 *
394020    +        G_Months_Inactive_12_mon1  +     0.01871007502673 *
394021    +        G_Months_Inactive_12_mon2  +      0.1377784670933 *
394022    +        G_Months_Inactive_12_mon3  +      -0.187522328146 * G_Months_on_book0
394023    +          +     0.10828753003058 * G_Months_on_book1
394024    +          +    -0.01639538197714 * G_Months_on_book2
394025    +          +    -0.09230711881682 * G_Months_on_book3
394026    +          +     0.14260542762716 * G_Months_on_book4
394027    +          +     0.34699450273742 * G_Months_on_book5
394028    +          +     0.36459716975736 * G_Months_on_book6
394029    +          +     0.02278453878232 * G_Months_on_book7
394030    +          +     0.51803242503762 * G_Total_Relationship_Count0
394031    +          +     0.06899136153159 * G_Total_Relationship_Count1
394032    +          +     0.68336451142155 * G_Total_Trans_Ct0
394033    +          +     0.06265331654524 * G_Total_Trans_Ct1
394034    +          +     0.15673138151852 * G_Total_Trans_Ct2
394035    +          +    -0.26306701715366 * G_Total_Trans_Ct3
394036    +          +     0.26998656463782 * G_Total_Trans_Ct4
394037    +          +    -0.12858111211938 * G_Total_Trans_Ct5
394038    +          +    -0.81643640957676 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1401700161345 * G_Contacts_Count_12_mon0 +
0.16853078942958 * G_Contacts_Count_12_mon1 + 0.01393498187406 * G_Contacts_Count_12_mon2 +
-0.06426539048063 * G_Contacts_Count_12_mon3 + 0.16424725078514 * G_Customer_Age0 +
0.00806065325306 * G_Customer_Age1 + 0.58854449762957 * G_Customer_Age2 + -0.04304863480935 *
G_Customer_Age3 + -0.09153885425916 * G_Customer_Age4 + -0.03009001489594 * G_Customer_Age5 +
-0.01277382132587 * G_Customer_Age6 + -0.05120552017464 * G_Customer_Age7 + -0.19484100703007
* G_Customer_Age8 + 0.36400231982018 * G_Customer_Age9 + 0.2128372684892 *
G_Months_Inactive_12_mon0 + 0.08881972076719 * G_Months_Inactive_12_mon1 + 0.01871007502673 *
G_Months_Inactive_12_mon2 + 0.1377784670933 * G_Months_Inactive_12_mon3 + -0.187522328146 *
G_Months_on_book0 + 0.10828753003058 * G_Months_on_book1 + -0.01639538197714 *
G_Months_on_book2 + -0.09230711881682 * G_Months_on_book3 + 0.14260542762716 *
G_Months_on_book4 + 0.34699450273742 * G_Months_on_book5 + 0.36459716975736 *
G_Months_on_book6 + 0.02278453878232 * G_Months_on_book7 + 0.51803242503762 *
G_Total_Relationship_Count0 + 0.06899136153159 * G_Total_Relationship_Count1 +
0.68336451142155 * G_Total_Trans_Ct0 + 0.06265331654524 * G_Total_Trans_Ct1 + 0.15673138151852
* G_Total_Trans_Ct2 + -0.26306701715366 * G_Total_Trans_Ct3 + 0.26998656463782 *
G_Total_Trans_Ct4 + -0.12858111211938 * G_Total_Trans_Ct5 + -0.81643640957676 *
G_Total_Trans_Ct6 ;
394039    +   H1x1_2  = H1x1_2  +     0.21444873800256 * G_Contacts_Count_12_mon0
394040    +          +     0.07842833493788 * G_Contacts_Count_12_mon1
394041    +          +    -0.27823122493985 * G_Contacts_Count_12_mon2
394042    +          +     0.01239271758814 * G_Contacts_Count_12_mon3
394043    +          +     0.20121751980973 * G_Customer_Age0  +     0.04172957843644 *
394044    +        G_Customer_Age1  +    -0.16008797816304 * G_Customer_Age2
394045    +          +     0.27840956839148 * G_Customer_Age3  +    -0.02289075036396 *
394046    +        G_Customer_Age4  +     0.33090235630478 * G_Customer_Age5
394047    +          +     0.08213248268936 * G_Customer_Age6  +     0.03126151274543 *
394048    +        G_Customer_Age7  +    -0.24954134832656 * G_Customer_Age8
394049    +          +    -0.34342240474159 * G_Customer_Age9  +     0.26688451751649 *
394050    +        G_Months_Inactive_12_mon0  +     -0.0849028829979 *
394051    +        G_Months_Inactive_12_mon1  +    -0.34906695553271 *
394052    +        G_Months_Inactive_12_mon2  +    -0.26802657223186 *
394053    +        G_Months_Inactive_12_mon3  +    -0.18828281305165 * G_Months_on_book0
394054    +          +     0.11689915130834 * G_Months_on_book1
394055    +          +     0.15571564774987 * G_Months_on_book2
394056    +          +     0.12417575218142 * G_Months_on_book3
394057    +          +    -0.20544107518855 * G_Months_on_book4
394058    +          +    -0.14961896181352 * G_Months_on_book5
394059    +          +     -0.2163634043033 * G_Months_on_book6
394060    +          +    -0.15920685944267 * G_Months_on_book7
394061    +          +     0.05721641813512 * G_Total_Relationship_Count0
394062    +          +     0.10738726316658 * G_Total_Relationship_Count1
394063    +          +     0.46770513165672 * G_Total_Trans_Ct0
394064    +          +    -0.49698932986798 * G_Total_Trans_Ct1
394065    +          +    -0.12245383948982 * G_Total_Trans_Ct2
394066    +          +    -0.55196286962318 * G_Total_Trans_Ct3
394067    +          +    -0.15095383414794 * G_Total_Trans_Ct4
394068    +          +    -0.28805837771929 * G_Total_Trans_Ct5
394069    +          +     0.07494905893528 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.21444873800256 * G_Contacts_Count_12_mon0 +
0.07842833493788 * G_Contacts_Count_12_mon1 + -0.27823122493985 * G_Contacts_Count_12_mon2 +
0.01239271758814 * G_Contacts_Count_12_mon3 + 0.20121751980973 * G_Customer_Age0 +
0.04172957843644 * G_Customer_Age1 + -0.16008797816304 * G_Customer_Age2 + 0.27840956839148 *
G_Customer_Age3 + -0.02289075036396 * G_Customer_Age4 + 0.33090235630478 * G_Customer_Age5 +
0.08213248268936 * G_Customer_Age6 + 0.03126151274543 * G_Customer_Age7 + -0.24954134832656 *
G_Customer_Age8 + -0.34342240474159 * G_Customer_Age9 + 0.26688451751649 *
G_Months_Inactive_12_mon0 + -0.0849028829979 * G_Months_Inactive_12_mon1 + -0.34906695553271 *
G_Months_Inactive_12_mon2 + -0.26802657223186 * G_Months_Inactive_12_mon3 + -0.18828281305165
* G_Months_on_book0 + 0.11689915130834 * G_Months_on_book1 + 0.15571564774987 *
G_Months_on_book2 + 0.12417575218142 * G_Months_on_book3 + -0.20544107518855 *
G_Months_on_book4 + -0.14961896181352 * G_Months_on_book5 + -0.2163634043033 *
G_Months_on_book6 + -0.15920685944267 * G_Months_on_book7 + 0.05721641813512 *
G_Total_Relationship_Count0 + 0.10738726316658 * G_Total_Relationship_Count1 +
0.46770513165672 * G_Total_Trans_Ct0 + -0.49698932986798 * G_Total_Trans_Ct1 +
-0.12245383948982 * G_Total_Trans_Ct2 + -0.55196286962318 * G_Total_Trans_Ct3 +
-0.15095383414794 * G_Total_Trans_Ct4 + -0.28805837771929 * G_Total_Trans_Ct5 +
0.07494905893528 * G_Total_Trans_Ct6 ;
394070    +   H1x1_3  = H1x1_3  +     0.07076997283851 * G_Contacts_Count_12_mon0
394071    +          +      0.4053112894421 * G_Contacts_Count_12_mon1
394072    +          +    -0.01193233191664 * G_Contacts_Count_12_mon2
394073    +          +     0.11019777907243 * G_Contacts_Count_12_mon3
394074    +          +     0.07706884296578 * G_Customer_Age0  +    -0.37152092198474 *
394075    +        G_Customer_Age1  +    -0.22828344167191 * G_Customer_Age2
394076    +          +    -0.05061057943019 * G_Customer_Age3  +    -0.11730355838374 *
394077    +        G_Customer_Age4  +    -0.16657836727629 * G_Customer_Age5
394078    +          +    -0.19930312229165 * G_Customer_Age6  +    -0.22497785692239 *
394079    +        G_Customer_Age7  +        0.02355586974 * G_Customer_Age8
394080    +          +      0.1209977427348 * G_Customer_Age9  +    -0.00246569984757 *
394081    +        G_Months_Inactive_12_mon0  +    -0.04282271630458 *
394082    +        G_Months_Inactive_12_mon1  +       0.192766910686 *
394083    +        G_Months_Inactive_12_mon2  +      0.0688797059827 *
394084    +        G_Months_Inactive_12_mon3  +    -0.07346516413568 * G_Months_on_book0
394085    +          +     0.29892632213851 * G_Months_on_book1
394086    +          +    -0.01256186499973 * G_Months_on_book2
394087    +          +    -0.15627292530888 * G_Months_on_book3
394088    +          +    -0.38203200145326 * G_Months_on_book4
394089    +          +     0.02609861849884 * G_Months_on_book5
394090    +          +    -0.10987207384174 * G_Months_on_book6
394091    +          +     0.13169504559396 * G_Months_on_book7
394092    +          +    -0.09494293869854 * G_Total_Relationship_Count0
394093    +          +     0.03030101782007 * G_Total_Relationship_Count1
394094    +          +     0.09922577750406 * G_Total_Trans_Ct0
394095    +          +     0.62167149120482 * G_Total_Trans_Ct1
394096    +          +     1.09837857192449 * G_Total_Trans_Ct2
394097    +          +     0.88990320473212 * G_Total_Trans_Ct3
394098    +          +     0.14603842645544 * G_Total_Trans_Ct4
394099    +          +    -0.05725013848453 * G_Total_Trans_Ct5
394100    +          +    -0.07479772375474 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.07076997283851 * G_Contacts_Count_12_mon0 +
0.4053112894421 * G_Contacts_Count_12_mon1 + -0.01193233191664 * G_Contacts_Count_12_mon2 +
0.11019777907243 * G_Contacts_Count_12_mon3 + 0.07706884296578 * G_Customer_Age0 +
-0.37152092198474 * G_Customer_Age1 + -0.22828344167191 * G_Customer_Age2 + -0.05061057943019
* G_Customer_Age3 + -0.11730355838374 * G_Customer_Age4 + -0.16657836727629 * G_Customer_Age5
+ -0.19930312229165 * G_Customer_Age6 + -0.22497785692239 * G_Customer_Age7 + 0.02355586974 *
G_Customer_Age8 + 0.1209977427348 * G_Customer_Age9 + -0.00246569984757 *
G_Months_Inactive_12_mon0 + -0.04282271630458 * G_Months_Inactive_12_mon1 + 0.192766910686 *
G_Months_Inactive_12_mon2 + 0.0688797059827 * G_Months_Inactive_12_mon3 + -0.07346516413568 *
G_Months_on_book0 + 0.29892632213851 * G_Months_on_book1 + -0.01256186499973 *
G_Months_on_book2 + -0.15627292530888 * G_Months_on_book3 + -0.38203200145326 *
G_Months_on_book4 + 0.02609861849884 * G_Months_on_book5 + -0.10987207384174 *
G_Months_on_book6 + 0.13169504559396 * G_Months_on_book7 + -0.09494293869854 *
G_Total_Relationship_Count0 + 0.03030101782007 * G_Total_Relationship_Count1 +
0.09922577750406 * G_Total_Trans_Ct0 + 0.62167149120482 * G_Total_Trans_Ct1 + 1.09837857192449
* G_Total_Trans_Ct2 + 0.88990320473212 * G_Total_Trans_Ct3 + 0.14603842645544 *
G_Total_Trans_Ct4 + -0.05725013848453 * G_Total_Trans_Ct5 + -0.07479772375474 *
G_Total_Trans_Ct6 ;
394101    +   H1x1_4  = H1x1_4  +    -0.20788908396801 * G_Contacts_Count_12_mon0
394102    +          +    -0.39937066992208 * G_Contacts_Count_12_mon1
394103    +          +     0.23098390094251 * G_Contacts_Count_12_mon2
394104    +          +      0.2127179266351 * G_Contacts_Count_12_mon3
394105    +          +    -0.11711142776988 * G_Customer_Age0  +     0.08758329474303 *
394106    +        G_Customer_Age1  +    -0.12946577860857 * G_Customer_Age2
394107    +          +    -0.20984622032713 * G_Customer_Age3  +     0.01543054380114 *
394108    +        G_Customer_Age4  +     0.01744527086181 * G_Customer_Age5
394109    +          +    -0.12679305846676 * G_Customer_Age6  +    -0.15490204363057 *
394110    +        G_Customer_Age7  +    -0.03666340889065 * G_Customer_Age8
394111    +          +     0.38882646973981 * G_Customer_Age9  +     0.25963553341962 *
394112    +        G_Months_Inactive_12_mon0  +     0.07006278804627 *
394113    +        G_Months_Inactive_12_mon1  +    -0.02110503693861 *
394114    +        G_Months_Inactive_12_mon2  +    -0.10613087621136 *
394115    +        G_Months_Inactive_12_mon3  +    -0.21095466449456 * G_Months_on_book0
394116    +          +    -0.06453257990504 * G_Months_on_book1
394117    +          +     0.19605382103997 * G_Months_on_book2
394118    +          +     0.07222632323077 * G_Months_on_book3
394119    +          +    -0.05336430789811 * G_Months_on_book4
394120    +          +     0.11363368224674 * G_Months_on_book5
394121    +          +     0.09853243776679 * G_Months_on_book6
394122    +          +     0.06881256086949 * G_Months_on_book7
394123    +          +    -0.11915180567564 * G_Total_Relationship_Count0
394124    +          +     0.08464523731571 * G_Total_Relationship_Count1
394125    +          +     -0.0582771620162 * G_Total_Trans_Ct0
394126    +          +    -0.11735306221869 * G_Total_Trans_Ct1
394127    +          +     0.07977042868499 * G_Total_Trans_Ct2
394128    +          +    -0.01121366479248 * G_Total_Trans_Ct3
394129    +          +     0.00086124112134 * G_Total_Trans_Ct4
394130    +          +    -0.14234381283026 * G_Total_Trans_Ct5
394131    +          +    -0.10161876925237 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.20788908396801 * G_Contacts_Count_12_mon0 +
-0.39937066992208 * G_Contacts_Count_12_mon1 + 0.23098390094251 * G_Contacts_Count_12_mon2 +
0.2127179266351 * G_Contacts_Count_12_mon3 + -0.11711142776988 * G_Customer_Age0 +
0.08758329474303 * G_Customer_Age1 + -0.12946577860857 * G_Customer_Age2 + -0.20984622032713 *
G_Customer_Age3 + 0.01543054380114 * G_Customer_Age4 + 0.01744527086181 * G_Customer_Age5 +
-0.12679305846676 * G_Customer_Age6 + -0.15490204363057 * G_Customer_Age7 + -0.03666340889065
* G_Customer_Age8 + 0.38882646973981 * G_Customer_Age9 + 0.25963553341962 *
G_Months_Inactive_12_mon0 + 0.07006278804627 * G_Months_Inactive_12_mon1 + -0.02110503693861 *
G_Months_Inactive_12_mon2 + -0.10613087621136 * G_Months_Inactive_12_mon3 + -0.21095466449456
* G_Months_on_book0 + -0.06453257990504 * G_Months_on_book1 + 0.19605382103997 *
G_Months_on_book2 + 0.07222632323077 * G_Months_on_book3 + -0.05336430789811 *
G_Months_on_book4 + 0.11363368224674 * G_Months_on_book5 + 0.09853243776679 *
G_Months_on_book6 + 0.06881256086949 * G_Months_on_book7 + -0.11915180567564 *
G_Total_Relationship_Count0 + 0.08464523731571 * G_Total_Relationship_Count1 +
-0.0582771620162 * G_Total_Trans_Ct0 + -0.11735306221869 * G_Total_Trans_Ct1 +
0.07977042868499 * G_Total_Trans_Ct2 + -0.01121366479248 * G_Total_Trans_Ct3 +
0.00086124112134 * G_Total_Trans_Ct4 + -0.14234381283026 * G_Total_Trans_Ct5 +
-0.10161876925237 * G_Total_Trans_Ct6 ;
394132    +   H1x1_5  = H1x1_5  +    -0.56902878790282 * G_Contacts_Count_12_mon0
394133    +          +    -0.16661261863249 * G_Contacts_Count_12_mon1
394134    +          +     0.08076675187438 * G_Contacts_Count_12_mon2
394135    +          +    -0.04057310022146 * G_Contacts_Count_12_mon3
394136    +          +    -0.48914285297075 * G_Customer_Age0  +     0.00170634322548 *
394137    +        G_Customer_Age1  +    -0.03975363775767 * G_Customer_Age2
394138    +          +    -0.01004834554468 * G_Customer_Age3  +     0.07215975430623 *
394139    +        G_Customer_Age4  +     0.11860041310799 * G_Customer_Age5
394140    +          +     0.04386124283943 * G_Customer_Age6  +    -0.02226006521088 *
394141    +        G_Customer_Age7  +     -0.0829461915445 * G_Customer_Age8
394142    +          +     0.97010783558513 * G_Customer_Age9  +    -0.35584533888723 *
394143    +        G_Months_Inactive_12_mon0  +      0.1574507014307 *
394144    +        G_Months_Inactive_12_mon1  +    -0.22690548181964 *
394145    +        G_Months_Inactive_12_mon2  +    -0.02402805082996 *
394146    +        G_Months_Inactive_12_mon3  +    -0.10211365537508 * G_Months_on_book0
394147    +          +    -0.40331789307737 * G_Months_on_book1
394148    +          +       0.111045361897 * G_Months_on_book2
394149    +          +     0.10992466576811 * G_Months_on_book3
394150    +          +     0.24056560603644 * G_Months_on_book4
394151    +          +     0.09226782022325 * G_Months_on_book5
394152    +          +     0.30704641402586 * G_Months_on_book6
394153    +          +     0.02608767076246 * G_Months_on_book7
394154    +          +    -0.10991821081945 * G_Total_Relationship_Count0
394155    +          +      0.1857841458513 * G_Total_Relationship_Count1
394156    +          +    -0.57942689171738 * G_Total_Trans_Ct0
394157    +          +    -0.68283775177985 * G_Total_Trans_Ct1
394158    +          +    -0.89750294872048 * G_Total_Trans_Ct2
394159    +          +    -0.67542502097146 * G_Total_Trans_Ct3
394160    +          +     0.30309836129805 * G_Total_Trans_Ct4
394161    +          +     0.77487769325225 * G_Total_Trans_Ct5
394162    +          +     1.02605659513191 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56902878790282 * G_Contacts_Count_12_mon0 +
-0.16661261863249 * G_Contacts_Count_12_mon1 + 0.08076675187438 * G_Contacts_Count_12_mon2 +
-0.04057310022146 * G_Contacts_Count_12_mon3 + -0.48914285297075 * G_Customer_Age0 +
0.00170634322548 * G_Customer_Age1 + -0.03975363775767 * G_Customer_Age2 + -0.01004834554468 *
G_Customer_Age3 + 0.07215975430623 * G_Customer_Age4 + 0.11860041310799 * G_Customer_Age5 +
0.04386124283943 * G_Customer_Age6 + -0.02226006521088 * G_Customer_Age7 + -0.0829461915445 *
G_Customer_Age8 + 0.97010783558513 * G_Customer_Age9 + -0.35584533888723 *
G_Months_Inactive_12_mon0 + 0.1574507014307 * G_Months_Inactive_12_mon1 + -0.22690548181964 *
G_Months_Inactive_12_mon2 + -0.02402805082996 * G_Months_Inactive_12_mon3 + -0.10211365537508
* G_Months_on_book0 + -0.40331789307737 * G_Months_on_book1 + 0.111045361897 *
G_Months_on_book2 + 0.10992466576811 * G_Months_on_book3 + 0.24056560603644 *
G_Months_on_book4 + 0.09226782022325 * G_Months_on_book5 + 0.30704641402586 *
G_Months_on_book6 + 0.02608767076246 * G_Months_on_book7 + -0.10991821081945 *
G_Total_Relationship_Count0 + 0.1857841458513 * G_Total_Relationship_Count1 +
-0.57942689171738 * G_Total_Trans_Ct0 + -0.68283775177985 * G_Total_Trans_Ct1 +
-0.89750294872048 * G_Total_Trans_Ct2 + -0.67542502097146 * G_Total_Trans_Ct3 +
0.30309836129805 * G_Total_Trans_Ct4 + 0.77487769325225 * G_Total_Trans_Ct5 + 1.02605659513191
* G_Total_Trans_Ct6 ;
394163    +   H1x1_6  = H1x1_6  +     0.13221112619587 * G_Contacts_Count_12_mon0
394164    +          +     0.06873025796286 * G_Contacts_Count_12_mon1
394165    +          +     0.15106577297273 * G_Contacts_Count_12_mon2
394166    +          +     0.02758955335574 * G_Contacts_Count_12_mon3
394167    +          +    -0.29581799524654 * G_Customer_Age0  +     0.33907010213137 *
394168    +        G_Customer_Age1  +    -0.08748797480777 * G_Customer_Age2
394169    +          +     0.23533147426665 * G_Customer_Age3  +    -0.13925157936482 *
394170    +        G_Customer_Age4  +    -0.08246938124949 * G_Customer_Age5
394171    +          +     0.08407167326123 * G_Customer_Age6  +     0.10094164575548 *
394172    +        G_Customer_Age7  +     0.12405820912475 * G_Customer_Age8
394173    +          +    -0.27674343160986 * G_Customer_Age9  +     0.22216749562418 *
394174    +        G_Months_Inactive_12_mon0  +      0.0052454194168 *
394175    +        G_Months_Inactive_12_mon1  +     0.30735551162206 *
394176    +        G_Months_Inactive_12_mon2  +     0.13429569680964 *
394177    +        G_Months_Inactive_12_mon3  +     0.15691372658011 * G_Months_on_book0
394178    +          +    -0.01231673079327 * G_Months_on_book1
394179    +          +     0.04161404001317 * G_Months_on_book2
394180    +          +      0.0537182206432 * G_Months_on_book3
394181    +          +    -0.28089933654563 * G_Months_on_book4
394182    +          +    -0.17604035689726 * G_Months_on_book5
394183    +          +     0.24792432349444 * G_Months_on_book6
394184    +          +     0.03887575032577 * G_Months_on_book7
394185    +          +     0.16571491692789 * G_Total_Relationship_Count0
394186    +          +    -0.02906776998496 * G_Total_Relationship_Count1
394187    +          +     0.38599519077683 * G_Total_Trans_Ct0
394188    +          +     0.12103406377764 * G_Total_Trans_Ct1
394189    +          +      0.1665955472516 * G_Total_Trans_Ct2
394190    +          +     0.18842838894433 * G_Total_Trans_Ct3
394191    +          +    -0.22091742274663 * G_Total_Trans_Ct4
394192    +          +    -0.16146582654558 * G_Total_Trans_Ct5
394193    +          +    -0.58765542396033 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.13221112619587 * G_Contacts_Count_12_mon0 +
0.06873025796286 * G_Contacts_Count_12_mon1 + 0.15106577297273 * G_Contacts_Count_12_mon2 +
0.02758955335574 * G_Contacts_Count_12_mon3 + -0.29581799524654 * G_Customer_Age0 +
0.33907010213137 * G_Customer_Age1 + -0.08748797480777 * G_Customer_Age2 + 0.23533147426665 *
G_Customer_Age3 + -0.13925157936482 * G_Customer_Age4 + -0.08246938124949 * G_Customer_Age5 +
0.08407167326123 * G_Customer_Age6 + 0.10094164575548 * G_Customer_Age7 + 0.12405820912475 *
G_Customer_Age8 + -0.27674343160986 * G_Customer_Age9 + 0.22216749562418 *
G_Months_Inactive_12_mon0 + 0.0052454194168 * G_Months_Inactive_12_mon1 + 0.30735551162206 *
G_Months_Inactive_12_mon2 + 0.13429569680964 * G_Months_Inactive_12_mon3 + 0.15691372658011 *
G_Months_on_book0 + -0.01231673079327 * G_Months_on_book1 + 0.04161404001317 *
G_Months_on_book2 + 0.0537182206432 * G_Months_on_book3 + -0.28089933654563 *
G_Months_on_book4 + -0.17604035689726 * G_Months_on_book5 + 0.24792432349444 *
G_Months_on_book6 + 0.03887575032577 * G_Months_on_book7 + 0.16571491692789 *
G_Total_Relationship_Count0 + -0.02906776998496 * G_Total_Relationship_Count1 +
0.38599519077683 * G_Total_Trans_Ct0 + 0.12103406377764 * G_Total_Trans_Ct1 + 0.1665955472516
* G_Total_Trans_Ct2 + 0.18842838894433 * G_Total_Trans_Ct3 + -0.22091742274663 *
G_Total_Trans_Ct4 + -0.16146582654558 * G_Total_Trans_Ct5 + -0.58765542396033 *
G_Total_Trans_Ct6 ;
394194    +   H1x1_7  = H1x1_7  +     0.52979284063353 * G_Contacts_Count_12_mon0
394195    +          +    -0.00927053652737 * G_Contacts_Count_12_mon1
394196    +          +    -0.20151253370614 * G_Contacts_Count_12_mon2
394197    +          +    -0.32482266013186 * G_Contacts_Count_12_mon3
394198    +          +     0.28872518748449 * G_Customer_Age0  +     0.27372518652188 *
394199    +        G_Customer_Age1  +    -0.07641157440357 * G_Customer_Age2
394200    +          +     0.17754100292617 * G_Customer_Age3  +      0.2114128425926 *
394201    +        G_Customer_Age4  +     0.22055682171423 * G_Customer_Age5
394202    +          +    -0.00718728894877 * G_Customer_Age6  +    -0.05710622042797 *
394203    +        G_Customer_Age7  +     0.04337724542871 * G_Customer_Age8
394204    +          +    -0.34634671262451 * G_Customer_Age9  +     0.39054305983726 *
394205    +        G_Months_Inactive_12_mon0  +      0.0584319065406 *
394206    +        G_Months_Inactive_12_mon1  +     0.05072065962762 *
394207    +        G_Months_Inactive_12_mon2  +     -0.1972631125201 *
394208    +        G_Months_Inactive_12_mon3  +     0.10983158695445 * G_Months_on_book0
394209    +          +    -0.10780752641854 * G_Months_on_book1
394210    +          +     0.19890305414935 * G_Months_on_book2
394211    +          +    -0.02871177908005 * G_Months_on_book3
394212    +          +     0.07115842629584 * G_Months_on_book4
394213    +          +     0.07042674563525 * G_Months_on_book5
394214    +          +     0.12878592163255 * G_Months_on_book6
394215    +          +     -0.1092783116355 * G_Months_on_book7
394216    +          +    -0.10515030909733 * G_Total_Relationship_Count0
394217    +          +    -0.15072520294283 * G_Total_Relationship_Count1
394218    +          +     1.19553165179253 * G_Total_Trans_Ct0
394219    +          +     0.39569879975941 * G_Total_Trans_Ct1
394220    +          +     0.12633022908457 * G_Total_Trans_Ct2
394221    +          +     0.64963494787214 * G_Total_Trans_Ct3
394222    +          +    -0.03209221597063 * G_Total_Trans_Ct4
394223    +          +     0.01435877324027 * G_Total_Trans_Ct5
394224    +          +      -1.000780001653 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.52979284063353 * G_Contacts_Count_12_mon0 +
-0.00927053652737 * G_Contacts_Count_12_mon1 + -0.20151253370614 * G_Contacts_Count_12_mon2 +
-0.32482266013186 * G_Contacts_Count_12_mon3 + 0.28872518748449 * G_Customer_Age0 +
0.27372518652188 * G_Customer_Age1 + -0.07641157440357 * G_Customer_Age2 + 0.17754100292617 *
G_Customer_Age3 + 0.2114128425926 * G_Customer_Age4 + 0.22055682171423 * G_Customer_Age5 +
-0.00718728894877 * G_Customer_Age6 + -0.05710622042797 * G_Customer_Age7 + 0.04337724542871 *
G_Customer_Age8 + -0.34634671262451 * G_Customer_Age9 + 0.39054305983726 *
G_Months_Inactive_12_mon0 + 0.0584319065406 * G_Months_Inactive_12_mon1 + 0.05072065962762 *
G_Months_Inactive_12_mon2 + -0.1972631125201 * G_Months_Inactive_12_mon3 + 0.10983158695445 *
G_Months_on_book0 + -0.10780752641854 * G_Months_on_book1 + 0.19890305414935 *
G_Months_on_book2 + -0.02871177908005 * G_Months_on_book3 + 0.07115842629584 *
G_Months_on_book4 + 0.07042674563525 * G_Months_on_book5 + 0.12878592163255 *
G_Months_on_book6 + -0.1092783116355 * G_Months_on_book7 + -0.10515030909733 *
G_Total_Relationship_Count0 + -0.15072520294283 * G_Total_Relationship_Count1 +
1.19553165179253 * G_Total_Trans_Ct0 + 0.39569879975941 * G_Total_Trans_Ct1 + 0.12633022908457
* G_Total_Trans_Ct2 + 0.64963494787214 * G_Total_Trans_Ct3 + -0.03209221597063 *
G_Total_Trans_Ct4 + 0.01435877324027 * G_Total_Trans_Ct5 + -1.000780001653 * G_Total_Trans_Ct6
;
394225    +   H1x1_8  = H1x1_8  +     0.43559578908991 * G_Contacts_Count_12_mon0
394226    +          +     0.15482576026797 * G_Contacts_Count_12_mon1
394227    +          +     0.22003771328343 * G_Contacts_Count_12_mon2
394228    +          +    -0.32351859644489 * G_Contacts_Count_12_mon3
394229    +          +     0.25527818982735 * G_Customer_Age0  +    -0.34625101213556 *
394230    +        G_Customer_Age1  +    -0.10206653170454 * G_Customer_Age2
394231    +          +     0.16238377490538 * G_Customer_Age3  +     0.23820362187239 *
394232    +        G_Customer_Age4  +    -0.28893981282635 * G_Customer_Age5
394233    +          +    -0.15157347323935 * G_Customer_Age6  +    -0.09709525607225 *
394234    +        G_Customer_Age7  +     0.05101807706778 * G_Customer_Age8
394235    +          +      0.1833303362658 * G_Customer_Age9  +     0.22150219250501 *
394236    +        G_Months_Inactive_12_mon0  +      0.1914152418903 *
394237    +        G_Months_Inactive_12_mon1  +    -0.13661547545204 *
394238    +        G_Months_Inactive_12_mon2  +     0.04075969886218 *
394239    +        G_Months_Inactive_12_mon3  +     0.16588195769456 * G_Months_on_book0
394240    +          +     0.35595447039136 * G_Months_on_book1
394241    +          +    -0.13428049455488 * G_Months_on_book2
394242    +          +     0.11005558553554 * G_Months_on_book3
394243    +          +     0.04235545524164 * G_Months_on_book4
394244    +          +    -0.19070437958701 * G_Months_on_book5
394245    +          +     -0.0897976458589 * G_Months_on_book6
394246    +          +     0.15754587346328 * G_Months_on_book7
394247    +          +     0.77093275314634 * G_Total_Relationship_Count0
394248    +          +    -0.21505110573527 * G_Total_Relationship_Count1
394249    +          +     0.55685628450068 * G_Total_Trans_Ct0
394250    +          +      0.2374533906488 * G_Total_Trans_Ct1
394251    +          +     -0.1958105436154 * G_Total_Trans_Ct2
394252    +          +     0.13056576720194 * G_Total_Trans_Ct3
394253    +          +     0.00648614572271 * G_Total_Trans_Ct4
394254    +          +     0.15255649554313 * G_Total_Trans_Ct5
394255    +          +    -0.31681419802422 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_8 = H1x1_8 + 0.43559578908991 * G_Contacts_Count_12_mon0 +
0.15482576026797 * G_Contacts_Count_12_mon1 + 0.22003771328343 * G_Contacts_Count_12_mon2 +
-0.32351859644489 * G_Contacts_Count_12_mon3 + 0.25527818982735 * G_Customer_Age0 +
-0.34625101213556 * G_Customer_Age1 + -0.10206653170454 * G_Customer_Age2 + 0.16238377490538 *
G_Customer_Age3 + 0.23820362187239 * G_Customer_Age4 + -0.28893981282635 * G_Customer_Age5 +
-0.15157347323935 * G_Customer_Age6 + -0.09709525607225 * G_Customer_Age7 + 0.05101807706778 *
G_Customer_Age8 + 0.1833303362658 * G_Customer_Age9 + 0.22150219250501 *
G_Months_Inactive_12_mon0 + 0.1914152418903 * G_Months_Inactive_12_mon1 + -0.13661547545204 *
G_Months_Inactive_12_mon2 + 0.04075969886218 * G_Months_Inactive_12_mon3 + 0.16588195769456 *
G_Months_on_book0 + 0.35595447039136 * G_Months_on_book1 + -0.13428049455488 *
G_Months_on_book2 + 0.11005558553554 * G_Months_on_book3 + 0.04235545524164 *
G_Months_on_book4 + -0.19070437958701 * G_Months_on_book5 + -0.0897976458589 *
G_Months_on_book6 + 0.15754587346328 * G_Months_on_book7 + 0.77093275314634 *
G_Total_Relationship_Count0 + -0.21505110573527 * G_Total_Relationship_Count1 +
0.55685628450068 * G_Total_Trans_Ct0 + 0.2374533906488 * G_Total_Trans_Ct1 + -0.1958105436154
* G_Total_Trans_Ct2 + 0.13056576720194 * G_Total_Trans_Ct3 + 0.00648614572271 *
G_Total_Trans_Ct4 + 0.15255649554313 * G_Total_Trans_Ct5 + -0.31681419802422 *
G_Total_Trans_Ct6 ;
394256    +   H1x1_1  =     0.02650025320783 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.02650025320783 + H1x1_1 ;
394257    +   H1x1_2  =    -0.25684105730406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.25684105730406 + H1x1_2 ;
394258    +   H1x1_3  =    -0.50787825627603 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.50787825627603 + H1x1_3 ;
394259    +   H1x1_4  =     -0.5245695310695 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.5245695310695 + H1x1_4 ;
394260    +   H1x1_5  =     1.16436476363924 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.16436476363924 + H1x1_5 ;
394261    +   H1x1_6  =     0.33913994954524 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.33913994954524 + H1x1_6 ;
394262    +   H1x1_7  =     1.58805018436023 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.58805018436023 + H1x1_7 ;
394263    +   H1x1_8  =    -2.12315030302658 + H1x1_8 ;
MPRINT(EM_DIAGRAM):   H1x1_8 = -2.12315030302658 + H1x1_8 ;
394264    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
394265    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
394266    +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
394267    +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
394268    +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
394269    +   H1x1_4  = EXP(MIN(-0.5 * H1x1_4 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(MIN(-0.5 * H1x1_4 **2, _EXP_BAR));
394270    +   H1x1_5  = EXP(MIN(-0.5 * H1x1_5 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(MIN(-0.5 * H1x1_5 **2, _EXP_BAR));
394271    +   H1x1_6  = EXP(MIN(-0.5 * H1x1_6 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(MIN(-0.5 * H1x1_6 **2, _EXP_BAR));
394272    +   H1x1_7  = EXP(MIN(-0.5 * H1x1_7 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(MIN(-0.5 * H1x1_7 **2, _EXP_BAR));
394273    +   H1x1_8  = EXP(MIN(-0.5 * H1x1_8 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_8 = EXP(MIN(-0.5 * H1x1_8 **2, _EXP_BAR));
394274    +END;
MPRINT(EM_DIAGRAM):   END;
394275    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
394276    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
394277    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
394278    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
394279    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
394280    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
394281    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
394282    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
394283    +   H1x1_8  = .;
MPRINT(EM_DIAGRAM):   H1x1_8 = .;
394284    +END;
MPRINT(EM_DIAGRAM):   END;
394285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
394286    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
394287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
394288    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
394289    +   H2x1_1  =     0.08862660282113 * H1x1_1  +     0.40243412973248 * H1x1_2
394290    +          +     2.02443454653222 * H1x1_3  +    -1.72744500671302 * H1x1_4
394291    +          +      1.8238088425411 * H1x1_5  +    -1.93408809997984 * H1x1_6
394292    +          +    -0.75757402320895 * H1x1_7  +      1.1743020655621 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.08862660282113 * H1x1_1 + 0.40243412973248 * H1x1_2 +
2.02443454653222 * H1x1_3 + -1.72744500671302 * H1x1_4 + 1.8238088425411 * H1x1_5 +
-1.93408809997984 * H1x1_6 + -0.75757402320895 * H1x1_7 + 1.1743020655621 * H1x1_8 ;
394293    +   H2x1_2  =     2.04689085726492 * H1x1_1  +    -0.20793468317806 * H1x1_2
394294    +          +     0.88358710261429 * H1x1_3  +     0.56058137974114 * H1x1_4
394295    +          +     0.08505573871889 * H1x1_5  +     0.11321169903443 * H1x1_6
394296    +          +     0.28214925336371 * H1x1_7  +     0.93894860595328 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.04689085726492 * H1x1_1 + -0.20793468317806 * H1x1_2 +
0.88358710261429 * H1x1_3 + 0.56058137974114 * H1x1_4 + 0.08505573871889 * H1x1_5 +
0.11321169903443 * H1x1_6 + 0.28214925336371 * H1x1_7 + 0.93894860595328 * H1x1_8 ;
394297    +   H2x1_3  =     -1.2184808904648 * H1x1_1  +    -0.19460736676124 * H1x1_2
394298    +          +    -0.46304820196999 * H1x1_3  +     1.67787333554577 * H1x1_4
394299    +          +    -1.29800064995406 * H1x1_5  +     0.66380298593322 * H1x1_6
394300    +          +     0.90021515216269 * H1x1_7  +    -1.34294578583942 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.2184808904648 * H1x1_1 + -0.19460736676124 * H1x1_2 +
-0.46304820196999 * H1x1_3 + 1.67787333554577 * H1x1_4 + -1.29800064995406 * H1x1_5 +
0.66380298593322 * H1x1_6 + 0.90021515216269 * H1x1_7 + -1.34294578583942 * H1x1_8 ;
394301    +   H2x1_4  =     0.07420954177297 * H1x1_1  +     0.06245751395874 * H1x1_2
394302    +          +     1.75101414002355 * H1x1_3  +    -0.69876187290575 * H1x1_4
394303    +          +     1.64522917242144 * H1x1_5  +     0.58439192388549 * H1x1_6
394304    +          +     1.71684196350147 * H1x1_7  +    -0.09182458057059 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.07420954177297 * H1x1_1 + 0.06245751395874 * H1x1_2 +
1.75101414002355 * H1x1_3 + -0.69876187290575 * H1x1_4 + 1.64522917242144 * H1x1_5 +
0.58439192388549 * H1x1_6 + 1.71684196350147 * H1x1_7 + -0.09182458057059 * H1x1_8 ;
394305    +   H2x1_5  =    -1.98024643363819 * H1x1_1  +     0.27225061249304 * H1x1_2
394306    +          +     0.07627795727865 * H1x1_3  +    -0.91980460817422 * H1x1_4
394307    +          +    -0.59096956501431 * H1x1_5  +    -0.50710914261851 * H1x1_6
394308    +          +     -1.9770496377027 * H1x1_7  +     0.24951909623587 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.98024643363819 * H1x1_1 + 0.27225061249304 * H1x1_2 +
0.07627795727865 * H1x1_3 + -0.91980460817422 * H1x1_4 + -0.59096956501431 * H1x1_5 +
-0.50710914261851 * H1x1_6 + -1.9770496377027 * H1x1_7 + 0.24951909623587 * H1x1_8 ;
394309    +   H2x1_6  =    -2.24015626845506 * H1x1_1  +    -1.85105325756077 * H1x1_2
394310    +          +     1.03975495809148 * H1x1_3  +      1.3268323396913 * H1x1_4
394311    +          +     1.61406315831088 * H1x1_5  +    -1.31415185757273 * H1x1_6
394312    +          +     -1.5906272596979 * H1x1_7  +     1.44315645396274 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.24015626845506 * H1x1_1 + -1.85105325756077 * H1x1_2 +
1.03975495809148 * H1x1_3 + 1.3268323396913 * H1x1_4 + 1.61406315831088 * H1x1_5 +
-1.31415185757273 * H1x1_6 + -1.5906272596979 * H1x1_7 + 1.44315645396274 * H1x1_8 ;
394313    +   H2x1_7  =    -0.68488963405252 * H1x1_1  +    -1.78048017163839 * H1x1_2
394314    +          +    -0.80113851495727 * H1x1_3  +    -0.30303871473155 * H1x1_4
394315    +          +    -0.89424738421983 * H1x1_5  +     0.88296045952163 * H1x1_6
394316    +          +     1.46780135693795 * H1x1_7  +    -0.54776833354744 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -0.68488963405252 * H1x1_1 + -1.78048017163839 * H1x1_2 +
-0.80113851495727 * H1x1_3 + -0.30303871473155 * H1x1_4 + -0.89424738421983 * H1x1_5 +
0.88296045952163 * H1x1_6 + 1.46780135693795 * H1x1_7 + -0.54776833354744 * H1x1_8 ;
394317    +   H2x1_8  =     0.84377114826897 * H1x1_1  +    -0.14810018909791 * H1x1_2
394318    +          +     1.11853545850139 * H1x1_3  +    -0.52413654460248 * H1x1_4
394319    +          +     0.26423935198202 * H1x1_5  +     0.73287134084679 * H1x1_6
394320    +          +    -0.10968109058294 * H1x1_7  +     0.05373159333235 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_8 = 0.84377114826897 * H1x1_1 + -0.14810018909791 * H1x1_2 +
1.11853545850139 * H1x1_3 + -0.52413654460248 * H1x1_4 + 0.26423935198202 * H1x1_5 +
0.73287134084679 * H1x1_6 + -0.10968109058294 * H1x1_7 + 0.05373159333235 * H1x1_8 ;
394321    +   H2x1_1  =    -0.31574497820096 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.31574497820096 + H2x1_1 ;
394322    +   H2x1_2  =     -1.1221477339575 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.1221477339575 + H2x1_2 ;
394323    +   H2x1_3  =    -0.09036454817003 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.09036454817003 + H2x1_3 ;
394324    +   H2x1_4  =    -0.11931722312594 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11931722312594 + H2x1_4 ;
394325    +   H2x1_5  =     0.18308841470994 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.18308841470994 + H2x1_5 ;
394326    +   H2x1_6  =    -1.66376461184436 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.66376461184436 + H2x1_6 ;
394327    +   H2x1_7  =     1.50948440714938 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.50948440714938 + H2x1_7 ;
394328    +   H2x1_8  =    -1.19197165918413 + H2x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_8 = -1.19197165918413 + H2x1_8 ;
394329    +   H2x1_1  = TANH(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = TANH(H2x1_1 );
394330    +   H2x1_2  = TANH(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = TANH(H2x1_2 );
394331    +   H2x1_3  = TANH(H2x1_3 );
MPRINT(EM_DIAGRAM):   H2x1_3 = TANH(H2x1_3 );
394332    +   H2x1_4  = TANH(H2x1_4 );
MPRINT(EM_DIAGRAM):   H2x1_4 = TANH(H2x1_4 );
394333    +   H2x1_5  = TANH(H2x1_5 );
MPRINT(EM_DIAGRAM):   H2x1_5 = TANH(H2x1_5 );
394334    +   H2x1_6  = TANH(H2x1_6 );
MPRINT(EM_DIAGRAM):   H2x1_6 = TANH(H2x1_6 );
394335    +   H2x1_7  = TANH(H2x1_7 );
MPRINT(EM_DIAGRAM):   H2x1_7 = TANH(H2x1_7 );
394336    +   H2x1_8  = TANH(H2x1_8 );
MPRINT(EM_DIAGRAM):   H2x1_8 = TANH(H2x1_8 );
394337    +END;
MPRINT(EM_DIAGRAM):   END;
394338    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
394339    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
394340    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
394341    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
394342    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
394343    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
394344    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
394345    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
394346    +   H2x1_8  = .;
MPRINT(EM_DIAGRAM):   H2x1_8 = .;
394347    +END;
MPRINT(EM_DIAGRAM):   END;
394348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
394349    +*** Writing the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Attrition_Flag ;
394350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
394351    +
394352    +*** Generate dummy variables for Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Attrition_Flag ;
394353    +drop Attrition_Flag1 Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   drop Attrition_Flag1 Attrition_Flag0 ;
394354    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
394355    +length F_Attrition_Flag $ 17;
MPRINT(EM_DIAGRAM):   length F_Attrition_Flag $ 17;
394356    +F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
MPRINT(EM_DIAGRAM):   F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
394357    +%DMNORMIP( F_Attrition_Flag )
MPRINT(DMNORMIP):   call dmnorm(F_Attrition_Flag,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
394358    +if missing( Attrition_Flag ) then do;
MPRINT(EM_DIAGRAM):   if missing( Attrition_Flag ) then do;
394359    +   Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
394360    +   Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
394361    +end;
MPRINT(EM_DIAGRAM):   end;
394362    +else do;
MPRINT(EM_DIAGRAM):   else do;
394363    +   if F_Attrition_Flag = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_Attrition_Flag = '0' then do;
394364    +      Attrition_Flag1 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 0;
394365    +      Attrition_Flag0 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 1;
394366    +   end;
MPRINT(EM_DIAGRAM):   end;
394367    +   else if F_Attrition_Flag = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_Attrition_Flag = '1' then do;
394368    +      Attrition_Flag1 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 1;
394369    +      Attrition_Flag0 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 0;
394370    +   end;
MPRINT(EM_DIAGRAM):   end;
394371    +   else do;
MPRINT(EM_DIAGRAM):   else do;
394372    +      Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
394373    +      Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
394374    +   end;
MPRINT(EM_DIAGRAM):   end;
394375    +end;
MPRINT(EM_DIAGRAM):   end;
394376    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
394377    +   P_Attrition_Flag1  =     2.47649940953865 * H2x1_1
394378    +          +     0.82822394165393 * H2x1_2  +    -2.28704272678157 * H2x1_3
394379    +          +     0.98345755322308 * H2x1_4  +    -0.80209601445336 * H2x1_5
394380    +          +    -0.80328250572529 * H2x1_6  +    -2.19260501467389 * H2x1_7
394381    +          +     0.11593680364832 * H2x1_8 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 2.47649940953865 * H2x1_1 + 0.82822394165393 *
H2x1_2 + -2.28704272678157 * H2x1_3 + 0.98345755322308 * H2x1_4 + -0.80209601445336 * H2x1_5 +
-0.80328250572529 * H2x1_6 + -2.19260501467389 * H2x1_7 + 0.11593680364832 * H2x1_8 ;
394382    +   P_Attrition_Flag1  =    -3.90025292308802 + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = -3.90025292308802 + P_Attrition_Flag1 ;
394383    +   P_Attrition_Flag0  = 0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
394384    +   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
394385    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
394386    +   P_Attrition_Flag1  = EXP(P_Attrition_Flag1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = EXP(P_Attrition_Flag1 - _MAX_);
394387    +   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
394388    +   P_Attrition_Flag0  = EXP(P_Attrition_Flag0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = EXP(P_Attrition_Flag0 - _MAX_);
394389    +   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
394390    +   P_Attrition_Flag1  = P_Attrition_Flag1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 / _SUM_;
394391    +   P_Attrition_Flag0  = P_Attrition_Flag0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = P_Attrition_Flag0 / _SUM_;
394392    +END;
MPRINT(EM_DIAGRAM):   END;
394393    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
394394    +   P_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = .;
394395    +   P_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = .;
394396    +END;
MPRINT(EM_DIAGRAM):   END;
394397    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
394398    +   P_Attrition_Flag1  =      0.1606941309255;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1606941309255;
394399    +   P_Attrition_Flag0  =     0.83930586907449;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83930586907449;
394400    +END;
MPRINT(EM_DIAGRAM):   END;
394401    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
394402    +*** Writing the Residuals  of the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Attrition_Flag ;
394403    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
394404    +IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1 = . ;
394405    +ELSE R_Attrition_Flag1  = Attrition_Flag1  - P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag1 = Attrition_Flag1 - P_Attrition_Flag1 ;
394406    +IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0 = . ;
394407    +ELSE R_Attrition_Flag0  = Attrition_Flag0  - P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag0 = Attrition_Flag0 - P_Attrition_Flag0 ;
394408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
394409    +*** Writing the I_Attrition_Flag  AND U_Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Attrition_Flag AND U_Attrition_Flag ;
394410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
394411    +_MAXP_ = P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag1 ;
394412    +I_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "1                " ;
394413    +U_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "1                " ;
394414    +IF( _MAXP_ LT P_Attrition_Flag0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Attrition_Flag0 ) THEN DO;
394415    +   _MAXP_ = P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag0 ;
394416    +   I_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "0                " ;
394417    +   U_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "0                " ;
394418    +END;
MPRINT(EM_DIAGRAM):   END;
394419    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
394420    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
394421    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
394422    +drop
394423    +S_RANGE_LOG_Total_Trans_Amt
394424    +S_RANGE_SQRT_Avg_Utilization_Rat
394425    +S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
394426    +S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
394427    +S_RANGE_Total_Revolving_Bal
394428    +H1x1_1
394429    +H1x1_2
394430    +H1x1_3
394431    +H1x1_4
394432    +H1x1_5
394433    +H1x1_6
394434    +H1x1_7
394435    +H1x1_8
394436    +H2x1_1
394437    +H2x1_2
394438    +H2x1_3
394439    +H2x1_4
394440    +H2x1_5
394441    +H2x1_6
394442    +H2x1_7
394443    +H2x1_8
394444    +;
MPRINT(EM_DIAGRAM):   drop S_RANGE_LOG_Total_Trans_Amt S_RANGE_SQRT_Avg_Utilization_Rat
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 S_RANGE_Total_Revolving_Bal
H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x1_8 H2x1_1 H2x1_2 H2x1_3 H2x1_4 H2x1_5
H2x1_6 H2x1_7 H2x1_8 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
394445     run;
 
NOTE: DATA STEP view saved on file EMWS1.AUTONEURAL2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
394446     quit;
394447     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
394448     filename emflow
394448   ! "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
394449     *------------------------------------------------------------*;
394450     * AutoNeural2: Scoring TEST data;
394451     *------------------------------------------------------------*;
394452     data EMWS1.AutoNeural2_TEST
394453     / view=EMWS1.AutoNeural2_TEST
394454     ;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_TEST / view=EMWS1.AutoNeural2_TEST ;
394455     set EMWS1.Part2_TEST
394456     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TEST ;
394457     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMFLOWSCORE.sas.
394458    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
394459    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
394460    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
394461    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
394462    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
394463    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
394464    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
394465    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
394466    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
394467    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
394468    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
394469    +LENGTH _WARN_ $4
394470    +      F_Attrition_Flag  $ 17
394471    +      I_Attrition_Flag  $ 17
394472    +      U_Attrition_Flag  $ 17
394473    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Attrition_Flag $ 17 I_Attrition_Flag $ 17
U_Attrition_Flag $ 17 ;
394474    +      label S_RANGE_LOG_Total_Trans_Amt =
394475    +'Standard: RANGE_LOG_Total_Trans_Amt' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_LOG_Total_Trans_Amt = 'Standard:
RANGE_LOG_Total_Trans_Amt' ;
394476    +
394477    +      label S_RANGE_SQRT_Avg_Utilization_Rat =
394478    +'Standard: RANGE_SQRT_Avg_Utilization_Ratio' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Avg_Utilization_Rat = 'Standard:
RANGE_SQRT_Avg_Utilization_Ratio' ;
394479    +
394480    +      label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q =
394481    +'Standard: RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = 'Standard:
RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
394482    +
394483    +      label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 =
394484    +'Standard: RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = 'Standard:
RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
394485    +
394486    +      label S_RANGE_Total_Revolving_Bal =
394487    +'Standard: RANGE_Total_Revolving_Bal' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Total_Revolving_Bal = 'Standard:
RANGE_Total_Revolving_Bal' ;
394488    +
394489    +      label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
394490    +
394491    +      label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
394492    +
394493    +      label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
394494    +
394495    +      label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
394496    +
394497    +      label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
394498    +
394499    +      label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
394500    +
394501    +      label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
394502    +
394503    +      label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
394504    +
394505    +      label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
394506    +
394507    +      label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
394508    +
394509    +      label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
394510    +
394511    +      label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
394512    +
394513    +      label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
394514    +
394515    +      label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
394516    +
394517    +      label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
394518    +
394519    +      label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
394520    +
394521    +      label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
394522    +
394523    +      label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
394524    +
394525    +      label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
394526    +
394527    +      label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
394528    +
394529    +      label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
394530    +
394531    +      label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
394532    +
394533    +      label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
394534    +
394535    +      label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
394536    +
394537    +      label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
394538    +
394539    +      label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
394540    +
394541    +      label G_Total_Relationship_Count0 =
394542    +'Dummy: G_Total_Relationship_Count=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count0 = 'Dummy:
G_Total_Relationship_Count=0' ;
394543    +
394544    +      label G_Total_Relationship_Count1 =
394545    +'Dummy: G_Total_Relationship_Count=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count1 = 'Dummy:
G_Total_Relationship_Count=1' ;
394546    +
394547    +      label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
394548    +
394549    +      label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
394550    +
394551    +      label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
394552    +
394553    +      label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
394554    +
394555    +      label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
394556    +
394557    +      label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
394558    +
394559    +      label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
394560    +
394561    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
394562    +
394563    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
394564    +
394565    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
394566    +
394567    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
394568    +
394569    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
394570    +
394571    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
394572    +
394573    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
394574    +
394575    +      label H1x1_8 = 'Hidden: H1x1_=8' ;
MPRINT(EM_DIAGRAM):   label H1x1_8 = 'Hidden: H1x1_=8' ;
394576    +
394577    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
394578    +
394579    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
394580    +
394581    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
394582    +
394583    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
394584    +
394585    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
394586    +
394587    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
394588    +
394589    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
394590    +
394591    +      label H2x1_8 = 'Hidden: H2x1_=8' ;
MPRINT(EM_DIAGRAM):   label H2x1_8 = 'Hidden: H2x1_=8' ;
394592    +
394593    +      label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
394594    +
394595    +      label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
394596    +
394597    +      label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
394598    +
394599    +      label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
394600    +
394601    +      label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
394602    +
394603    +      label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
394604    +
394605    +      label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
394606    +
394607    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
394608    +
394609    +*** Generate dummy variables for G_Contacts_Count_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Contacts_Count_12_mon ;
394610    +drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
394611    +        G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
394612    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
394613    +G_Contacts_Count_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 0;
394614    +G_Contacts_Count_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 0;
394615    +G_Contacts_Count_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 0;
394616    +G_Contacts_Count_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 0;
394617    +if missing( G_Contacts_Count_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Contacts_Count_12_mon ) then do;
394618    +   G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
394619    +   G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
394620    +   G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
394621    +   G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
394622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
394623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394624    +end;
MPRINT(EM_DIAGRAM):   end;
394625    +else do;
MPRINT(EM_DIAGRAM):   else do;
394626    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
394627    +   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
394628    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
394629    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
394630    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
394631    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
394632    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
394633    +            G_Contacts_Count_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 1;
394634    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394635    +         end;
MPRINT(EM_DIAGRAM):   end;
394636    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394637    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
394638    +               G_Contacts_Count_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 1;
394639    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394640    +            end;
MPRINT(EM_DIAGRAM):   end;
394641    +         end;
MPRINT(EM_DIAGRAM):   end;
394642    +      end;
MPRINT(EM_DIAGRAM):   end;
394643    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394644    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
394645    +            G_Contacts_Count_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 1;
394646    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394647    +         end;
MPRINT(EM_DIAGRAM):   end;
394648    +      end;
MPRINT(EM_DIAGRAM):   end;
394649    +   end;
MPRINT(EM_DIAGRAM):   end;
394650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
394651    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
394652    +         G_Contacts_Count_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 1;
394653    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394654    +      end;
MPRINT(EM_DIAGRAM):   end;
394655    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394656    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
394657    +            G_Contacts_Count_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = -1;
394658    +            G_Contacts_Count_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = -1;
394659    +            G_Contacts_Count_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = -1;
394660    +            G_Contacts_Count_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = -1;
394661    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394662    +         end;
MPRINT(EM_DIAGRAM):   end;
394663    +      end;
MPRINT(EM_DIAGRAM):   end;
394664    +   end;
MPRINT(EM_DIAGRAM):   end;
394665    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
394666    +      G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
394667    +      G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
394668    +      G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
394669    +      G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
394670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
394671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394672    +   end;
MPRINT(EM_DIAGRAM):   end;
394673    +end;
MPRINT(EM_DIAGRAM):   end;
394674    +
394675    +*** Generate dummy variables for G_Customer_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Customer_Age ;
394676    +drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
394677    +        G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7
394678    +        G_Customer_Age8 G_Customer_Age9 ;
MPRINT(EM_DIAGRAM):   drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7 G_Customer_Age8
G_Customer_Age9 ;
394679    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
394680    +G_Customer_Age0 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 0;
394681    +G_Customer_Age1 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 0;
394682    +G_Customer_Age2 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 0;
394683    +G_Customer_Age3 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 0;
394684    +G_Customer_Age4 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 0;
394685    +G_Customer_Age5 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 0;
394686    +G_Customer_Age6 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 0;
394687    +G_Customer_Age7 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 0;
394688    +G_Customer_Age8 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 0;
394689    +G_Customer_Age9 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 0;
394690    +if missing( G_Customer_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Customer_Age ) then do;
394691    +   G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
394692    +   G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
394693    +   G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
394694    +   G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
394695    +   G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
394696    +   G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
394697    +   G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
394698    +   G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
394699    +   G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
394700    +   G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
394701    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
394702    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394703    +end;
MPRINT(EM_DIAGRAM):   end;
394704    +else do;
MPRINT(EM_DIAGRAM):   else do;
394705    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
394706    +   _dm12 = put( G_Customer_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Customer_Age , BEST12. );
394707    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
394708    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
394709    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
394710    +      if _dm12 <= '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '10' then do;
394711    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
394712    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
394713    +               G_Customer_Age0 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 1;
394714    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394715    +            end;
MPRINT(EM_DIAGRAM):   end;
394716    +            else do;
MPRINT(EM_DIAGRAM):   else do;
394717    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
394718    +                  G_Customer_Age1 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 1;
394719    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394720    +               end;
MPRINT(EM_DIAGRAM):   end;
394721    +            end;
MPRINT(EM_DIAGRAM):   end;
394722    +         end;
MPRINT(EM_DIAGRAM):   end;
394723    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394724    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
394725    +               G_Customer_Age0 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = -1;
394726    +               G_Customer_Age1 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = -1;
394727    +               G_Customer_Age2 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = -1;
394728    +               G_Customer_Age3 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = -1;
394729    +               G_Customer_Age4 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = -1;
394730    +               G_Customer_Age5 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = -1;
394731    +               G_Customer_Age6 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = -1;
394732    +               G_Customer_Age7 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = -1;
394733    +               G_Customer_Age8 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = -1;
394734    +               G_Customer_Age9 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = -1;
394735    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394736    +            end;
MPRINT(EM_DIAGRAM):   end;
394737    +         end;
MPRINT(EM_DIAGRAM):   end;
394738    +      end;
MPRINT(EM_DIAGRAM):   end;
394739    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394740    +         if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
394741    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
394742    +               G_Customer_Age2 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 1;
394743    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394744    +            end;
MPRINT(EM_DIAGRAM):   end;
394745    +            else do;
MPRINT(EM_DIAGRAM):   else do;
394746    +               if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
394747    +                  G_Customer_Age3 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 1;
394748    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394749    +               end;
MPRINT(EM_DIAGRAM):   end;
394750    +            end;
MPRINT(EM_DIAGRAM):   end;
394751    +         end;
MPRINT(EM_DIAGRAM):   end;
394752    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394753    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
394754    +               G_Customer_Age4 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 1;
394755    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394756    +            end;
MPRINT(EM_DIAGRAM):   end;
394757    +         end;
MPRINT(EM_DIAGRAM):   end;
394758    +      end;
MPRINT(EM_DIAGRAM):   end;
394759    +   end;
MPRINT(EM_DIAGRAM):   end;
394760    +   else do;
MPRINT(EM_DIAGRAM):   else do;
394761    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
394762    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
394763    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
394764    +               G_Customer_Age5 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 1;
394765    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394766    +            end;
MPRINT(EM_DIAGRAM):   end;
394767    +            else do;
MPRINT(EM_DIAGRAM):   else do;
394768    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
394769    +                  G_Customer_Age6 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 1;
394770    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394771    +               end;
MPRINT(EM_DIAGRAM):   end;
394772    +            end;
MPRINT(EM_DIAGRAM):   end;
394773    +         end;
MPRINT(EM_DIAGRAM):   end;
394774    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394775    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
394776    +               G_Customer_Age7 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 1;
394777    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394778    +            end;
MPRINT(EM_DIAGRAM):   end;
394779    +         end;
MPRINT(EM_DIAGRAM):   end;
394780    +      end;
MPRINT(EM_DIAGRAM):   end;
394781    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394782    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
394783    +            G_Customer_Age8 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 1;
394784    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394785    +         end;
MPRINT(EM_DIAGRAM):   end;
394786    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394787    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
394788    +               G_Customer_Age9 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 1;
394789    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394790    +            end;
MPRINT(EM_DIAGRAM):   end;
394791    +         end;
MPRINT(EM_DIAGRAM):   end;
394792    +      end;
MPRINT(EM_DIAGRAM):   end;
394793    +   end;
MPRINT(EM_DIAGRAM):   end;
394794    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
394795    +      G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
394796    +      G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
394797    +      G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
394798    +      G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
394799    +      G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
394800    +      G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
394801    +      G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
394802    +      G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
394803    +      G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
394804    +      G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
394805    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
394806    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394807    +   end;
MPRINT(EM_DIAGRAM):   end;
394808    +end;
MPRINT(EM_DIAGRAM):   end;
394809    +
394810    +*** Generate dummy variables for G_Months_Inactive_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_Inactive_12_mon ;
394811    +drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
394812    +        G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
394813    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
394814    +G_Months_Inactive_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 0;
394815    +G_Months_Inactive_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 0;
394816    +G_Months_Inactive_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 0;
394817    +G_Months_Inactive_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 0;
394818    +if missing( G_Months_Inactive_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_Inactive_12_mon ) then do;
394819    +   G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
394820    +   G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
394821    +   G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
394822    +   G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
394823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
394824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394825    +end;
MPRINT(EM_DIAGRAM):   end;
394826    +else do;
MPRINT(EM_DIAGRAM):   else do;
394827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
394828    +   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
394829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
394830    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
394831    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
394832    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
394833    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
394834    +            G_Months_Inactive_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 1;
394835    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394836    +         end;
MPRINT(EM_DIAGRAM):   end;
394837    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394838    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
394839    +               G_Months_Inactive_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 1;
394840    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394841    +            end;
MPRINT(EM_DIAGRAM):   end;
394842    +         end;
MPRINT(EM_DIAGRAM):   end;
394843    +      end;
MPRINT(EM_DIAGRAM):   end;
394844    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394845    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
394846    +            G_Months_Inactive_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 1;
394847    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394848    +         end;
MPRINT(EM_DIAGRAM):   end;
394849    +      end;
MPRINT(EM_DIAGRAM):   end;
394850    +   end;
MPRINT(EM_DIAGRAM):   end;
394851    +   else do;
MPRINT(EM_DIAGRAM):   else do;
394852    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
394853    +         G_Months_Inactive_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 1;
394854    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394855    +      end;
MPRINT(EM_DIAGRAM):   end;
394856    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394857    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
394858    +            G_Months_Inactive_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = -1;
394859    +            G_Months_Inactive_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = -1;
394860    +            G_Months_Inactive_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = -1;
394861    +            G_Months_Inactive_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = -1;
394862    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394863    +         end;
MPRINT(EM_DIAGRAM):   end;
394864    +      end;
MPRINT(EM_DIAGRAM):   end;
394865    +   end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
394866    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
394867    +      G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
394868    +      G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
394869    +      G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
394870    +      G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
394871    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
394872    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394873    +   end;
MPRINT(EM_DIAGRAM):   end;
394874    +end;
MPRINT(EM_DIAGRAM):   end;
394875    +
394876    +*** Generate dummy variables for G_Months_on_book ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_on_book ;
394877    +drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2 G_Months_on_book3
394878    +        G_Months_on_book4 G_Months_on_book5 G_Months_on_book6
394879    +        G_Months_on_book7 ;
MPRINT(EM_DIAGRAM):   drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2
G_Months_on_book3 G_Months_on_book4 G_Months_on_book5 G_Months_on_book6 G_Months_on_book7 ;
394880    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
394881    +G_Months_on_book0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 0;
394882    +G_Months_on_book1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 0;
394883    +G_Months_on_book2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 0;
394884    +G_Months_on_book3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 0;
394885    +G_Months_on_book4 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 0;
394886    +G_Months_on_book5 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 0;
394887    +G_Months_on_book6 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 0;
394888    +G_Months_on_book7 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 0;
394889    +if missing( G_Months_on_book ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_on_book ) then do;
394890    +   G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
394891    +   G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
394892    +   G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
394893    +   G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
394894    +   G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
394895    +   G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
394896    +   G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
394897    +   G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
394898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
394899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394900    +end;
MPRINT(EM_DIAGRAM):   end;
394901    +else do;
MPRINT(EM_DIAGRAM):   else do;
394902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
394903    +   _dm12 = put( G_Months_on_book , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_on_book , BEST12. );
394904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
394905    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
394906    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
394907    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
394908    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
394909    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
394910    +               G_Months_on_book0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 1;
394911    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394912    +            end;
MPRINT(EM_DIAGRAM):   end;
394913    +            else do;
MPRINT(EM_DIAGRAM):   else do;
394914    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
394915    +                  G_Months_on_book1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 1;
394916    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394917    +               end;
MPRINT(EM_DIAGRAM):   end;
394918    +            end;
MPRINT(EM_DIAGRAM):   end;
394919    +         end;
MPRINT(EM_DIAGRAM):   end;
394920    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394921    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
394922    +               G_Months_on_book2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 1;
394923    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394924    +            end;
MPRINT(EM_DIAGRAM):   end;
394925    +         end;
MPRINT(EM_DIAGRAM):   end;
394926    +      end;
MPRINT(EM_DIAGRAM):   end;
394927    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394928    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
394929    +            G_Months_on_book3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 1;
394930    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394931    +         end;
MPRINT(EM_DIAGRAM):   end;
394932    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394933    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
394934    +               G_Months_on_book4 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 1;
394935    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394936    +            end;
MPRINT(EM_DIAGRAM):   end;
394937    +         end;
MPRINT(EM_DIAGRAM):   end;
394938    +      end;
MPRINT(EM_DIAGRAM):   end;
394939    +   end;
MPRINT(EM_DIAGRAM):   end;
394940    +   else do;
MPRINT(EM_DIAGRAM):   else do;
394941    +      if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
394942    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
394943    +            G_Months_on_book5 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 1;
394944    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394945    +         end;
MPRINT(EM_DIAGRAM):   end;
394946    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394947    +            if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
394948    +               G_Months_on_book6 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 1;
394949    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394950    +            end;
MPRINT(EM_DIAGRAM):   end;
394951    +         end;
MPRINT(EM_DIAGRAM):   end;
394952    +      end;
MPRINT(EM_DIAGRAM):   end;
394953    +      else do;
MPRINT(EM_DIAGRAM):   else do;
394954    +         if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
394955    +            G_Months_on_book7 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 1;
394956    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394957    +         end;
MPRINT(EM_DIAGRAM):   end;
394958    +         else do;
MPRINT(EM_DIAGRAM):   else do;
394959    +            if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
394960    +               G_Months_on_book0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = -1;
394961    +               G_Months_on_book1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = -1;
394962    +               G_Months_on_book2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = -1;
394963    +               G_Months_on_book3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = -1;
394964    +               G_Months_on_book4 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = -1;
394965    +               G_Months_on_book5 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = -1;
394966    +               G_Months_on_book6 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = -1;
394967    +               G_Months_on_book7 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = -1;
394968    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
394969    +            end;
MPRINT(EM_DIAGRAM):   end;
394970    +         end;
MPRINT(EM_DIAGRAM):   end;
394971    +      end;
MPRINT(EM_DIAGRAM):   end;
394972    +   end;
MPRINT(EM_DIAGRAM):   end;
394973    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
394974    +      G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
394975    +      G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
394976    +      G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
394977    +      G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
394978    +      G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
394979    +      G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
394980    +      G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
394981    +      G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
394982    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
394983    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394984    +   end;
MPRINT(EM_DIAGRAM):   end;
394985    +end;
MPRINT(EM_DIAGRAM):   end;
394986    +
394987    +*** Generate dummy variables for G_Total_Relationship_Count ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Relationship_Count ;
394988    +drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
394989    +if missing( G_Total_Relationship_Count ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Relationship_Count ) then do;
394990    +   G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
394991    +   G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
394992    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
394993    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
394994    +end;
MPRINT(EM_DIAGRAM):   end;
394995    +else do;
MPRINT(EM_DIAGRAM):   else do;
394996    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
394997    +   _dm12 = put( G_Total_Relationship_Count , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Relationship_Count , BEST12. );
394998    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
394999    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
395000    +      G_Total_Relationship_Count0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = -1;
395001    +      G_Total_Relationship_Count1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = -1;
395002    +   end;
MPRINT(EM_DIAGRAM):   end;
395003    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
395004    +      G_Total_Relationship_Count0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 0;
395005    +      G_Total_Relationship_Count1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 1;
395006    +   end;
MPRINT(EM_DIAGRAM):   end;
395007    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
395008    +      G_Total_Relationship_Count0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 1;
395009    +      G_Total_Relationship_Count1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 0;
395010    +   end;
MPRINT(EM_DIAGRAM):   end;
395011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
395012    +      G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
395013    +      G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
395014    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
395015    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
395016    +   end;
MPRINT(EM_DIAGRAM):   end;
395017    +end;
MPRINT(EM_DIAGRAM):   end;
395018    +
395019    +*** Generate dummy variables for G_Total_Trans_Ct ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Trans_Ct ;
395020    +drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2 G_Total_Trans_Ct3
395021    +        G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2
G_Total_Trans_Ct3 G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
395022    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
395023    +G_Total_Trans_Ct0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 0;
395024    +G_Total_Trans_Ct1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 0;
395025    +G_Total_Trans_Ct2 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 0;
395026    +G_Total_Trans_Ct3 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 0;
395027    +G_Total_Trans_Ct4 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 0;
395028    +G_Total_Trans_Ct5 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 0;
395029    +G_Total_Trans_Ct6 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 0;
395030    +if missing( G_Total_Trans_Ct ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Trans_Ct ) then do;
395031    +   G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
395032    +   G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
395033    +   G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
395034    +   G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
395035    +   G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
395036    +   G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
395037    +   G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
395038    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
395039    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
395040    +end;
MPRINT(EM_DIAGRAM):   end;
395041    +else do;
MPRINT(EM_DIAGRAM):   else do;
395042    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
395043    +   _dm12 = put( G_Total_Trans_Ct , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Trans_Ct , BEST12. );
395044    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
395045    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
395046    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
395047    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
395048    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
395049    +            G_Total_Trans_Ct0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 1;
395050    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395051    +         end;
MPRINT(EM_DIAGRAM):   end;
395052    +         else do;
MPRINT(EM_DIAGRAM):   else do;
395053    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
395054    +               G_Total_Trans_Ct1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 1;
395055    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395056    +            end;
MPRINT(EM_DIAGRAM):   end;
395057    +         end;
MPRINT(EM_DIAGRAM):   end;
395058    +      end;
MPRINT(EM_DIAGRAM):   end;
395059    +      else do;
MPRINT(EM_DIAGRAM):   else do;
395060    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
395061    +            G_Total_Trans_Ct2 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 1;
395062    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395063    +         end;
MPRINT(EM_DIAGRAM):   end;
395064    +         else do;
MPRINT(EM_DIAGRAM):   else do;
395065    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
395066    +               G_Total_Trans_Ct3 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 1;
395067    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395068    +            end;
MPRINT(EM_DIAGRAM):   end;
395069    +         end;
MPRINT(EM_DIAGRAM):   end;
395070    +      end;
MPRINT(EM_DIAGRAM):   end;
395071    +   end;
MPRINT(EM_DIAGRAM):   end;
395072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
395073    +      if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
395074    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
395075    +            G_Total_Trans_Ct4 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 1;
395076    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395077    +         end;
MPRINT(EM_DIAGRAM):   end;
395078    +         else do;
MPRINT(EM_DIAGRAM):   else do;
395079    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
395080    +               G_Total_Trans_Ct5 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 1;
395081    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395082    +            end;
MPRINT(EM_DIAGRAM):   end;
395083    +         end;
MPRINT(EM_DIAGRAM):   end;
395084    +      end;
MPRINT(EM_DIAGRAM):   end;
395085    +      else do;
MPRINT(EM_DIAGRAM):   else do;
395086    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
395087    +            G_Total_Trans_Ct6 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 1;
395088    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395089    +         end;
MPRINT(EM_DIAGRAM):   end;
395090    +         else do;
MPRINT(EM_DIAGRAM):   else do;
395091    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
395092    +               G_Total_Trans_Ct0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = -1;
395093    +               G_Total_Trans_Ct1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = -1;
395094    +               G_Total_Trans_Ct2 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = -1;
395095    +               G_Total_Trans_Ct3 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = -1;
395096    +               G_Total_Trans_Ct4 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = -1;
395097    +               G_Total_Trans_Ct5 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = -1;
395098    +               G_Total_Trans_Ct6 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = -1;
395099    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
395100    +            end;
MPRINT(EM_DIAGRAM):   end;
395101    +         end;
MPRINT(EM_DIAGRAM):   end;
395102    +      end;
MPRINT(EM_DIAGRAM):   end;
395103    +   end;
MPRINT(EM_DIAGRAM):   end;
395104    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
395105    +      G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
395106    +      G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
395107    +      G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
395108    +      G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
395109    +      G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
395110    +      G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
395111    +      G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
395112    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
395113    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
395114    +   end;
MPRINT(EM_DIAGRAM):   end;
395115    +end;
MPRINT(EM_DIAGRAM):   end;
395116    +
395117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395118    +*** Checking missing input Interval
395119    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
395120    +
395121    +IF NMISS(
395122    +   RANGE_LOG_Total_Trans_Amt ,
395123    +   RANGE_SQRT_Avg_Utilization_Ratio ,
395124    +   RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ,
395125    +   RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ,
395126    +   RANGE_Total_Revolving_Bal   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( RANGE_LOG_Total_Trans_Amt , RANGE_SQRT_Avg_Utilization_Ratio ,
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 , RANGE_SQRT_Total_Ct_Chng_Q4_Q1 , RANGE_Total_Revolving_Bal )
THEN DO;
395127    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
395128    +
395129    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
395130    +END;
MPRINT(EM_DIAGRAM):   END;
395131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395132    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
395133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395134    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
395135    +   S_RANGE_LOG_Total_Trans_Amt
395136    +          =    -1.34747068578628 +      5.0128535511494 *
395137    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
395138    +   S_RANGE_SQRT_Avg_Utilization_Rat
395139    +          =    -1.34502734827526 +     3.19469433649726 *
395140    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 + 3.19469433649726
* RANGE_SQRT_Avg_Utilization_Ratio ;
395141    +   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395142    +          =    -7.21426643857002 +     15.4166020949803 *
395143    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 + 15.4166020949803
* RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
395144    +   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395145    +          =    -6.16155815683527 +     14.2791680762335 *
395146    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 + 14.2791680762335
* RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
395147    +   S_RANGE_Total_Revolving_Bal
395148    +          =    -1.43123481780808 +     3.09032113107013 *
395149    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013 *
RANGE_Total_Revolving_Bal ;
395150    +END;
MPRINT(EM_DIAGRAM):   END;
395151    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
395152    +   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
395153    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
= . ;
395154    +   ELSE S_RANGE_LOG_Total_Trans_Amt
395155    +          =    -1.34747068578628 +      5.0128535511494 *
395156    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
395157    +   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
395158    +        S_RANGE_SQRT_Avg_Utilization_Rat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
S_RANGE_SQRT_Avg_Utilization_Rat = . ;
395159    +   ELSE S_RANGE_SQRT_Avg_Utilization_Rat
395160    +          =    -1.34502734827526 +     3.19469433649726 *
395161    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 +
3.19469433649726 * RANGE_SQRT_Avg_Utilization_Ratio ;
395162    +   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
395163    +        S_RANGE_SQRT_Total_Amt_Chng_Q4_Q  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = . ;
395164    +   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395165    +          =    -7.21426643857002 +     15.4166020949803 *
395166    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 +
15.4166020949803 * RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
395167    +   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
395168    +        S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = . ;
395169    +   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395170    +          =    -6.16155815683527 +     14.2791680762335 *
395171    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 +
14.2791680762335 * RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
395172    +   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
395173    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
= . ;
395174    +   ELSE S_RANGE_Total_Revolving_Bal
395175    +          =    -1.43123481780808 +     3.09032113107013 *
395176    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013
* RANGE_Total_Revolving_Bal ;
395177    +END;
MPRINT(EM_DIAGRAM):   END;
395178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395179    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
395180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395182    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
395183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395184    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
395185    +   H1x1_1  =     1.44473759114969 * S_RANGE_LOG_Total_Trans_Amt
395186    +          +     0.47469974135661 * S_RANGE_SQRT_Avg_Utilization_Rat
395187    +          +    -0.17678823515738 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395188    +          +    -0.08782898438529 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395189    +          +    -0.10170689517149 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.44473759114969 * S_RANGE_LOG_Total_Trans_Amt +
0.47469974135661 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.17678823515738 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.08782898438529 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.10170689517149 * S_RANGE_Total_Revolving_Bal ;
395190    +   H1x1_2  =     0.36929693742029 * S_RANGE_LOG_Total_Trans_Amt
395191    +          +    -0.01537901404435 * S_RANGE_SQRT_Avg_Utilization_Rat
395192    +          +     -0.1616364096451 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395193    +          +    -0.37499771317328 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395194    +          +     0.08835331999141 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.36929693742029 * S_RANGE_LOG_Total_Trans_Amt +
-0.01537901404435 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.1616364096451 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.37499771317328 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.08835331999141 * S_RANGE_Total_Revolving_Bal ;
395195    +   H1x1_3  =    -0.65329413311593 * S_RANGE_LOG_Total_Trans_Amt
395196    +          +    -0.00989031057679 * S_RANGE_SQRT_Avg_Utilization_Rat
395197    +          +     0.09776476847062 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395198    +          +    -0.21803849346102 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395199    +          +     0.04657341403647 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.65329413311593 * S_RANGE_LOG_Total_Trans_Amt +
-0.00989031057679 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.09776476847062 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.21803849346102 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.04657341403647 * S_RANGE_Total_Revolving_Bal ;
395200    +   H1x1_4  =     0.04977727115697 * S_RANGE_LOG_Total_Trans_Amt
395201    +          +    -0.10521857706601 * S_RANGE_SQRT_Avg_Utilization_Rat
395202    +          +     0.03861353473435 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395203    +          +    -0.09694035600906 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395204    +          +      0.9203372027378 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.04977727115697 * S_RANGE_LOG_Total_Trans_Amt +
-0.10521857706601 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.03861353473435 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.09694035600906 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.9203372027378 * S_RANGE_Total_Revolving_Bal ;
395205    +   H1x1_5  =    -1.59771632812293 * S_RANGE_LOG_Total_Trans_Amt
395206    +          +    -0.02987802593845 * S_RANGE_SQRT_Avg_Utilization_Rat
395207    +          +     0.10595296726603 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395208    +          +     0.27930848833776 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395209    +          +     0.04184764543759 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.59771632812293 * S_RANGE_LOG_Total_Trans_Amt +
-0.02987802593845 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.10595296726603 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.27930848833776 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.04184764543759 * S_RANGE_Total_Revolving_Bal ;
395210    +   H1x1_6  =    -2.22002826316663 * S_RANGE_LOG_Total_Trans_Amt
395211    +          +     0.21449118089117 * S_RANGE_SQRT_Avg_Utilization_Rat
395212    +          +    -0.32833690690622 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395213    +          +     -0.2609169087665 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395214    +          +    -0.09335223376937 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.22002826316663 * S_RANGE_LOG_Total_Trans_Amt +
0.21449118089117 * S_RANGE_SQRT_Avg_Utilization_Rat + -0.32833690690622 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.2609169087665 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.09335223376937 * S_RANGE_Total_Revolving_Bal ;
395215    +   H1x1_7  =     0.72365350252617 * S_RANGE_LOG_Total_Trans_Amt
395216    +          +    -0.12419914430011 * S_RANGE_SQRT_Avg_Utilization_Rat
395217    +          +     0.33890432072219 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395218    +          +     0.17595883654803 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395219    +          +    -0.06385044401415 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0.72365350252617 * S_RANGE_LOG_Total_Trans_Amt +
-0.12419914430011 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.33890432072219 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.17595883654803 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.06385044401415 * S_RANGE_Total_Revolving_Bal ;
395220    +   H1x1_8  =    -0.49450992077366 * S_RANGE_LOG_Total_Trans_Amt
395221    +          +    -0.05101251026586 * S_RANGE_SQRT_Avg_Utilization_Rat
395222    +          +     0.04194737766537 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395223    +          +    -0.07281283622008 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395224    +          +     -0.2334475719234 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_8 = -0.49450992077366 * S_RANGE_LOG_Total_Trans_Amt +
-0.05101251026586 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.04194737766537 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.07281283622008 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.2334475719234 * S_RANGE_Total_Revolving_Bal ;
395225    +   H1x1_1  = H1x1_1  +      0.1401700161345 * G_Contacts_Count_12_mon0
395226    +          +     0.16853078942958 * G_Contacts_Count_12_mon1
395227    +          +     0.01393498187406 * G_Contacts_Count_12_mon2
395228    +          +    -0.06426539048063 * G_Contacts_Count_12_mon3
395229    +          +     0.16424725078514 * G_Customer_Age0  +     0.00806065325306 *
395230    +        G_Customer_Age1  +     0.58854449762957 * G_Customer_Age2
395231    +          +    -0.04304863480935 * G_Customer_Age3  +    -0.09153885425916 *
395232    +        G_Customer_Age4  +    -0.03009001489594 * G_Customer_Age5
395233    +          +    -0.01277382132587 * G_Customer_Age6  +    -0.05120552017464 *
395234    +        G_Customer_Age7  +    -0.19484100703007 * G_Customer_Age8
395235    +          +     0.36400231982018 * G_Customer_Age9  +      0.2128372684892 *
395236    +        G_Months_Inactive_12_mon0  +     0.08881972076719 *
395237    +        G_Months_Inactive_12_mon1  +     0.01871007502673 *
395238    +        G_Months_Inactive_12_mon2  +      0.1377784670933 *
395239    +        G_Months_Inactive_12_mon3  +      -0.187522328146 * G_Months_on_book0
395240    +          +     0.10828753003058 * G_Months_on_book1
395241    +          +    -0.01639538197714 * G_Months_on_book2
395242    +          +    -0.09230711881682 * G_Months_on_book3
395243    +          +     0.14260542762716 * G_Months_on_book4
395244    +          +     0.34699450273742 * G_Months_on_book5
395245    +          +     0.36459716975736 * G_Months_on_book6
395246    +          +     0.02278453878232 * G_Months_on_book7
395247    +          +     0.51803242503762 * G_Total_Relationship_Count0
395248    +          +     0.06899136153159 * G_Total_Relationship_Count1
395249    +          +     0.68336451142155 * G_Total_Trans_Ct0
395250    +          +     0.06265331654524 * G_Total_Trans_Ct1
395251    +          +     0.15673138151852 * G_Total_Trans_Ct2
395252    +          +    -0.26306701715366 * G_Total_Trans_Ct3
395253    +          +     0.26998656463782 * G_Total_Trans_Ct4
395254    +          +    -0.12858111211938 * G_Total_Trans_Ct5
395255    +          +    -0.81643640957676 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1401700161345 * G_Contacts_Count_12_mon0 +
0.16853078942958 * G_Contacts_Count_12_mon1 + 0.01393498187406 * G_Contacts_Count_12_mon2 +
-0.06426539048063 * G_Contacts_Count_12_mon3 + 0.16424725078514 * G_Customer_Age0 +
0.00806065325306 * G_Customer_Age1 + 0.58854449762957 * G_Customer_Age2 + -0.04304863480935 *
G_Customer_Age3 + -0.09153885425916 * G_Customer_Age4 + -0.03009001489594 * G_Customer_Age5 +
-0.01277382132587 * G_Customer_Age6 + -0.05120552017464 * G_Customer_Age7 + -0.19484100703007
* G_Customer_Age8 + 0.36400231982018 * G_Customer_Age9 + 0.2128372684892 *
G_Months_Inactive_12_mon0 + 0.08881972076719 * G_Months_Inactive_12_mon1 + 0.01871007502673 *
G_Months_Inactive_12_mon2 + 0.1377784670933 * G_Months_Inactive_12_mon3 + -0.187522328146 *
G_Months_on_book0 + 0.10828753003058 * G_Months_on_book1 + -0.01639538197714 *
G_Months_on_book2 + -0.09230711881682 * G_Months_on_book3 + 0.14260542762716 *
G_Months_on_book4 + 0.34699450273742 * G_Months_on_book5 + 0.36459716975736 *
G_Months_on_book6 + 0.02278453878232 * G_Months_on_book7 + 0.51803242503762 *
G_Total_Relationship_Count0 + 0.06899136153159 * G_Total_Relationship_Count1 +
0.68336451142155 * G_Total_Trans_Ct0 + 0.06265331654524 * G_Total_Trans_Ct1 + 0.15673138151852
* G_Total_Trans_Ct2 + -0.26306701715366 * G_Total_Trans_Ct3 + 0.26998656463782 *
G_Total_Trans_Ct4 + -0.12858111211938 * G_Total_Trans_Ct5 + -0.81643640957676 *
G_Total_Trans_Ct6 ;
395256    +   H1x1_2  = H1x1_2  +     0.21444873800256 * G_Contacts_Count_12_mon0
395257    +          +     0.07842833493788 * G_Contacts_Count_12_mon1
395258    +          +    -0.27823122493985 * G_Contacts_Count_12_mon2
395259    +          +     0.01239271758814 * G_Contacts_Count_12_mon3
395260    +          +     0.20121751980973 * G_Customer_Age0  +     0.04172957843644 *
395261    +        G_Customer_Age1  +    -0.16008797816304 * G_Customer_Age2
395262    +          +     0.27840956839148 * G_Customer_Age3  +    -0.02289075036396 *
395263    +        G_Customer_Age4  +     0.33090235630478 * G_Customer_Age5
395264    +          +     0.08213248268936 * G_Customer_Age6  +     0.03126151274543 *
395265    +        G_Customer_Age7  +    -0.24954134832656 * G_Customer_Age8
395266    +          +    -0.34342240474159 * G_Customer_Age9  +     0.26688451751649 *
395267    +        G_Months_Inactive_12_mon0  +     -0.0849028829979 *
395268    +        G_Months_Inactive_12_mon1  +    -0.34906695553271 *
395269    +        G_Months_Inactive_12_mon2  +    -0.26802657223186 *
395270    +        G_Months_Inactive_12_mon3  +    -0.18828281305165 * G_Months_on_book0
395271    +          +     0.11689915130834 * G_Months_on_book1
395272    +          +     0.15571564774987 * G_Months_on_book2
395273    +          +     0.12417575218142 * G_Months_on_book3
395274    +          +    -0.20544107518855 * G_Months_on_book4
395275    +          +    -0.14961896181352 * G_Months_on_book5
395276    +          +     -0.2163634043033 * G_Months_on_book6
395277    +          +    -0.15920685944267 * G_Months_on_book7
395278    +          +     0.05721641813512 * G_Total_Relationship_Count0
395279    +          +     0.10738726316658 * G_Total_Relationship_Count1
395280    +          +     0.46770513165672 * G_Total_Trans_Ct0
395281    +          +    -0.49698932986798 * G_Total_Trans_Ct1
395282    +          +    -0.12245383948982 * G_Total_Trans_Ct2
395283    +          +    -0.55196286962318 * G_Total_Trans_Ct3
395284    +          +    -0.15095383414794 * G_Total_Trans_Ct4
395285    +          +    -0.28805837771929 * G_Total_Trans_Ct5
395286    +          +     0.07494905893528 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.21444873800256 * G_Contacts_Count_12_mon0 +
0.07842833493788 * G_Contacts_Count_12_mon1 + -0.27823122493985 * G_Contacts_Count_12_mon2 +
0.01239271758814 * G_Contacts_Count_12_mon3 + 0.20121751980973 * G_Customer_Age0 +
0.04172957843644 * G_Customer_Age1 + -0.16008797816304 * G_Customer_Age2 + 0.27840956839148 *
G_Customer_Age3 + -0.02289075036396 * G_Customer_Age4 + 0.33090235630478 * G_Customer_Age5 +
0.08213248268936 * G_Customer_Age6 + 0.03126151274543 * G_Customer_Age7 + -0.24954134832656 *
G_Customer_Age8 + -0.34342240474159 * G_Customer_Age9 + 0.26688451751649 *
G_Months_Inactive_12_mon0 + -0.0849028829979 * G_Months_Inactive_12_mon1 + -0.34906695553271 *
G_Months_Inactive_12_mon2 + -0.26802657223186 * G_Months_Inactive_12_mon3 + -0.18828281305165
* G_Months_on_book0 + 0.11689915130834 * G_Months_on_book1 + 0.15571564774987 *
G_Months_on_book2 + 0.12417575218142 * G_Months_on_book3 + -0.20544107518855 *
G_Months_on_book4 + -0.14961896181352 * G_Months_on_book5 + -0.2163634043033 *
G_Months_on_book6 + -0.15920685944267 * G_Months_on_book7 + 0.05721641813512 *
G_Total_Relationship_Count0 + 0.10738726316658 * G_Total_Relationship_Count1 +
0.46770513165672 * G_Total_Trans_Ct0 + -0.49698932986798 * G_Total_Trans_Ct1 +
-0.12245383948982 * G_Total_Trans_Ct2 + -0.55196286962318 * G_Total_Trans_Ct3 +
-0.15095383414794 * G_Total_Trans_Ct4 + -0.28805837771929 * G_Total_Trans_Ct5 +
0.07494905893528 * G_Total_Trans_Ct6 ;
395287    +   H1x1_3  = H1x1_3  +     0.07076997283851 * G_Contacts_Count_12_mon0
395288    +          +      0.4053112894421 * G_Contacts_Count_12_mon1
395289    +          +    -0.01193233191664 * G_Contacts_Count_12_mon2
395290    +          +     0.11019777907243 * G_Contacts_Count_12_mon3
395291    +          +     0.07706884296578 * G_Customer_Age0  +    -0.37152092198474 *
395292    +        G_Customer_Age1  +    -0.22828344167191 * G_Customer_Age2
395293    +          +    -0.05061057943019 * G_Customer_Age3  +    -0.11730355838374 *
395294    +        G_Customer_Age4  +    -0.16657836727629 * G_Customer_Age5
395295    +          +    -0.19930312229165 * G_Customer_Age6  +    -0.22497785692239 *
395296    +        G_Customer_Age7  +        0.02355586974 * G_Customer_Age8
395297    +          +      0.1209977427348 * G_Customer_Age9  +    -0.00246569984757 *
395298    +        G_Months_Inactive_12_mon0  +    -0.04282271630458 *
395299    +        G_Months_Inactive_12_mon1  +       0.192766910686 *
395300    +        G_Months_Inactive_12_mon2  +      0.0688797059827 *
395301    +        G_Months_Inactive_12_mon3  +    -0.07346516413568 * G_Months_on_book0
395302    +          +     0.29892632213851 * G_Months_on_book1
395303    +          +    -0.01256186499973 * G_Months_on_book2
395304    +          +    -0.15627292530888 * G_Months_on_book3
395305    +          +    -0.38203200145326 * G_Months_on_book4
395306    +          +     0.02609861849884 * G_Months_on_book5
395307    +          +    -0.10987207384174 * G_Months_on_book6
395308    +          +     0.13169504559396 * G_Months_on_book7
395309    +          +    -0.09494293869854 * G_Total_Relationship_Count0
395310    +          +     0.03030101782007 * G_Total_Relationship_Count1
395311    +          +     0.09922577750406 * G_Total_Trans_Ct0
395312    +          +     0.62167149120482 * G_Total_Trans_Ct1
395313    +          +     1.09837857192449 * G_Total_Trans_Ct2
395314    +          +     0.88990320473212 * G_Total_Trans_Ct3
395315    +          +     0.14603842645544 * G_Total_Trans_Ct4
395316    +          +    -0.05725013848453 * G_Total_Trans_Ct5
395317    +          +    -0.07479772375474 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.07076997283851 * G_Contacts_Count_12_mon0 +
0.4053112894421 * G_Contacts_Count_12_mon1 + -0.01193233191664 * G_Contacts_Count_12_mon2 +
0.11019777907243 * G_Contacts_Count_12_mon3 + 0.07706884296578 * G_Customer_Age0 +
-0.37152092198474 * G_Customer_Age1 + -0.22828344167191 * G_Customer_Age2 + -0.05061057943019
* G_Customer_Age3 + -0.11730355838374 * G_Customer_Age4 + -0.16657836727629 * G_Customer_Age5
+ -0.19930312229165 * G_Customer_Age6 + -0.22497785692239 * G_Customer_Age7 + 0.02355586974 *
G_Customer_Age8 + 0.1209977427348 * G_Customer_Age9 + -0.00246569984757 *
G_Months_Inactive_12_mon0 + -0.04282271630458 * G_Months_Inactive_12_mon1 + 0.192766910686 *
G_Months_Inactive_12_mon2 + 0.0688797059827 * G_Months_Inactive_12_mon3 + -0.07346516413568 *
G_Months_on_book0 + 0.29892632213851 * G_Months_on_book1 + -0.01256186499973 *
G_Months_on_book2 + -0.15627292530888 * G_Months_on_book3 + -0.38203200145326 *
G_Months_on_book4 + 0.02609861849884 * G_Months_on_book5 + -0.10987207384174 *
G_Months_on_book6 + 0.13169504559396 * G_Months_on_book7 + -0.09494293869854 *
G_Total_Relationship_Count0 + 0.03030101782007 * G_Total_Relationship_Count1 +
0.09922577750406 * G_Total_Trans_Ct0 + 0.62167149120482 * G_Total_Trans_Ct1 + 1.09837857192449
* G_Total_Trans_Ct2 + 0.88990320473212 * G_Total_Trans_Ct3 + 0.14603842645544 *
G_Total_Trans_Ct4 + -0.05725013848453 * G_Total_Trans_Ct5 + -0.07479772375474 *
G_Total_Trans_Ct6 ;
395318    +   H1x1_4  = H1x1_4  +    -0.20788908396801 * G_Contacts_Count_12_mon0
395319    +          +    -0.39937066992208 * G_Contacts_Count_12_mon1
395320    +          +     0.23098390094251 * G_Contacts_Count_12_mon2
395321    +          +      0.2127179266351 * G_Contacts_Count_12_mon3
395322    +          +    -0.11711142776988 * G_Customer_Age0  +     0.08758329474303 *
395323    +        G_Customer_Age1  +    -0.12946577860857 * G_Customer_Age2
395324    +          +    -0.20984622032713 * G_Customer_Age3  +     0.01543054380114 *
395325    +        G_Customer_Age4  +     0.01744527086181 * G_Customer_Age5
395326    +          +    -0.12679305846676 * G_Customer_Age6  +    -0.15490204363057 *
395327    +        G_Customer_Age7  +    -0.03666340889065 * G_Customer_Age8
395328    +          +     0.38882646973981 * G_Customer_Age9  +     0.25963553341962 *
395329    +        G_Months_Inactive_12_mon0  +     0.07006278804627 *
395330    +        G_Months_Inactive_12_mon1  +    -0.02110503693861 *
395331    +        G_Months_Inactive_12_mon2  +    -0.10613087621136 *
395332    +        G_Months_Inactive_12_mon3  +    -0.21095466449456 * G_Months_on_book0
395333    +          +    -0.06453257990504 * G_Months_on_book1
395334    +          +     0.19605382103997 * G_Months_on_book2
395335    +          +     0.07222632323077 * G_Months_on_book3
395336    +          +    -0.05336430789811 * G_Months_on_book4
395337    +          +     0.11363368224674 * G_Months_on_book5
395338    +          +     0.09853243776679 * G_Months_on_book6
395339    +          +     0.06881256086949 * G_Months_on_book7
395340    +          +    -0.11915180567564 * G_Total_Relationship_Count0
395341    +          +     0.08464523731571 * G_Total_Relationship_Count1
395342    +          +     -0.0582771620162 * G_Total_Trans_Ct0
395343    +          +    -0.11735306221869 * G_Total_Trans_Ct1
395344    +          +     0.07977042868499 * G_Total_Trans_Ct2
395345    +          +    -0.01121366479248 * G_Total_Trans_Ct3
395346    +          +     0.00086124112134 * G_Total_Trans_Ct4
395347    +          +    -0.14234381283026 * G_Total_Trans_Ct5
395348    +          +    -0.10161876925237 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.20788908396801 * G_Contacts_Count_12_mon0 +
-0.39937066992208 * G_Contacts_Count_12_mon1 + 0.23098390094251 * G_Contacts_Count_12_mon2 +
0.2127179266351 * G_Contacts_Count_12_mon3 + -0.11711142776988 * G_Customer_Age0 +
0.08758329474303 * G_Customer_Age1 + -0.12946577860857 * G_Customer_Age2 + -0.20984622032713 *
G_Customer_Age3 + 0.01543054380114 * G_Customer_Age4 + 0.01744527086181 * G_Customer_Age5 +
-0.12679305846676 * G_Customer_Age6 + -0.15490204363057 * G_Customer_Age7 + -0.03666340889065
* G_Customer_Age8 + 0.38882646973981 * G_Customer_Age9 + 0.25963553341962 *
G_Months_Inactive_12_mon0 + 0.07006278804627 * G_Months_Inactive_12_mon1 + -0.02110503693861 *
G_Months_Inactive_12_mon2 + -0.10613087621136 * G_Months_Inactive_12_mon3 + -0.21095466449456
* G_Months_on_book0 + -0.06453257990504 * G_Months_on_book1 + 0.19605382103997 *
G_Months_on_book2 + 0.07222632323077 * G_Months_on_book3 + -0.05336430789811 *
G_Months_on_book4 + 0.11363368224674 * G_Months_on_book5 + 0.09853243776679 *
G_Months_on_book6 + 0.06881256086949 * G_Months_on_book7 + -0.11915180567564 *
G_Total_Relationship_Count0 + 0.08464523731571 * G_Total_Relationship_Count1 +
-0.0582771620162 * G_Total_Trans_Ct0 + -0.11735306221869 * G_Total_Trans_Ct1 +
0.07977042868499 * G_Total_Trans_Ct2 + -0.01121366479248 * G_Total_Trans_Ct3 +
0.00086124112134 * G_Total_Trans_Ct4 + -0.14234381283026 * G_Total_Trans_Ct5 +
-0.10161876925237 * G_Total_Trans_Ct6 ;
395349    +   H1x1_5  = H1x1_5  +    -0.56902878790282 * G_Contacts_Count_12_mon0
395350    +          +    -0.16661261863249 * G_Contacts_Count_12_mon1
395351    +          +     0.08076675187438 * G_Contacts_Count_12_mon2
395352    +          +    -0.04057310022146 * G_Contacts_Count_12_mon3
395353    +          +    -0.48914285297075 * G_Customer_Age0  +     0.00170634322548 *
395354    +        G_Customer_Age1  +    -0.03975363775767 * G_Customer_Age2
395355    +          +    -0.01004834554468 * G_Customer_Age3  +     0.07215975430623 *
395356    +        G_Customer_Age4  +     0.11860041310799 * G_Customer_Age5
395357    +          +     0.04386124283943 * G_Customer_Age6  +    -0.02226006521088 *
395358    +        G_Customer_Age7  +     -0.0829461915445 * G_Customer_Age8
395359    +          +     0.97010783558513 * G_Customer_Age9  +    -0.35584533888723 *
395360    +        G_Months_Inactive_12_mon0  +      0.1574507014307 *
395361    +        G_Months_Inactive_12_mon1  +    -0.22690548181964 *
395362    +        G_Months_Inactive_12_mon2  +    -0.02402805082996 *
395363    +        G_Months_Inactive_12_mon3  +    -0.10211365537508 * G_Months_on_book0
395364    +          +    -0.40331789307737 * G_Months_on_book1
395365    +          +       0.111045361897 * G_Months_on_book2
395366    +          +     0.10992466576811 * G_Months_on_book3
395367    +          +     0.24056560603644 * G_Months_on_book4
395368    +          +     0.09226782022325 * G_Months_on_book5
395369    +          +     0.30704641402586 * G_Months_on_book6
395370    +          +     0.02608767076246 * G_Months_on_book7
395371    +          +    -0.10991821081945 * G_Total_Relationship_Count0
395372    +          +      0.1857841458513 * G_Total_Relationship_Count1
395373    +          +    -0.57942689171738 * G_Total_Trans_Ct0
395374    +          +    -0.68283775177985 * G_Total_Trans_Ct1
395375    +          +    -0.89750294872048 * G_Total_Trans_Ct2
395376    +          +    -0.67542502097146 * G_Total_Trans_Ct3
395377    +          +     0.30309836129805 * G_Total_Trans_Ct4
395378    +          +     0.77487769325225 * G_Total_Trans_Ct5
395379    +          +     1.02605659513191 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56902878790282 * G_Contacts_Count_12_mon0 +
-0.16661261863249 * G_Contacts_Count_12_mon1 + 0.08076675187438 * G_Contacts_Count_12_mon2 +
-0.04057310022146 * G_Contacts_Count_12_mon3 + -0.48914285297075 * G_Customer_Age0 +
0.00170634322548 * G_Customer_Age1 + -0.03975363775767 * G_Customer_Age2 + -0.01004834554468 *
G_Customer_Age3 + 0.07215975430623 * G_Customer_Age4 + 0.11860041310799 * G_Customer_Age5 +
0.04386124283943 * G_Customer_Age6 + -0.02226006521088 * G_Customer_Age7 + -0.0829461915445 *
G_Customer_Age8 + 0.97010783558513 * G_Customer_Age9 + -0.35584533888723 *
G_Months_Inactive_12_mon0 + 0.1574507014307 * G_Months_Inactive_12_mon1 + -0.22690548181964 *
G_Months_Inactive_12_mon2 + -0.02402805082996 * G_Months_Inactive_12_mon3 + -0.10211365537508
* G_Months_on_book0 + -0.40331789307737 * G_Months_on_book1 + 0.111045361897 *
G_Months_on_book2 + 0.10992466576811 * G_Months_on_book3 + 0.24056560603644 *
G_Months_on_book4 + 0.09226782022325 * G_Months_on_book5 + 0.30704641402586 *
G_Months_on_book6 + 0.02608767076246 * G_Months_on_book7 + -0.10991821081945 *
G_Total_Relationship_Count0 + 0.1857841458513 * G_Total_Relationship_Count1 +
-0.57942689171738 * G_Total_Trans_Ct0 + -0.68283775177985 * G_Total_Trans_Ct1 +
-0.89750294872048 * G_Total_Trans_Ct2 + -0.67542502097146 * G_Total_Trans_Ct3 +
0.30309836129805 * G_Total_Trans_Ct4 + 0.77487769325225 * G_Total_Trans_Ct5 + 1.02605659513191
* G_Total_Trans_Ct6 ;
395380    +   H1x1_6  = H1x1_6  +     0.13221112619587 * G_Contacts_Count_12_mon0
395381    +          +     0.06873025796286 * G_Contacts_Count_12_mon1
395382    +          +     0.15106577297273 * G_Contacts_Count_12_mon2
395383    +          +     0.02758955335574 * G_Contacts_Count_12_mon3
395384    +          +    -0.29581799524654 * G_Customer_Age0  +     0.33907010213137 *
395385    +        G_Customer_Age1  +    -0.08748797480777 * G_Customer_Age2
395386    +          +     0.23533147426665 * G_Customer_Age3  +    -0.13925157936482 *
395387    +        G_Customer_Age4  +    -0.08246938124949 * G_Customer_Age5
395388    +          +     0.08407167326123 * G_Customer_Age6  +     0.10094164575548 *
395389    +        G_Customer_Age7  +     0.12405820912475 * G_Customer_Age8
395390    +          +    -0.27674343160986 * G_Customer_Age9  +     0.22216749562418 *
395391    +        G_Months_Inactive_12_mon0  +      0.0052454194168 *
395392    +        G_Months_Inactive_12_mon1  +     0.30735551162206 *
395393    +        G_Months_Inactive_12_mon2  +     0.13429569680964 *
395394    +        G_Months_Inactive_12_mon3  +     0.15691372658011 * G_Months_on_book0
395395    +          +    -0.01231673079327 * G_Months_on_book1
395396    +          +     0.04161404001317 * G_Months_on_book2
395397    +          +      0.0537182206432 * G_Months_on_book3
395398    +          +    -0.28089933654563 * G_Months_on_book4
395399    +          +    -0.17604035689726 * G_Months_on_book5
395400    +          +     0.24792432349444 * G_Months_on_book6
395401    +          +     0.03887575032577 * G_Months_on_book7
395402    +          +     0.16571491692789 * G_Total_Relationship_Count0
395403    +          +    -0.02906776998496 * G_Total_Relationship_Count1
395404    +          +     0.38599519077683 * G_Total_Trans_Ct0
395405    +          +     0.12103406377764 * G_Total_Trans_Ct1
395406    +          +      0.1665955472516 * G_Total_Trans_Ct2
395407    +          +     0.18842838894433 * G_Total_Trans_Ct3
395408    +          +    -0.22091742274663 * G_Total_Trans_Ct4
395409    +          +    -0.16146582654558 * G_Total_Trans_Ct5
395410    +          +    -0.58765542396033 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.13221112619587 * G_Contacts_Count_12_mon0 +
0.06873025796286 * G_Contacts_Count_12_mon1 + 0.15106577297273 * G_Contacts_Count_12_mon2 +
0.02758955335574 * G_Contacts_Count_12_mon3 + -0.29581799524654 * G_Customer_Age0 +
0.33907010213137 * G_Customer_Age1 + -0.08748797480777 * G_Customer_Age2 + 0.23533147426665 *
G_Customer_Age3 + -0.13925157936482 * G_Customer_Age4 + -0.08246938124949 * G_Customer_Age5 +
0.08407167326123 * G_Customer_Age6 + 0.10094164575548 * G_Customer_Age7 + 0.12405820912475 *
G_Customer_Age8 + -0.27674343160986 * G_Customer_Age9 + 0.22216749562418 *
G_Months_Inactive_12_mon0 + 0.0052454194168 * G_Months_Inactive_12_mon1 + 0.30735551162206 *
G_Months_Inactive_12_mon2 + 0.13429569680964 * G_Months_Inactive_12_mon3 + 0.15691372658011 *
G_Months_on_book0 + -0.01231673079327 * G_Months_on_book1 + 0.04161404001317 *
G_Months_on_book2 + 0.0537182206432 * G_Months_on_book3 + -0.28089933654563 *
G_Months_on_book4 + -0.17604035689726 * G_Months_on_book5 + 0.24792432349444 *
G_Months_on_book6 + 0.03887575032577 * G_Months_on_book7 + 0.16571491692789 *
G_Total_Relationship_Count0 + -0.02906776998496 * G_Total_Relationship_Count1 +
0.38599519077683 * G_Total_Trans_Ct0 + 0.12103406377764 * G_Total_Trans_Ct1 + 0.1665955472516
* G_Total_Trans_Ct2 + 0.18842838894433 * G_Total_Trans_Ct3 + -0.22091742274663 *
G_Total_Trans_Ct4 + -0.16146582654558 * G_Total_Trans_Ct5 + -0.58765542396033 *
G_Total_Trans_Ct6 ;
395411    +   H1x1_7  = H1x1_7  +     0.52979284063353 * G_Contacts_Count_12_mon0
395412    +          +    -0.00927053652737 * G_Contacts_Count_12_mon1
395413    +          +    -0.20151253370614 * G_Contacts_Count_12_mon2
395414    +          +    -0.32482266013186 * G_Contacts_Count_12_mon3
395415    +          +     0.28872518748449 * G_Customer_Age0  +     0.27372518652188 *
395416    +        G_Customer_Age1  +    -0.07641157440357 * G_Customer_Age2
395417    +          +     0.17754100292617 * G_Customer_Age3  +      0.2114128425926 *
395418    +        G_Customer_Age4  +     0.22055682171423 * G_Customer_Age5
395419    +          +    -0.00718728894877 * G_Customer_Age6  +    -0.05710622042797 *
395420    +        G_Customer_Age7  +     0.04337724542871 * G_Customer_Age8
395421    +          +    -0.34634671262451 * G_Customer_Age9  +     0.39054305983726 *
395422    +        G_Months_Inactive_12_mon0  +      0.0584319065406 *
395423    +        G_Months_Inactive_12_mon1  +     0.05072065962762 *
395424    +        G_Months_Inactive_12_mon2  +     -0.1972631125201 *
395425    +        G_Months_Inactive_12_mon3  +     0.10983158695445 * G_Months_on_book0
395426    +          +    -0.10780752641854 * G_Months_on_book1
395427    +          +     0.19890305414935 * G_Months_on_book2
395428    +          +    -0.02871177908005 * G_Months_on_book3
395429    +          +     0.07115842629584 * G_Months_on_book4
395430    +          +     0.07042674563525 * G_Months_on_book5
395431    +          +     0.12878592163255 * G_Months_on_book6
395432    +          +     -0.1092783116355 * G_Months_on_book7
395433    +          +    -0.10515030909733 * G_Total_Relationship_Count0
395434    +          +    -0.15072520294283 * G_Total_Relationship_Count1
395435    +          +     1.19553165179253 * G_Total_Trans_Ct0
395436    +          +     0.39569879975941 * G_Total_Trans_Ct1
395437    +          +     0.12633022908457 * G_Total_Trans_Ct2
395438    +          +     0.64963494787214 * G_Total_Trans_Ct3
395439    +          +    -0.03209221597063 * G_Total_Trans_Ct4
395440    +          +     0.01435877324027 * G_Total_Trans_Ct5
395441    +          +      -1.000780001653 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.52979284063353 * G_Contacts_Count_12_mon0 +
-0.00927053652737 * G_Contacts_Count_12_mon1 + -0.20151253370614 * G_Contacts_Count_12_mon2 +
-0.32482266013186 * G_Contacts_Count_12_mon3 + 0.28872518748449 * G_Customer_Age0 +
0.27372518652188 * G_Customer_Age1 + -0.07641157440357 * G_Customer_Age2 + 0.17754100292617 *
G_Customer_Age3 + 0.2114128425926 * G_Customer_Age4 + 0.22055682171423 * G_Customer_Age5 +
-0.00718728894877 * G_Customer_Age6 + -0.05710622042797 * G_Customer_Age7 + 0.04337724542871 *
G_Customer_Age8 + -0.34634671262451 * G_Customer_Age9 + 0.39054305983726 *
G_Months_Inactive_12_mon0 + 0.0584319065406 * G_Months_Inactive_12_mon1 + 0.05072065962762 *
G_Months_Inactive_12_mon2 + -0.1972631125201 * G_Months_Inactive_12_mon3 + 0.10983158695445 *
G_Months_on_book0 + -0.10780752641854 * G_Months_on_book1 + 0.19890305414935 *
G_Months_on_book2 + -0.02871177908005 * G_Months_on_book3 + 0.07115842629584 *
G_Months_on_book4 + 0.07042674563525 * G_Months_on_book5 + 0.12878592163255 *
G_Months_on_book6 + -0.1092783116355 * G_Months_on_book7 + -0.10515030909733 *
G_Total_Relationship_Count0 + -0.15072520294283 * G_Total_Relationship_Count1 +
1.19553165179253 * G_Total_Trans_Ct0 + 0.39569879975941 * G_Total_Trans_Ct1 + 0.12633022908457
* G_Total_Trans_Ct2 + 0.64963494787214 * G_Total_Trans_Ct3 + -0.03209221597063 *
G_Total_Trans_Ct4 + 0.01435877324027 * G_Total_Trans_Ct5 + -1.000780001653 * G_Total_Trans_Ct6
;
395442    +   H1x1_8  = H1x1_8  +     0.43559578908991 * G_Contacts_Count_12_mon0
395443    +          +     0.15482576026797 * G_Contacts_Count_12_mon1
395444    +          +     0.22003771328343 * G_Contacts_Count_12_mon2
395445    +          +    -0.32351859644489 * G_Contacts_Count_12_mon3
395446    +          +     0.25527818982735 * G_Customer_Age0  +    -0.34625101213556 *
395447    +        G_Customer_Age1  +    -0.10206653170454 * G_Customer_Age2
395448    +          +     0.16238377490538 * G_Customer_Age3  +     0.23820362187239 *
395449    +        G_Customer_Age4  +    -0.28893981282635 * G_Customer_Age5
395450    +          +    -0.15157347323935 * G_Customer_Age6  +    -0.09709525607225 *
395451    +        G_Customer_Age7  +     0.05101807706778 * G_Customer_Age8
395452    +          +      0.1833303362658 * G_Customer_Age9  +     0.22150219250501 *
395453    +        G_Months_Inactive_12_mon0  +      0.1914152418903 *
395454    +        G_Months_Inactive_12_mon1  +    -0.13661547545204 *
395455    +        G_Months_Inactive_12_mon2  +     0.04075969886218 *
395456    +        G_Months_Inactive_12_mon3  +     0.16588195769456 * G_Months_on_book0
395457    +          +     0.35595447039136 * G_Months_on_book1
395458    +          +    -0.13428049455488 * G_Months_on_book2
395459    +          +     0.11005558553554 * G_Months_on_book3
395460    +          +     0.04235545524164 * G_Months_on_book4
395461    +          +    -0.19070437958701 * G_Months_on_book5
395462    +          +     -0.0897976458589 * G_Months_on_book6
395463    +          +     0.15754587346328 * G_Months_on_book7
395464    +          +     0.77093275314634 * G_Total_Relationship_Count0
395465    +          +    -0.21505110573527 * G_Total_Relationship_Count1
395466    +          +     0.55685628450068 * G_Total_Trans_Ct0
395467    +          +      0.2374533906488 * G_Total_Trans_Ct1
395468    +          +     -0.1958105436154 * G_Total_Trans_Ct2
395469    +          +     0.13056576720194 * G_Total_Trans_Ct3
395470    +          +     0.00648614572271 * G_Total_Trans_Ct4
395471    +          +     0.15255649554313 * G_Total_Trans_Ct5
395472    +          +    -0.31681419802422 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_8 = H1x1_8 + 0.43559578908991 * G_Contacts_Count_12_mon0 +
0.15482576026797 * G_Contacts_Count_12_mon1 + 0.22003771328343 * G_Contacts_Count_12_mon2 +
-0.32351859644489 * G_Contacts_Count_12_mon3 + 0.25527818982735 * G_Customer_Age0 +
-0.34625101213556 * G_Customer_Age1 + -0.10206653170454 * G_Customer_Age2 + 0.16238377490538 *
G_Customer_Age3 + 0.23820362187239 * G_Customer_Age4 + -0.28893981282635 * G_Customer_Age5 +
-0.15157347323935 * G_Customer_Age6 + -0.09709525607225 * G_Customer_Age7 + 0.05101807706778 *
G_Customer_Age8 + 0.1833303362658 * G_Customer_Age9 + 0.22150219250501 *
G_Months_Inactive_12_mon0 + 0.1914152418903 * G_Months_Inactive_12_mon1 + -0.13661547545204 *
G_Months_Inactive_12_mon2 + 0.04075969886218 * G_Months_Inactive_12_mon3 + 0.16588195769456 *
G_Months_on_book0 + 0.35595447039136 * G_Months_on_book1 + -0.13428049455488 *
G_Months_on_book2 + 0.11005558553554 * G_Months_on_book3 + 0.04235545524164 *
G_Months_on_book4 + -0.19070437958701 * G_Months_on_book5 + -0.0897976458589 *
G_Months_on_book6 + 0.15754587346328 * G_Months_on_book7 + 0.77093275314634 *
G_Total_Relationship_Count0 + -0.21505110573527 * G_Total_Relationship_Count1 +
0.55685628450068 * G_Total_Trans_Ct0 + 0.2374533906488 * G_Total_Trans_Ct1 + -0.1958105436154
* G_Total_Trans_Ct2 + 0.13056576720194 * G_Total_Trans_Ct3 + 0.00648614572271 *
G_Total_Trans_Ct4 + 0.15255649554313 * G_Total_Trans_Ct5 + -0.31681419802422 *
G_Total_Trans_Ct6 ;
395473    +   H1x1_1  =     0.02650025320783 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.02650025320783 + H1x1_1 ;
395474    +   H1x1_2  =    -0.25684105730406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.25684105730406 + H1x1_2 ;
395475    +   H1x1_3  =    -0.50787825627603 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.50787825627603 + H1x1_3 ;
395476    +   H1x1_4  =     -0.5245695310695 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.5245695310695 + H1x1_4 ;
395477    +   H1x1_5  =     1.16436476363924 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.16436476363924 + H1x1_5 ;
395478    +   H1x1_6  =     0.33913994954524 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.33913994954524 + H1x1_6 ;
395479    +   H1x1_7  =     1.58805018436023 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.58805018436023 + H1x1_7 ;
395480    +   H1x1_8  =    -2.12315030302658 + H1x1_8 ;
MPRINT(EM_DIAGRAM):   H1x1_8 = -2.12315030302658 + H1x1_8 ;
395481    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
395482    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
395483    +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
395484    +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
395485    +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
395486    +   H1x1_4  = EXP(MIN(-0.5 * H1x1_4 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(MIN(-0.5 * H1x1_4 **2, _EXP_BAR));
395487    +   H1x1_5  = EXP(MIN(-0.5 * H1x1_5 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(MIN(-0.5 * H1x1_5 **2, _EXP_BAR));
395488    +   H1x1_6  = EXP(MIN(-0.5 * H1x1_6 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(MIN(-0.5 * H1x1_6 **2, _EXP_BAR));
395489    +   H1x1_7  = EXP(MIN(-0.5 * H1x1_7 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(MIN(-0.5 * H1x1_7 **2, _EXP_BAR));
395490    +   H1x1_8  = EXP(MIN(-0.5 * H1x1_8 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_8 = EXP(MIN(-0.5 * H1x1_8 **2, _EXP_BAR));
395491    +END;
MPRINT(EM_DIAGRAM):   END;
395492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
395493    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
395494    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
395495    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
395496    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
395497    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
395498    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
395499    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
395500    +   H1x1_8  = .;
MPRINT(EM_DIAGRAM):   H1x1_8 = .;
395501    +END;
MPRINT(EM_DIAGRAM):   END;
395502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395503    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
395504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395505    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
395506    +   H2x1_1  =     0.08862660282113 * H1x1_1  +     0.40243412973248 * H1x1_2
395507    +          +     2.02443454653222 * H1x1_3  +    -1.72744500671302 * H1x1_4
395508    +          +      1.8238088425411 * H1x1_5  +    -1.93408809997984 * H1x1_6
395509    +          +    -0.75757402320895 * H1x1_7  +      1.1743020655621 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.08862660282113 * H1x1_1 + 0.40243412973248 * H1x1_2 +
2.02443454653222 * H1x1_3 + -1.72744500671302 * H1x1_4 + 1.8238088425411 * H1x1_5 +
-1.93408809997984 * H1x1_6 + -0.75757402320895 * H1x1_7 + 1.1743020655621 * H1x1_8 ;
395510    +   H2x1_2  =     2.04689085726492 * H1x1_1  +    -0.20793468317806 * H1x1_2
395511    +          +     0.88358710261429 * H1x1_3  +     0.56058137974114 * H1x1_4
395512    +          +     0.08505573871889 * H1x1_5  +     0.11321169903443 * H1x1_6
395513    +          +     0.28214925336371 * H1x1_7  +     0.93894860595328 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.04689085726492 * H1x1_1 + -0.20793468317806 * H1x1_2 +
0.88358710261429 * H1x1_3 + 0.56058137974114 * H1x1_4 + 0.08505573871889 * H1x1_5 +
0.11321169903443 * H1x1_6 + 0.28214925336371 * H1x1_7 + 0.93894860595328 * H1x1_8 ;
395514    +   H2x1_3  =     -1.2184808904648 * H1x1_1  +    -0.19460736676124 * H1x1_2
395515    +          +    -0.46304820196999 * H1x1_3  +     1.67787333554577 * H1x1_4
395516    +          +    -1.29800064995406 * H1x1_5  +     0.66380298593322 * H1x1_6
395517    +          +     0.90021515216269 * H1x1_7  +    -1.34294578583942 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.2184808904648 * H1x1_1 + -0.19460736676124 * H1x1_2 +
-0.46304820196999 * H1x1_3 + 1.67787333554577 * H1x1_4 + -1.29800064995406 * H1x1_5 +
0.66380298593322 * H1x1_6 + 0.90021515216269 * H1x1_7 + -1.34294578583942 * H1x1_8 ;
395518    +   H2x1_4  =     0.07420954177297 * H1x1_1  +     0.06245751395874 * H1x1_2
395519    +          +     1.75101414002355 * H1x1_3  +    -0.69876187290575 * H1x1_4
395520    +          +     1.64522917242144 * H1x1_5  +     0.58439192388549 * H1x1_6
395521    +          +     1.71684196350147 * H1x1_7  +    -0.09182458057059 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.07420954177297 * H1x1_1 + 0.06245751395874 * H1x1_2 +
1.75101414002355 * H1x1_3 + -0.69876187290575 * H1x1_4 + 1.64522917242144 * H1x1_5 +
0.58439192388549 * H1x1_6 + 1.71684196350147 * H1x1_7 + -0.09182458057059 * H1x1_8 ;
395522    +   H2x1_5  =    -1.98024643363819 * H1x1_1  +     0.27225061249304 * H1x1_2
395523    +          +     0.07627795727865 * H1x1_3  +    -0.91980460817422 * H1x1_4
395524    +          +    -0.59096956501431 * H1x1_5  +    -0.50710914261851 * H1x1_6
395525    +          +     -1.9770496377027 * H1x1_7  +     0.24951909623587 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.98024643363819 * H1x1_1 + 0.27225061249304 * H1x1_2 +
0.07627795727865 * H1x1_3 + -0.91980460817422 * H1x1_4 + -0.59096956501431 * H1x1_5 +
-0.50710914261851 * H1x1_6 + -1.9770496377027 * H1x1_7 + 0.24951909623587 * H1x1_8 ;
395526    +   H2x1_6  =    -2.24015626845506 * H1x1_1  +    -1.85105325756077 * H1x1_2
395527    +          +     1.03975495809148 * H1x1_3  +      1.3268323396913 * H1x1_4
395528    +          +     1.61406315831088 * H1x1_5  +    -1.31415185757273 * H1x1_6
395529    +          +     -1.5906272596979 * H1x1_7  +     1.44315645396274 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.24015626845506 * H1x1_1 + -1.85105325756077 * H1x1_2 +
1.03975495809148 * H1x1_3 + 1.3268323396913 * H1x1_4 + 1.61406315831088 * H1x1_5 +
-1.31415185757273 * H1x1_6 + -1.5906272596979 * H1x1_7 + 1.44315645396274 * H1x1_8 ;
395530    +   H2x1_7  =    -0.68488963405252 * H1x1_1  +    -1.78048017163839 * H1x1_2
395531    +          +    -0.80113851495727 * H1x1_3  +    -0.30303871473155 * H1x1_4
395532    +          +    -0.89424738421983 * H1x1_5  +     0.88296045952163 * H1x1_6
395533    +          +     1.46780135693795 * H1x1_7  +    -0.54776833354744 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -0.68488963405252 * H1x1_1 + -1.78048017163839 * H1x1_2 +
-0.80113851495727 * H1x1_3 + -0.30303871473155 * H1x1_4 + -0.89424738421983 * H1x1_5 +
0.88296045952163 * H1x1_6 + 1.46780135693795 * H1x1_7 + -0.54776833354744 * H1x1_8 ;
395534    +   H2x1_8  =     0.84377114826897 * H1x1_1  +    -0.14810018909791 * H1x1_2
395535    +          +     1.11853545850139 * H1x1_3  +    -0.52413654460248 * H1x1_4
395536    +          +     0.26423935198202 * H1x1_5  +     0.73287134084679 * H1x1_6
395537    +          +    -0.10968109058294 * H1x1_7  +     0.05373159333235 * H1x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_8 = 0.84377114826897 * H1x1_1 + -0.14810018909791 * H1x1_2 +
1.11853545850139 * H1x1_3 + -0.52413654460248 * H1x1_4 + 0.26423935198202 * H1x1_5 +
0.73287134084679 * H1x1_6 + -0.10968109058294 * H1x1_7 + 0.05373159333235 * H1x1_8 ;
395538    +   H2x1_1  =    -0.31574497820096 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.31574497820096 + H2x1_1 ;
395539    +   H2x1_2  =     -1.1221477339575 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.1221477339575 + H2x1_2 ;
395540    +   H2x1_3  =    -0.09036454817003 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.09036454817003 + H2x1_3 ;
395541    +   H2x1_4  =    -0.11931722312594 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11931722312594 + H2x1_4 ;
395542    +   H2x1_5  =     0.18308841470994 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.18308841470994 + H2x1_5 ;
395543    +   H2x1_6  =    -1.66376461184436 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.66376461184436 + H2x1_6 ;
395544    +   H2x1_7  =     1.50948440714938 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.50948440714938 + H2x1_7 ;
395545    +   H2x1_8  =    -1.19197165918413 + H2x1_8 ;
MPRINT(EM_DIAGRAM):   H2x1_8 = -1.19197165918413 + H2x1_8 ;
395546    +   H2x1_1  = TANH(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = TANH(H2x1_1 );
395547    +   H2x1_2  = TANH(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = TANH(H2x1_2 );
395548    +   H2x1_3  = TANH(H2x1_3 );
MPRINT(EM_DIAGRAM):   H2x1_3 = TANH(H2x1_3 );
395549    +   H2x1_4  = TANH(H2x1_4 );
MPRINT(EM_DIAGRAM):   H2x1_4 = TANH(H2x1_4 );
395550    +   H2x1_5  = TANH(H2x1_5 );
MPRINT(EM_DIAGRAM):   H2x1_5 = TANH(H2x1_5 );
395551    +   H2x1_6  = TANH(H2x1_6 );
MPRINT(EM_DIAGRAM):   H2x1_6 = TANH(H2x1_6 );
395552    +   H2x1_7  = TANH(H2x1_7 );
MPRINT(EM_DIAGRAM):   H2x1_7 = TANH(H2x1_7 );
395553    +   H2x1_8  = TANH(H2x1_8 );
MPRINT(EM_DIAGRAM):   H2x1_8 = TANH(H2x1_8 );
395554    +END;
MPRINT(EM_DIAGRAM):   END;
395555    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
395556    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
395557    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
395558    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
395559    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
395560    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
395561    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
395562    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
395563    +   H2x1_8  = .;
MPRINT(EM_DIAGRAM):   H2x1_8 = .;
395564    +END;
MPRINT(EM_DIAGRAM):   END;
395565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395566    +*** Writing the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Attrition_Flag ;
395567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395568    +
395569    +*** Generate dummy variables for Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Attrition_Flag ;
395570    +drop Attrition_Flag1 Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   drop Attrition_Flag1 Attrition_Flag0 ;
395571    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
395572    +length F_Attrition_Flag $ 17;
MPRINT(EM_DIAGRAM):   length F_Attrition_Flag $ 17;
395573    +F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
MPRINT(EM_DIAGRAM):   F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
395574    +%DMNORMIP( F_Attrition_Flag )
MPRINT(DMNORMIP):   call dmnorm(F_Attrition_Flag,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
395575    +if missing( Attrition_Flag ) then do;
MPRINT(EM_DIAGRAM):   if missing( Attrition_Flag ) then do;
395576    +   Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
395577    +   Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
395578    +end;
MPRINT(EM_DIAGRAM):   end;
395579    +else do;
MPRINT(EM_DIAGRAM):   else do;
395580    +   if F_Attrition_Flag = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_Attrition_Flag = '0' then do;
395581    +      Attrition_Flag1 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 0;
395582    +      Attrition_Flag0 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 1;
395583    +   end;
MPRINT(EM_DIAGRAM):   end;
395584    +   else if F_Attrition_Flag = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_Attrition_Flag = '1' then do;
395585    +      Attrition_Flag1 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 1;
395586    +      Attrition_Flag0 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 0;
395587    +   end;
MPRINT(EM_DIAGRAM):   end;
395588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
395589    +      Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
395590    +      Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
395591    +   end;
MPRINT(EM_DIAGRAM):   end;
395592    +end;
MPRINT(EM_DIAGRAM):   end;
395593    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
395594    +   P_Attrition_Flag1  =     2.47649940953865 * H2x1_1
395595    +          +     0.82822394165393 * H2x1_2  +    -2.28704272678157 * H2x1_3
395596    +          +     0.98345755322308 * H2x1_4  +    -0.80209601445336 * H2x1_5
395597    +          +    -0.80328250572529 * H2x1_6  +    -2.19260501467389 * H2x1_7
395598    +          +     0.11593680364832 * H2x1_8 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 2.47649940953865 * H2x1_1 + 0.82822394165393 *
H2x1_2 + -2.28704272678157 * H2x1_3 + 0.98345755322308 * H2x1_4 + -0.80209601445336 * H2x1_5 +
-0.80328250572529 * H2x1_6 + -2.19260501467389 * H2x1_7 + 0.11593680364832 * H2x1_8 ;
395599    +   P_Attrition_Flag1  =    -3.90025292308802 + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = -3.90025292308802 + P_Attrition_Flag1 ;
395600    +   P_Attrition_Flag0  = 0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
395601    +   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
395602    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
395603    +   P_Attrition_Flag1  = EXP(P_Attrition_Flag1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = EXP(P_Attrition_Flag1 - _MAX_);
395604    +   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
395605    +   P_Attrition_Flag0  = EXP(P_Attrition_Flag0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = EXP(P_Attrition_Flag0 - _MAX_);
395606    +   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
395607    +   P_Attrition_Flag1  = P_Attrition_Flag1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 / _SUM_;
395608    +   P_Attrition_Flag0  = P_Attrition_Flag0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = P_Attrition_Flag0 / _SUM_;
395609    +END;
MPRINT(EM_DIAGRAM):   END;
395610    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
395611    +   P_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = .;
395612    +   P_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = .;
395613    +END;
MPRINT(EM_DIAGRAM):   END;
395614    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
395615    +   P_Attrition_Flag1  =      0.1606941309255;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1606941309255;
395616    +   P_Attrition_Flag0  =     0.83930586907449;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83930586907449;
395617    +END;
MPRINT(EM_DIAGRAM):   END;
395618    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
395619    +*** Writing the Residuals  of the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Attrition_Flag ;
395620    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
395621    +IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1 = . ;
395622    +ELSE R_Attrition_Flag1  = Attrition_Flag1  - P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag1 = Attrition_Flag1 - P_Attrition_Flag1 ;
395623    +IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0 = . ;
395624    +ELSE R_Attrition_Flag0  = Attrition_Flag0  - P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag0 = Attrition_Flag0 - P_Attrition_Flag0 ;
395625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395626    +*** Writing the I_Attrition_Flag  AND U_Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Attrition_Flag AND U_Attrition_Flag ;
395627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
395628    +_MAXP_ = P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag1 ;
395629    +I_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "1                " ;
395630    +U_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "1                " ;
395631    +IF( _MAXP_ LT P_Attrition_Flag0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Attrition_Flag0 ) THEN DO;
395632    +   _MAXP_ = P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag0 ;
395633    +   I_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "0                " ;
395634    +   U_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "0                " ;
395635    +END;
MPRINT(EM_DIAGRAM):   END;
395636    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
395637    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
395638    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
395639    +drop
395640    +S_RANGE_LOG_Total_Trans_Amt
395641    +S_RANGE_SQRT_Avg_Utilization_Rat
395642    +S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
395643    +S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
395644    +S_RANGE_Total_Revolving_Bal
395645    +H1x1_1
395646    +H1x1_2
395647    +H1x1_3
395648    +H1x1_4
395649    +H1x1_5
395650    +H1x1_6
395651    +H1x1_7
395652    +H1x1_8
395653    +H2x1_1
395654    +H2x1_2
395655    +H2x1_3
395656    +H2x1_4
395657    +H2x1_5
395658    +H2x1_6
395659    +H2x1_7
395660    +H2x1_8
395661    +;
MPRINT(EM_DIAGRAM):   drop S_RANGE_LOG_Total_Trans_Amt S_RANGE_SQRT_Avg_Utilization_Rat
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 S_RANGE_Total_Revolving_Bal
H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x1_8 H2x1_1 H2x1_2 H2x1_3 H2x1_4 H2x1_5
H2x1_6 H2x1_7 H2x1_8 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
395662     run;
 
NOTE: DATA STEP view saved on file EMWS1.AUTONEURAL2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
395663     quit;
395664     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
395665     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
395666     * AutoNeural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Computing metadata for TRAIN data;
395667     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.AUTONEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.AutoNeural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.AutoNeural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.AutoNeural2_TRAIN out=WORK.M20S1IQP
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20S1IQP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M20S1IQP(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20S1IQP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M20S1IQP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2CARRNT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0E2YJLN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CARRNT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG1") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("R_ATTRITION_FLAG1") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG0") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("R_ATTRITION_FLAG0") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("F_ATTRITION_FLAG") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("I_ATTRITION_FLAG") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("U_ATTRITION_FLAG") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when("ATTRITION_FLAG") model = "AutoNeural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
396020     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
396021     set EMWS1.AutoNeural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMINFO;
396022     where DATA='AutoNeural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
396023     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.AUTONEURAL2_EMINFO.
      WHERE (DATA='AutoNeural2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396024     data EMWS1.AutoNeural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_EMINFO;
396025     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
396026     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
396027     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.AUTONEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
396031     run;
396032     data EMWS1.AutoNeural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMINFO;
396033     set EMWS1.AutoNeural2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMINFO WORK.MODELTEMP_INFO;
396034     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.AUTONEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
396035     proc sort data = EMWS1.AutoNeural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.AutoNeural2_EMINFO NOTHREADS;
396036     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
396037     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL2_EMINFO.
NOTE: The data set EMWS1.AUTONEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396038     proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
396039     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
396040     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396041     proc sort data = EMWS1.AutoNeural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.AutoNeural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
396042     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
396043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
396044     data EMWS1.AutoNeural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMINFO;
396045     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
396046     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
396047     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.AUTONEURAL2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396048     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
396049     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
396050     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
396051     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.AUTONEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS1.AUTONEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS1.AUTONEURAL2_TEST.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:18:28" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                April 09, 2022
Time:                15:18:28
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2QXSIV7
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural2\EMREPORT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2QXSIV7 new;
MPRINT(EM_DIAGRAM):   run;
396075     proc sort data=EMWS1.AutoNeural2_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.AutoNeural2_OUTFIT nodupkey;
396076     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
396077     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.AUTONEURAL2_OUTFIT has 2 observations and 51 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396078     data EMWS1.AutoNeural2_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMOUTFIT(rename=(_NAME_=TARGET));
396079     set EMWS1.AutoNeural2_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_OUTFIT(where=(_NAME_ eq 'OVERALL'));
396080     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
396081     if _NAME_='OVERALL' then _NAME_='Attrition_Flag';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='Attrition_Flag';
396082     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
396083     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS1.AUTONEURAL2_EMOUTFIT has 1 observations and 50 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396084     data EMWS1.AutoNeural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_EMOUTFIT;
396085     set EMWS1.AutoNeural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMOUTFIT;
396086     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
396087     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
396087   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
396088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_EMOUTFIT has 1 observations and 51 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
396089     proc sort data=EMWS1.AutoNeural2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.AutoNeural2_EMREPORTFIT nothreads;
396090     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
396091     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.AUTONEURAL2_EMREPORTFIT.
NOTE: The data set EMWS1.AUTONEURAL2_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
396092     %let _EMwarndup = 0;
396093     %let _EMtargetdup =;
396094     %let _EMASEtargetdup =;
396095     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
396096     set EMWS1.AutoNeural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMOUTFIT;
396097     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
396098     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
396099     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
396100     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
396101     end;
MPRINT(EM_DIAGRAM):   end;
396102     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
396103     proc sort data=EMWS1.Part2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Part2_CMeta_TRAIN out=WORK.SUBSETINMETA;
396104     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
396105     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.PART2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
396106     proc sort data=EMWS1.AutoNeural2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT)
396106   ! ;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.AutoNeural2_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
396107     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
396108     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.AUTONEURAL2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 12 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
396109     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
396110     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
396111     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
396112     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 12 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396113     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
396114     set EMWS1.AutoNeural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_CMeta_TRAIN;
396115     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
396115   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
396116     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
396117     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
396118     set EMWS1.AutoNeural2_TRAIN(keep=
396119     F_Attrition_Flag
396120     I_Attrition_Flag
396121     P_Attrition_Flag0
396122     P_Attrition_Flag1
396123     R_Attrition_Flag0
396124     R_Attrition_Flag1
396125     U_Attrition_Flag
396126     _WARN_
396127     Attrition_Flag
396128     );
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_TRAIN(keep= F_Attrition_Flag I_Attrition_Flag
P_Attrition_Flag0 P_Attrition_Flag1 R_Attrition_Flag0 R_Attrition_Flag1 U_Attrition_Flag
_WARN_ Attrition_Flag );
396129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.AUTONEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: There were 7088 observations read from the data set EMWS1.AUTONEURAL2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 7088 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_Attrition_Flag*F_Attrition_Flag / out = WORK.AutoNeural2_1NW_SSE
nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural2_1NW_SSE;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural2_1NW_SSE(rename=(F_Attrition_Flag=FROM
I_Attrition_Flag=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "Attrition_Flag";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural2_1NW_SSE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural2_1NW_SSE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Attrition_Flag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_Attrition_Flag ;
 
MPRINT(EM_ASSESS):   VAR P_Attrition_Flag1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Attrition_Flag1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_Attrition_Flag P_Attrition_Flag1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_Attrition_Flag ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_Attrition_Flag1 NTARGET _tmpfreqvar_
WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_Attrition_Flag1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1606941309 _NEVENTS
1139 _NNONEVENTS 5949 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 7088));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_Attrition_Flag1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_Attrition_Flag1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_Attrition_Flag1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_Attrition_Flag1 *
_FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000310986 OVLMAX 0.9983032718 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 7088 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(7088/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 7088)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 7088/20) ) / (
AVGNUMRESP / (7088/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 7088 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 7088 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 7088/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 7088/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
400410     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
400411     set EMWS1.AutoNeural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_CMeta_TRAIN;
400412     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
400412   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
400413     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
400414     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
400415     set EMWS1.AutoNeural2_VALIDATE(keep=
400416     F_Attrition_Flag
400417     I_Attrition_Flag
400418     P_Attrition_Flag0
400419     P_Attrition_Flag1
400420     R_Attrition_Flag0
400421     R_Attrition_Flag1
400422     U_Attrition_Flag
400423     _WARN_
400424     Attrition_Flag
400425     );
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_VALIDATE(keep= F_Attrition_Flag I_Attrition_Flag
P_Attrition_Flag0 P_Attrition_Flag1 R_Attrition_Flag0 R_Attrition_Flag1 U_Attrition_Flag
_WARN_ Attrition_Flag );
400426     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.AUTONEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2025 observations read from the data set EMWS1.PART2_VALIDATE.
NOTE: There were 2025 observations read from the data set EMWS1.AUTONEURAL2_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2025 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_Attrition_Flag*F_Attrition_Flag / out = WORK.AutoNeural2_00Q5537
nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural2_00Q5537;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural2_00Q5537(rename=(F_Attrition_Flag=FROM
I_Attrition_Flag=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "Attrition_Flag";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMCLASSIFICATION WORK.AutoNeural2_00Q5537;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural2_00Q5537;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Attrition_Flag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_Attrition_Flag ;
 
MPRINT(EM_ASSESS):   VAR P_Attrition_Flag1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Attrition_Flag1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_Attrition_Flag P_Attrition_Flag1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_Attrition_Flag ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_Attrition_Flag1 NTARGET _tmpfreqvar_
WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_Attrition_Flag1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1604938272 _NEVENTS
325 _NNONEVENTS 1700 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2025));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_Attrition_Flag1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_Attrition_Flag1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_Attrition_Flag1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_Attrition_Flag1 *
_FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000328188 OVLMAX 0.9982630674 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2025 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2025/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2025)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2025/20) ) / (
AVGNUMRESP / (2025/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2025 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2025 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2025/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2025/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
404716     %let _cn = %sysfunc(getoption(CENTER));
404717     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
404718     proc print data=EMWS1.AutoNeural2_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_EMREPORTFIT noobs label;
404719     var STAT LABEL TRAIN
404720     VALIDATE
404721     TEST
404722     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE TEST ;
404723     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
404724     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
404725     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
404726     run;
 
NOTE: There were 21 observations read from the data set EMWS1.AUTONEURAL2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 267.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
404727     title10;
MPRINT(EM_DIAGRAM):   title10;
404728     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
404729     proc sort data=EMWS1.AutoNeural2_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.AutoNeural2_EMCLASSIFICATION nothreads;
404730     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
404731     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL2_EMCLASSIFICATION.
NOTE: The data set EMWS1.AUTONEURAL2_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
404732     %let _cn = %sysfunc(getoption(CENTER));
404733     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
404734     proc print data=EMWS1.AutoNeural2_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_EMCLASSIFICATION noobs label;
404735     var from into pct_row pct_col count percent
404736     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
404737     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
404738     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
404739     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
404740     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
404741     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
404742     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
404743     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
404744     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
404745     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
404746     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
404747     run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL2_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 268.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
404748     title9;
MPRINT(EM_DIAGRAM):   title9;
404749     title10;
MPRINT(EM_DIAGRAM):   title10;
404750     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
404751     %let _cn = %sysfunc(getoption(CENTER));
404752     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
404753     data EMWS1.AutoNeural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural2_EMEVENTREPORT;
404754     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
404754   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
404755     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
404755   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
404755   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
404755   ! FALSEEVENT
404756     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
404756   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
404756   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
404757        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
404758     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
404759     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
404760     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
404761     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
404762     set EMWS1.AutoNeural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural2_EMEVENTREPORT;
404763     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL2_EMEVENTREPORT.
NOTE: The data set EMWS1.AUTONEURAL2_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
404764     proc print data=EMWS1.AutoNeural2_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_EMEVENTREPORT noobs label;
404765     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
404766     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
404767     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
404768     run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL2_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 269.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
404769     title10;
MPRINT(EM_DIAGRAM):   title10;
404770     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
404771     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
404772     modify AutoNeural2_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural2_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
404773     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
404774     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
404774   ! ;
MPRINT(EM_DIAGRAM):   run;
404775     run;
 
NOTE: MODIFY was successful for EMWS1.AUTONEURAL2_EMRANK.DATA.
404776     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
404777     %let _cn = %sysfunc(getoption(CENTER));
404778     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
404779     proc print data=EMWS1.AutoNeural2_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_EMRANK label noobs;
404780     var
404781     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
404782     by
404783     notsorted DATAROLE
404784     notsorted TARGET
404785     notsorted TARGETLABEL
404786     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
404787     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
404788     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
404789     run;
 
NOTE: There were 40 observations read from the data set EMWS1.AUTONEURAL2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 270.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
404790     title10;
MPRINT(EM_DIAGRAM):   title10;
404791     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
404792     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
404793     modify AutoNeural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
404794     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
404794   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
404795     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
404795   ! ;
MPRINT(EM_DIAGRAM):   run;
404796     run;
 
NOTE: MODIFY was successful for EMWS1.AUTONEURAL2_EMSCOREDIST.DATA.
404797     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural2_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Attrition_Flag" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
