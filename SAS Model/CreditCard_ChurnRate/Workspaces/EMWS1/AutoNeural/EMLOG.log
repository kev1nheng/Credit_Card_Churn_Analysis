*------------------------------------------------------------*
User:                Kevin
Date:                April 09, 2022
Time:                15:14:30
Site:                70135990
Platform:            X64_10HOME
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:12:36" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                April 09, 2022
Time:                15:12:36
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2RSMVMH
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2RSMVMH new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMLOG.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:12:36" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Kevin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70135990";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMREPORT.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMOUTPUT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:12:36" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Kevin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMREPORT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMRUNSTATUS.xml'
encoding="UTF-8" NOBOM;
370170     proc freq data=EMWS1.AutoNeural_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.AutoNeural_VariableSet noprint;
370171     table ROLE*LEVEL/out=WORK.AutoNeuralMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeuralMETA;
370172     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.AUTONEURAL_VARIABLESET.
NOTE: The data set WORK.AUTONEURALMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
370173     proc print data=WORK.AutoNeuralMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeuralMETA label noobs;
370174     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
370175     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
370175   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
370175   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
370176     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
370177     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
370178     run;
 
NOTE: There were 3 observations read from the data set WORK.AUTONEURALMETA.
NOTE: The PROCEDURE PRINT printed page 170.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
370179     title10;
MPRINT(EM_DIAGRAM):   title10;
370180     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN EMWS1 Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN
EMWS1.Part2_TRAIN EMWS1.Part2_TRAIN EMWS1 Part2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Part2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class Attrition_Flag(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="Attrition_Flag";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=Attrition_Flag));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="Attrition_Flag";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_Attrition_Flag_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by Attrition_Flag;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by Attrition_Flag;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
370209     data WORK.AutoNeural_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
370210     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
370211     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
370211   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
370211   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
370212        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
370212   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
370212   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
370213     set EMWS1.IDS_ATTRITION_FLAG_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.IDS_ATTRITION_FLAG_DM( where=(_TYPE_="TARGET"));
370214     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
370215     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
370216     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
370217     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
370218     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
370219     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
370220     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
370221     end;
MPRINT(EM_DIAGRAM):   end;
370222     output;
MPRINT(EM_DIAGRAM):   output;
370223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
370224     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
370225     proc print data=WORK.AutoNeural_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural_EVENT noobs label;
370226     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
370227     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
370228     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
370229     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL_EVENT.
NOTE: The PROCEDURE PRINT printed page 171.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
370230     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "Attrition_Flag"."
370231     proc print data = EMWS1.Ids_Attrition_Flag_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Ids_Attrition_Flag_DM noobs label;
370232     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
370233     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
370234     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
370234   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
370234   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
370235     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
370236     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
370237     run;
 
NOTE: There were 7 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 172.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
370238     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0E2DQSA;
MPRINT(EM_DIAGRAM):   set WORK.M0E2DQSA;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
370247     data WORK.M0E2DQSA;
MPRINT(EM_DIAGRAM):    data WORK.M0E2DQSA;
370248     set WORK.M0E2DQSA end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M0E2DQSA end=eof;
370249     output;
MPRINT(EM_DIAGRAM):   output;
370250     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
370251     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
370252     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
370253     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
370254     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
370255     output;
MPRINT(EM_DIAGRAM):   output;
370256     end;
MPRINT(EM_DIAGRAM):   end;
370257     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.M0E2DQSA.
NOTE: The data set WORK.M0E2DQSA has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DD.
NOTE: The data set WORK.ATTRITION_FLAG has 2 observations and 7 variables.
NOTE: There were 2 observations read from the data set EMWS1.IDS_ATTRITION_FLAG_DD.
NOTE: The data set WORK.ATTRITION_FLAG has 2 observations and 7 variables.
370258     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
370259     * AutoNeural: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural: Create decision matrix;
370260     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
370261     data WORK.Attrition_Flag;
MPRINT(EM_DIAGRAM):   data WORK.Attrition_Flag;
370262       length   Attrition_Flag                   $  32
370263                COUNT                                8
370264                DATAPRIOR                            8
370265                TRAINPRIOR                           8
370266                DECPRIOR                             8
370267                DECISION1                            8
370268                DECISION2                            8
370269                ;
MPRINT(EM_DIAGRAM):   length Attrition_Flag $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8
DECISION1 8 DECISION2 8 ;
370270
370271       label    COUNT="Level Counts"
370272                DATAPRIOR="Data Proportions"
370273                TRAINPRIOR="Training Proportions"
370274                DECPRIOR="Decision Priors"
370275                DECISION1="1"
370276                DECISION2="0"
370277                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
370278       format   COUNT 10.
370279                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
370280     Attrition_Flag="1"; COUNT=1627; DATAPRIOR=0.16065962279055;
370280   ! TRAINPRIOR=0.16065962279055; DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   Attrition_Flag="1";
MPRINT(EM_DIAGRAM):   COUNT=1627;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.16065962279055;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.16065962279055;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
370281     output;
MPRINT(EM_DIAGRAM):   output;
370282     Attrition_Flag="0"; COUNT=8500; DATAPRIOR=0.83934037720944;
370282   ! TRAINPRIOR=0.83934037720944; DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   Attrition_Flag="0";
MPRINT(EM_DIAGRAM):   COUNT=8500;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.83934037720944;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.83934037720944;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
370283     output;
MPRINT(EM_DIAGRAM):   output;
370284     ;
MPRINT(EM_DIAGRAM):   ;
370285     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ATTRITION_FLAG has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370286     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
370287     modify Attrition_Flag(type=PROFIT label=Attrition_Flag);
MPRINT(EM_DIAGRAM):   modify Attrition_Flag(type=PROFIT label= Attrition_Flag);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
370288     label DECISION1= '1';
370289     label DECISION2= '0';
370290     run;
 
NOTE: MODIFY was successful for WORK.ATTRITION_FLAG.DATA.
370291     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
370292     data EM_AutoNeural;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural;
370293     set EMWS1.Part2_TRAIN(keep=
370294     Attrition_Flag G_Contacts_Count_12_mon G_Customer_Age G_Months_Inactive_12_mon
370295     G_Months_on_book G_Total_Relationship_Count G_Total_Trans_Ct
370296     RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
370297     RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
370298     RANGE_Total_Revolving_Bal );
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN(keep= Attrition_Flag G_Contacts_Count_12_mon
G_Customer_Age G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1 RANGE_Total_Revolving_Bal );
370299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370300     *------------------------------------------------------------* ;
370301     * AutoNeural: DMDBClass Macro ;
370302     *------------------------------------------------------------* ;
370303     %macro DMDBClass;
370304         Attrition_Flag(DESC) G_Contacts_Count_12_mon(ASC) G_Customer_Age(ASC)
370305        G_Months_Inactive_12_mon(ASC) G_Months_on_book(ASC)
370306        G_Total_Relationship_Count(ASC) G_Total_Trans_Ct(ASC)
370307     %mend DMDBClass;
370308     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370309     * AutoNeural: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural: DMDBVar Macro ;
370310     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370311     %macro DMDBVar;
370312         RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
370313        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
370314        RANGE_Total_Revolving_Bal
370315     %mend DMDBVar;
370316     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
370317     * AutoNeural: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural: Create DMDB;
370318     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
370319     proc dmdb batch data=WORK.EM_AutoNeural
370320     dmdbcat=WORK.AutoNeural_DMDB
370321     maxlevel = 513
370322     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
370323     class %DMDBClass;
MPRINT(DMDBCLASS):   Attrition_Flag(DESC) G_Contacts_Count_12_mon(ASC) G_Customer_Age(ASC)
G_Months_Inactive_12_mon(ASC) G_Months_on_book(ASC) G_Total_Relationship_Count(ASC)
G_Total_Trans_Ct(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
370324     var %DMDBVar;
MPRINT(DMDBVAR):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1 RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):  ;
370325     target
370326     Attrition_Flag
370327     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag ;
370328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 7088   Memory used = 511K.
NOTE: There were 7088 observations read from the data set WORK.EM_AUTONEURAL.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
370329     quit;
370330     *--- end code ---*;
 
370331     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
370332     * AutoNeural: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural: Interval Inputs Macro ;
370333     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370334     %macro INTINPUTS;
370335         RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
370336        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
370337        RANGE_Total_Revolving_Bal
370338     %mend INTINPUTS;
370339     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370340     * AutoNeural: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural: Binary Inputs Macro ;
370341     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370342     %macro BININPUTS;
370343
370344     %mend BININPUTS;
370345     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370346     * AutoNeural: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural: Nominal Inputs Macro ;
370347     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370348     %macro NOMINPUTS;
370349         G_Contacts_Count_12_mon G_Customer_Age G_Months_Inactive_12_mon
370350        G_Months_on_book G_Total_Relationship_Count G_Total_Trans_Ct
370351     %mend NOMINPUTS;
370352     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370353     * AutoNeural: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural: Ordinal Inputs Macro ;
370354     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
370355     %macro ORDINPUTS;
370356
370357     %mend ORDINPUTS;
370358     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
370359     ;
MPRINT(EM_DIAGRAM):   ;
370360     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
370361     options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
370362     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
370363     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
370364     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
370365     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370366     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
370366   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
370367     *;
 
370368     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370369     * Autoneural: search / SINGLE LAYER;
MPRINT(EM_DIAGRAM):   * Autoneural: search / SINGLE LAYER;
370370     ;
MPRINT(EM_DIAGRAM):   ;
370371     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370372     *;
MPRINT(EM_DIAGRAM):   *;
 
370373     *;
MPRINT(EM_DIAGRAM):    *;
370374     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
370375     validdata=EMWS1.Part2_VALIDATE
370376     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
370377     *;
MPRINT(EM_DIAGRAM):   *;
370378     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370379     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370380     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370381     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370382     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
370383     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
370384     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370385     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
370386     ;
MPRINT(EM_DIAGRAM):   ;
370387     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370388     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
370389     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
370390     *;
MPRINT(EM_DIAGRAM):   *;
370391     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370392     *;
MPRINT(EM_DIAGRAM):   *;
370393     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370394     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370394   ! Search # 1 SINGLE LAYER trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=8 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 52 observations and 56 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370395     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=8
MPRINT(EM_DIAGRAM):   run;
370396     tech = Default;
370397     ;
370398     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.71 seconds
      cpu time            0.70 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370399     *;
370400     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370401     var _iter_ _aic_ _averr_ _misc_
370402     _vaverr_ _vmisc_
370403     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370404     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 173.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370405     *------------------------------------------------------------*;
370406     * Extract best iteration;
370407     ;
370408     *------------------------------------------------------------*;
370409     %global _iter;
370410     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370411     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370412     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370413     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370414     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370415     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370416     end;
MPRINT(EM_DIAGRAM):   end;
370417     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370418     *;
 
370419     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
370420     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370421     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
370422     output;
MPRINT(EM_DIAGRAM):   output;
370423     stop;
MPRINT(EM_DIAGRAM):   stop;
370424     end;
MPRINT(EM_DIAGRAM):   end;
370425     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370426     *;
370427     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370428     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370429     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
370430     output;
MPRINT(EM_DIAGRAM):   output;
370431     stop;
MPRINT(EM_DIAGRAM):   stop;
370432     end;
MPRINT(EM_DIAGRAM):   end;
370433     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370434     *;
MPRINT(EM_DIAGRAM):    *;
370435     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370436     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370436   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370437     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
370438     var _iter_ _aic_ _averr_ _misc_
370439     _vaverr_ _vmisc_
370440     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370441     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 174.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370442     title9;
MPRINT(EM_DIAGRAM):   title9;
370443     title10;
MPRINT(EM_DIAGRAM):   title10;
370444     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
370445     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370446     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
370447     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
370447   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
370448     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
370448   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
370449     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
370449   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
370450     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
370450   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
370451     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
370452     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
370453     _step_ = 'SINGLE LAYER 1';
MPRINT(EM_DIAGRAM):   _step_ = 'SINGLE LAYER 1';
370454     set
370455     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
370456     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
370457     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 1 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
370458     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370459     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370460     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370462     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370463     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370464     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370465     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370466     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
370467     ;
MPRINT(EM_DIAGRAM):   ;
370468     data WORK.SAVEDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3HXVX3W;
370469     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
370470     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3HXVX3W has 1 observations and 56
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370471     data EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_BESTDS;
370472     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
370473     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL_BESTDS has 1 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370474     data WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3HXVX3W;
370475     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370476     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3HXVX3W has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370477     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
370478     ;
MPRINT(EM_DIAGRAM):   ;
370479     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370480     set EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY;
370481     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
370482     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
370483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 1 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370484     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370485     ;
MPRINT(EM_DIAGRAM):   ;
370486     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370487     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370488     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370489     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
370490     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
370491     _step_ = "SINGLE LAYER 1";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 1";
370492     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
370493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370494     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370495     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
370496     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 2 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370497     *;
MPRINT(EM_DIAGRAM):    *;
370498     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
370499     validdata=EMWS1.Part2_VALIDATE
370500     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
370501     *;
MPRINT(EM_DIAGRAM):   *;
370502     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370503     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370504     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370505     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370506     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
370507     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
370508     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370509     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370510     ;
MPRINT(EM_DIAGRAM):   ;
370511     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370512     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
370513     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370514     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370515     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
370516     *;
MPRINT(EM_DIAGRAM):   *;
370517     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370518     *;
MPRINT(EM_DIAGRAM):   *;
370519     initial
370520     ;
MPRINT(EM_DIAGRAM):   initial ;
370521     *;
MPRINT(EM_DIAGRAM):   *;
370522     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370523     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370523   ! Search # 1 SINGLE LAYER trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 2 : TANH :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=8 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 100 variables.
MPRINT(EM_DIAGRAM):   *;
370524     prelim 8 outest=_anpre pretime=112 preiter=8
370525     tech = Default
370526     ;
370527     *;
370528     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370529     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370529   ! Search # 1 SINGLE LAYER trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 2 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=8 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 96 observations and 100 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370530     train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=8
MPRINT(EM_DIAGRAM):   run;
370531     tech = Default;
370532     ;
370533     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 175.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           14.60 seconds
      cpu time            14.43 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370534     *;
370535     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370536     var _iter_ _aic_ _averr_ _misc_
370537     _vaverr_ _vmisc_
370538     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 176.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370540     *------------------------------------------------------------*;
370541     * Extract best iteration;
370542     ;
370543     *------------------------------------------------------------*;
370544     %global _iter;
370545     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370546     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370547     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370548     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370549     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370550     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370551     end;
MPRINT(EM_DIAGRAM):   end;
370552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370553     *;
 
370554     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
370555     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370556     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
370557     output;
MPRINT(EM_DIAGRAM):   output;
370558     stop;
MPRINT(EM_DIAGRAM):   stop;
370559     end;
MPRINT(EM_DIAGRAM):   end;
370560     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 100 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370561     *;
370562     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370563     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370564     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
370565     output;
MPRINT(EM_DIAGRAM):   output;
370566     stop;
MPRINT(EM_DIAGRAM):   stop;
370567     end;
MPRINT(EM_DIAGRAM):   end;
370568     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370569     *;
MPRINT(EM_DIAGRAM):    *;
370570     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370571     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370571   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370572     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
370573     var _iter_ _aic_ _averr_ _misc_
370574     _vaverr_ _vmisc_
370575     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370576     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 177.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370577     title9;
MPRINT(EM_DIAGRAM):   title9;
370578     title10;
MPRINT(EM_DIAGRAM):   title10;
370579     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370580     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370581     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370582     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370583     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370584     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370585     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370587     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
370588     ;
MPRINT(EM_DIAGRAM):   ;
370589     data WORK.SAVEDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3HXVX3W;
370590     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
370591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3HXVX3W has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370592     data EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_BESTDS;
370593     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
370594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL_BESTDS has 1 observations and 100 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370595     data WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3HXVX3W;
370596     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3HXVX3W has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370598     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370599     ;
MPRINT(EM_DIAGRAM):   ;
370600     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370601     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370602     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370603     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
370604     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
370605     _step_ = "SINGLE LAYER 1";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 1";
370606     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
370607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370608     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370609     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
370610     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 3 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370611     *;
MPRINT(EM_DIAGRAM):    *;
370612     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
370613     validdata=EMWS1.Part2_VALIDATE
370614     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
370615     *;
MPRINT(EM_DIAGRAM):   *;
370616     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370617     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370618     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370619     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370620     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
370621     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
370622     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370623     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370624     ;
MPRINT(EM_DIAGRAM):   ;
370625     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370626     Hidden 2 / id = H1x1_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=GAUSS;
370627     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370628     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370629     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
370630     *;
MPRINT(EM_DIAGRAM):   *;
370631     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370632     *;
MPRINT(EM_DIAGRAM):   *;
370633     initial
370634     ;
MPRINT(EM_DIAGRAM):   initial ;
370635     *;
MPRINT(EM_DIAGRAM):   *;
370636     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370637     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370637   ! Search # 1 SINGLE LAYER trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 3 : NORMAL :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=8 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 100 variables.
MPRINT(EM_DIAGRAM):   *;
370638     prelim 8 outest=_anpre pretime=112 preiter=8
370639     tech = Default
370640     ;
370641     *;
370642     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370643     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370643   ! Search # 1 SINGLE LAYER trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 3 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=8 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 96 observations and 100 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370644     train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=8
MPRINT(EM_DIAGRAM):   run;
370645     tech = Default;
370646     ;
370647     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 178.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           14.53 seconds
      cpu time            14.39 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370648     *;
370649     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370650     var _iter_ _aic_ _averr_ _misc_
370651     _vaverr_ _vmisc_
370652     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370653     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 179.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370654     *------------------------------------------------------------*;
370655     * Extract best iteration;
370656     ;
370657     *------------------------------------------------------------*;
370658     %global _iter;
370659     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370660     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370661     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370662     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370663     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370664     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370665     end;
MPRINT(EM_DIAGRAM):   end;
370666     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370667     *;
 
370668     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
370669     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370670     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
370671     output;
MPRINT(EM_DIAGRAM):   output;
370672     stop;
MPRINT(EM_DIAGRAM):   stop;
370673     end;
MPRINT(EM_DIAGRAM):   end;
370674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 100 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370675     *;
370676     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370677     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370678     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
370679     output;
MPRINT(EM_DIAGRAM):   output;
370680     stop;
MPRINT(EM_DIAGRAM):   stop;
370681     end;
MPRINT(EM_DIAGRAM):   end;
370682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370683     *;
MPRINT(EM_DIAGRAM):    *;
370684     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370685     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370685   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370686     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
370687     var _iter_ _aic_ _averr_ _misc_
370688     _vaverr_ _vmisc_
370689     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370690     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 180.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370691     title9;
MPRINT(EM_DIAGRAM):   title9;
370692     title10;
MPRINT(EM_DIAGRAM):   title10;
370693     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370694     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370695     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370697     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370698     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370699     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370700     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370701     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370702     ;
MPRINT(EM_DIAGRAM):   ;
370703     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370704     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370705     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370706     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
370707     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
370708     _step_ = "SINGLE LAYER 1";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 1";
370709     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
370710     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370711     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370712     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
370713     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 4 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370714     *;
MPRINT(EM_DIAGRAM):    *;
370715     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
370716     validdata=EMWS1.Part2_VALIDATE
370717     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
370718     *;
MPRINT(EM_DIAGRAM):   *;
370719     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370720     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370721     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370722     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370723     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
370724     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
370725     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370726     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370727     ;
MPRINT(EM_DIAGRAM):   ;
370728     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370729     Hidden 2 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=SINE;
370730     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370731     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370732     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
370733     *;
MPRINT(EM_DIAGRAM):   *;
370734     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370735     *;
MPRINT(EM_DIAGRAM):   *;
370736     initial
370737     ;
MPRINT(EM_DIAGRAM):   initial ;
370738     *;
MPRINT(EM_DIAGRAM):   *;
370739     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370740     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370740   ! Search # 1 SINGLE LAYER trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 4 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=111 preiter=8 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 100 variables.
MPRINT(EM_DIAGRAM):   *;
370741     prelim 8 outest=_anpre pretime=111 preiter=8
370742     tech = Default
370743     ;
370744     *;
370745     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370746     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370746   ! Search # 1 SINGLE LAYER trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 SINGLE LAYER trial # 4 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=8 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 96 observations and 100 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370747     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=8
MPRINT(EM_DIAGRAM):   run;
370748     tech = Default;
370749     ;
370750     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 181.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           14.36 seconds
      cpu time            14.18 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370751     *;
370752     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370753     var _iter_ _aic_ _averr_ _misc_
370754     _vaverr_ _vmisc_
370755     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 182.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370757     *------------------------------------------------------------*;
370758     * Extract best iteration;
370759     ;
370760     *------------------------------------------------------------*;
370761     %global _iter;
370762     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370763     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370764     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370765     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370766     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370767     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370768     end;
MPRINT(EM_DIAGRAM):   end;
370769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370770     *;
 
370771     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
370772     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370773     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
370774     output;
MPRINT(EM_DIAGRAM):   output;
370775     stop;
MPRINT(EM_DIAGRAM):   stop;
370776     end;
MPRINT(EM_DIAGRAM):   end;
370777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 100 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370778     *;
370779     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370780     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370781     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
370782     output;
MPRINT(EM_DIAGRAM):   output;
370783     stop;
MPRINT(EM_DIAGRAM):   stop;
370784     end;
MPRINT(EM_DIAGRAM):   end;
370785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370786     *;
MPRINT(EM_DIAGRAM):    *;
370787     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370788     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370788   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370789     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
370790     var _iter_ _aic_ _averr_ _misc_
370791     _vaverr_ _vmisc_
370792     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 183.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370794     title9;
MPRINT(EM_DIAGRAM):   title9;
370795     title10;
MPRINT(EM_DIAGRAM):   title10;
370796     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370797     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370798     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370800     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370801     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370802     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370803     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370804     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370805     ;
MPRINT(EM_DIAGRAM):   ;
370806     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370807     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370808     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370809     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
370810     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
370811     _step_ = "SINGLE LAYER 1";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 1";
370812     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
370813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370814     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370815     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
370816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 5 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370817     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
370818     ;
MPRINT(EM_DIAGRAM):   ;
370819     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
370820     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
370821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 100 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370822     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370823     set WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3HXVX3W;
370824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3HXVX3W.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370825     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370826     ;
MPRINT(EM_DIAGRAM):   ;
370827     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370828     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370829     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370830     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
370831     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
370832     _step_ = "SINGLE LAYER 1";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 1";
370833     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
370834     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370835     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370836     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
370837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 6 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370838     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370839     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370840     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370842     *;
MPRINT(EM_DIAGRAM):    *;
370843     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
370844     validdata=EMWS1.Part2_VALIDATE
370845     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
370846     *;
MPRINT(EM_DIAGRAM):   *;
370847     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370848     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370849     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370850     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370851     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
370852     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
370853     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370854     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
370855     ;
MPRINT(EM_DIAGRAM):   ;
370856     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370857     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
370858     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
370859     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370860     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370861     ;
MPRINT(EM_DIAGRAM):   ;
370862     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370863     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
370864     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370865     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370866     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
370867     *;
MPRINT(EM_DIAGRAM):   *;
370868     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370869     *;
MPRINT(EM_DIAGRAM):   *;
370870     initial
370871     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 100 variables.
370872     ;
MPRINT(EM_DIAGRAM):   ;
370873     *;
MPRINT(EM_DIAGRAM):   *;
370874     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370875     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370875   ! Search # 2 SINGLE LAYER trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 1 : DIRECT :
Prelim";
370876     prelim 8 outest=_anpre pretime=111 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=111 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 140 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 100 variables.
MPRINT(EM_DIAGRAM):   *;
370877     tech = Default
370878     inest = EMWS1.AutoNeural_ESTDS bylabel
370879     ;
370880     *;
370881     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370882     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370882   ! Search # 2 SINGLE LAYER trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=888
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 140 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370883     train estiter=1 outest=_anest outfit=_anfit maxtime=888 maxiter=8
MPRINT(EM_DIAGRAM):   run;
370884     tech = Default;
370885     ;
370886     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 184.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.14 seconds
      cpu time            1.12 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370887     *;
370888     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370889     var _iter_ _aic_ _averr_ _misc_
370890     _vaverr_ _vmisc_
370891     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
The SAS System
 
NOTE: The PROCEDURE PRINT printed page 185.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370893     *------------------------------------------------------------*;
370894     * Extract best iteration;
370895     ;
370896     *------------------------------------------------------------*;
370897     %global _iter;
370898     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370899     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370900     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370901     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370902     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370903     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370904     end;
MPRINT(EM_DIAGRAM):   end;
370905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370906     *;
 
370907     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
370908     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370909     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
370910     output;
MPRINT(EM_DIAGRAM):   output;
370911     stop;
MPRINT(EM_DIAGRAM):   stop;
370912     end;
MPRINT(EM_DIAGRAM):   end;
370913     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370914     *;
370915     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370916     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370917     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
370918     output;
MPRINT(EM_DIAGRAM):   output;
370919     stop;
MPRINT(EM_DIAGRAM):   stop;
370920     end;
MPRINT(EM_DIAGRAM):   end;
370921     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370922     *;
MPRINT(EM_DIAGRAM):    *;
370923     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370924     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370924   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370925     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
370926     var _iter_ _aic_ _averr_ _misc_
370927     _vaverr_ _vmisc_
370928     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 186.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370930     title9;
MPRINT(EM_DIAGRAM):   title9;
370931     title10;
MPRINT(EM_DIAGRAM):   title10;
370932     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370933     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370934     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370936     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370937     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370938     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370940     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
370941     ;
MPRINT(EM_DIAGRAM):   ;
370942     data WORK.SAVEDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3HXVX3W;
370943     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
370944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3HXVX3W has 1 observations and 140
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370945     data EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_BESTDS;
370946     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
370947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL_BESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370948     data WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3HXVX3W;
370949     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3HXVX3W has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370951     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370952     ;
MPRINT(EM_DIAGRAM):   ;
370953     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
370954     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
370955     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370956     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
370957     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
370958     _step_ = "SINGLE LAYER 2";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 2";
370959     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
370960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370961     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
370962     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
370963     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 7 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370964     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
370965     ;
MPRINT(EM_DIAGRAM):   ;
370966     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
370967     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
370968     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370969     *;
MPRINT(EM_DIAGRAM):    *;
370970     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
370971     validdata=EMWS1.Part2_VALIDATE
370972     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
370973     *;
MPRINT(EM_DIAGRAM):   *;
370974     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370975     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370976     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370977     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370978     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
370979     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
370980     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370981     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370982     ;
MPRINT(EM_DIAGRAM):   ;
370983     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370984     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
370985     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370986     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370987     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
370988     Hidden 2 / id = H1x2_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=TANH;
370989     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
370990     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
370991     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
370992     *;
MPRINT(EM_DIAGRAM):   *;
370993     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370994     *;
MPRINT(EM_DIAGRAM):   *;
370995     initial
370996     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
370997     ;
MPRINT(EM_DIAGRAM):   ;
370998     *;
MPRINT(EM_DIAGRAM):   *;
370999     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371000     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371000   ! Search # 2 SINGLE LAYER trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 2 : TANH :
Prelim";
371001     prelim 8 outest=_anpre pretime=111 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=111 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 184 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
MPRINT(EM_DIAGRAM):   *;
371002     tech = Default
371003     inest = EMWS1.AutoNeural_ESTDS bylabel
371004     ;
371005     *;
371006     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371007     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371007   ! Search # 2 SINGLE LAYER trial # 2 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 2 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=888
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 184 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371008     train estiter=1 outest=_anest outfit=_anfit maxtime=888 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371009     tech = Default;
371010     ;
371011     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 187.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.46 seconds
      cpu time            5.40 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371012     *;
371013     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371014     var _iter_ _aic_ _averr_ _misc_
371015     _vaverr_ _vmisc_
371016     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371017     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 188.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371018     *------------------------------------------------------------*;
371019     * Extract best iteration;
371020     ;
371021     *------------------------------------------------------------*;
371022     %global _iter;
371023     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371024     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371025     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371026     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371027     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371028     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371029     end;
MPRINT(EM_DIAGRAM):   end;
371030     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371031     *;
 
371032     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371033     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371034     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
371035     output;
MPRINT(EM_DIAGRAM):   output;
371036     stop;
MPRINT(EM_DIAGRAM):   stop;
371037     end;
MPRINT(EM_DIAGRAM):   end;
371038     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 184 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371039     *;
371040     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371041     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371042     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
371043     output;
MPRINT(EM_DIAGRAM):   output;
371044     stop;
MPRINT(EM_DIAGRAM):   stop;
371045     end;
MPRINT(EM_DIAGRAM):   end;
371046     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371047     *;
MPRINT(EM_DIAGRAM):    *;
371048     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371049     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371049   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371050     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371051     var _iter_ _aic_ _averr_ _misc_
371052     _vaverr_ _vmisc_
371053     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371054     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 189.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371055     title9;
MPRINT(EM_DIAGRAM):   title9;
371056     title10;
MPRINT(EM_DIAGRAM):   title10;
371057     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371058     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371059     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371061     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371062     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371063     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371064     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371065     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371066     ;
MPRINT(EM_DIAGRAM):   ;
371067     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371068     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371069     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371070     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
371071     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371072     _step_ = "SINGLE LAYER 2";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 2";
371073     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
371074     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371075     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371076     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371077     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 8 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371078     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
371079     ;
MPRINT(EM_DIAGRAM):   ;
371080     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371081     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371082     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371083     *;
MPRINT(EM_DIAGRAM):    *;
371084     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371085     validdata=EMWS1.Part2_VALIDATE
371086     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371087     *;
MPRINT(EM_DIAGRAM):   *;
371088     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371089     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371090     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371091     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371092     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371093     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371094     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371095     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371096     ;
MPRINT(EM_DIAGRAM):   ;
371097     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371098     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371099     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371100     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371101     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371102     Hidden 2 / id = H1x2_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=GAUSS;
371103     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371104     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371105     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371106     *;
MPRINT(EM_DIAGRAM):   *;
371107     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371108     *;
MPRINT(EM_DIAGRAM):   *;
371109     initial
371110     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
371111     ;
MPRINT(EM_DIAGRAM):   ;
371112     *;
MPRINT(EM_DIAGRAM):   *;
371113     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371114     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371114   ! Search # 2 SINGLE LAYER trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 3 : NORMAL :
Prelim";
371115     prelim 8 outest=_anpre pretime=110 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=110 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 184 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
MPRINT(EM_DIAGRAM):   *;
371116     tech = Default
371117     inest = EMWS1.AutoNeural_ESTDS bylabel
371118     ;
371119     *;
371120     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371121     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371121   ! Search # 2 SINGLE LAYER trial # 3 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 3 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=886
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 184 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371122     train estiter=1 outest=_anest outfit=_anfit maxtime=886 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371123     tech = Default;
371124     ;
371125     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 190.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.53 seconds
      cpu time            5.45 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371126     *;
371127     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371128     var _iter_ _aic_ _averr_ _misc_
371129     _vaverr_ _vmisc_
371130     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371131     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 191.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371132     *------------------------------------------------------------*;
371133     * Extract best iteration;
371134     ;
371135     *------------------------------------------------------------*;
371136     %global _iter;
371137     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371138     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371139     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371140     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371141     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371142     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371143     end;
MPRINT(EM_DIAGRAM):   end;
371144     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371145     *;
 
371146     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371147     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371148     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
371149     output;
MPRINT(EM_DIAGRAM):   output;
371150     stop;
MPRINT(EM_DIAGRAM):   stop;
371151     end;
MPRINT(EM_DIAGRAM):   end;
371152     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 184 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371153     *;
371154     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371155     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371156     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
371157     output;
MPRINT(EM_DIAGRAM):   output;
371158     stop;
MPRINT(EM_DIAGRAM):   stop;
371159     end;
MPRINT(EM_DIAGRAM):   end;
371160     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371161     *;
MPRINT(EM_DIAGRAM):    *;
371162     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371163     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371163   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371164     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371165     var _iter_ _aic_ _averr_ _misc_
371166     _vaverr_ _vmisc_
371167     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 192.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371169     title9;
MPRINT(EM_DIAGRAM):   title9;
371170     title10;
MPRINT(EM_DIAGRAM):   title10;
371171     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371172     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371173     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371174     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371175     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371176     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371177     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371179     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371180     ;
MPRINT(EM_DIAGRAM):   ;
371181     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371182     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371183     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371184     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
371185     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371186     _step_ = "SINGLE LAYER 2";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 2";
371187     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
371188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371189     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371190     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371191     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 9 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371192     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
371193     ;
MPRINT(EM_DIAGRAM):   ;
371194     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371195     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371196     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371197     *;
MPRINT(EM_DIAGRAM):    *;
371198     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371199     validdata=EMWS1.Part2_VALIDATE
371200     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371201     *;
MPRINT(EM_DIAGRAM):   *;
371202     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371203     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371204     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371205     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371206     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371207     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371208     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371209     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371210     ;
MPRINT(EM_DIAGRAM):   ;
371211     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371212     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371213     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371214     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371215     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371216     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
371217     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371218     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371219     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371220     *;
MPRINT(EM_DIAGRAM):   *;
371221     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371222     *;
MPRINT(EM_DIAGRAM):   *;
371223     initial
371224     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
371225     ;
MPRINT(EM_DIAGRAM):   ;
371226     *;
MPRINT(EM_DIAGRAM):   *;
371227     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371228     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371228   ! Search # 2 SINGLE LAYER trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 4 : SINE :
Prelim";
371229     prelim 8 outest=_anpre pretime=110 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=110 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 184 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
MPRINT(EM_DIAGRAM):   *;
371230     tech = Default
371231     inest = EMWS1.AutoNeural_ESTDS bylabel
371232     ;
371233     *;
371234     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371235     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371235   ! Search # 2 SINGLE LAYER trial # 4 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 SINGLE LAYER trial # 4 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=885
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 184 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371236     train estiter=1 outest=_anest outfit=_anfit maxtime=885 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371237     tech = Default;
371238     ;
371239     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 193.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.71 seconds
      cpu time            5.67 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371240     *;
371241     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371242     var _iter_ _aic_ _averr_ _misc_
371243     _vaverr_ _vmisc_
371244     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 194.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371246     *------------------------------------------------------------*;
371247     * Extract best iteration;
371248     ;
371249     *------------------------------------------------------------*;
371250     %global _iter;
371251     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371252     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371253     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371254     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371255     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371256     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371257     end;
MPRINT(EM_DIAGRAM):   end;
371258     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371259     *;
 
371260     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371261     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371262     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
371263     output;
MPRINT(EM_DIAGRAM):   output;
371264     stop;
MPRINT(EM_DIAGRAM):   stop;
371265     end;
MPRINT(EM_DIAGRAM):   end;
371266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 184 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371267     *;
371268     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371269     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371270     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
371271     output;
MPRINT(EM_DIAGRAM):   output;
371272     stop;
MPRINT(EM_DIAGRAM):   stop;
371273     end;
MPRINT(EM_DIAGRAM):   end;
371274     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371275     *;
MPRINT(EM_DIAGRAM):    *;
371276     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371277     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371277   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371278     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371279     var _iter_ _aic_ _averr_ _misc_
371280     _vaverr_ _vmisc_
371281     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371282     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 195.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371283     title9;
MPRINT(EM_DIAGRAM):   title9;
371284     title10;
MPRINT(EM_DIAGRAM):   title10;
371285     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371286     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371287     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371288     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371289     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371290     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371291     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371293     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371294     ;
MPRINT(EM_DIAGRAM):   ;
371295     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371296     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371297     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371298     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
371299     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371300     _step_ = "SINGLE LAYER 2";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 2";
371301     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
371302     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371303     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371304     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371306     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
371307     ;
MPRINT(EM_DIAGRAM):   ;
371308     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371309     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371311     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371312     set WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3HXVX3W;
371313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3HXVX3W.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371314     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371315     ;
MPRINT(EM_DIAGRAM):   ;
371316     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371317     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371318     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371319     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
371320     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
371321     _step_ = "SINGLE LAYER 2";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 2";
371322     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
371323     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371324     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371325     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371326     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371327     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371328     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371329     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371330     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371331     *;
MPRINT(EM_DIAGRAM):    *;
371332     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371333     validdata=EMWS1.Part2_VALIDATE
371334     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371335     *;
MPRINT(EM_DIAGRAM):   *;
371336     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371337     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371338     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371339     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371340     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371341     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371342     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371343     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
371344     ;
MPRINT(EM_DIAGRAM):   ;
371345     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371346     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
371347     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
371348     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371349     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371350     ;
MPRINT(EM_DIAGRAM):   ;
371351     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371352     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371353     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371354     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371355     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371356     Hidden 2 / id = H1x2_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=TANH;
371357     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371358     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371359     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371360     *;
MPRINT(EM_DIAGRAM):   *;
371361     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371362     *;
MPRINT(EM_DIAGRAM):   *;
371363     initial
371364     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
371365     ;
MPRINT(EM_DIAGRAM):   ;
371366     *;
MPRINT(EM_DIAGRAM):   *;
371367     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371368     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371368   ! Search # 3 SINGLE LAYER trial # 1 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 SINGLE LAYER trial # 1 : TANH :
Prelim";
371369     prelim 8 outest=_anpre pretime=110 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=110 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 224 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
MPRINT(EM_DIAGRAM):   *;
371370     tech = Default
371371     inest = EMWS1.AutoNeural_ESTDS bylabel
371372     ;
371373     *;
371374     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371375     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371375   ! Search # 3 SINGLE LAYER trial # 1 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 SINGLE LAYER trial # 1 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 224 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371376     train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371377     tech = Default;
371378     ;
371379     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 196.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.31 seconds
      cpu time            5.26 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371380     *;
371381     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371382     var _iter_ _aic_ _averr_ _misc_
371383     _vaverr_ _vmisc_
371384     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371385     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 197.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371386     *------------------------------------------------------------*;
371387     * Extract best iteration;
371388     ;
371389     *------------------------------------------------------------*;
371390     %global _iter;
371391     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371392     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371393     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371394     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371395     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371396     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371397     end;
MPRINT(EM_DIAGRAM):   end;
371398     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371399     *;
 
371400     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371401     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371402     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
371403     output;
MPRINT(EM_DIAGRAM):   output;
371404     stop;
MPRINT(EM_DIAGRAM):   stop;
371405     end;
MPRINT(EM_DIAGRAM):   end;
371406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371407     *;
371408     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371409     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371410     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
371411     output;
MPRINT(EM_DIAGRAM):   output;
371412     stop;
MPRINT(EM_DIAGRAM):   stop;
371413     end;
MPRINT(EM_DIAGRAM):   end;
371414     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371415     *;
MPRINT(EM_DIAGRAM):    *;
371416     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371417     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371417   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371418     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371419     var _iter_ _aic_ _averr_ _misc_
371420     _vaverr_ _vmisc_
371421     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371422     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 198.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371423     title9;
MPRINT(EM_DIAGRAM):   title9;
371424     title10;
MPRINT(EM_DIAGRAM):   title10;
371425     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371426     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371427     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371428     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371429     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371430     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371431     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371433     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371434     ;
MPRINT(EM_DIAGRAM):   ;
371435     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371436     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371437     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371438     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
371439     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371440     _step_ = "SINGLE LAYER 3";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 3";
371441     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
371442     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371443     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371444     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371445     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371446     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
371447     ;
MPRINT(EM_DIAGRAM):   ;
371448     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371449     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371450     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371451     *;
MPRINT(EM_DIAGRAM):    *;
371452     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371453     validdata=EMWS1.Part2_VALIDATE
371454     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371455     *;
MPRINT(EM_DIAGRAM):   *;
371456     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371457     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371458     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371459     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371460     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371461     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371462     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371463     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
371464     ;
MPRINT(EM_DIAGRAM):   ;
371465     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371466     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
371467     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
371468     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371469     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371470     ;
MPRINT(EM_DIAGRAM):   ;
371471     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371472     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371473     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371474     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371475     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371476     Hidden 2 / id = H1x2_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=GAUSS;
371477     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371478     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371479     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371480     *;
MPRINT(EM_DIAGRAM):   *;
371481     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371482     *;
MPRINT(EM_DIAGRAM):   *;
371483     initial
371484     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
371485     ;
MPRINT(EM_DIAGRAM):   ;
371486     *;
MPRINT(EM_DIAGRAM):   *;
371487     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371488     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371488   ! Search # 3 SINGLE LAYER trial # 2 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 SINGLE LAYER trial # 2 : NORMAL :
Prelim";
371489     prelim 8 outest=_anpre pretime=110 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=110 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 224 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
MPRINT(EM_DIAGRAM):   *;
371490     tech = Default
371491     inest = EMWS1.AutoNeural_ESTDS bylabel
371492     ;
371493     *;
371494     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371495     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371495   ! Search # 3 SINGLE LAYER trial # 2 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 SINGLE LAYER trial # 2 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 224 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371496     train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371497     tech = Default;
371498     ;
371499     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 199.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.00 seconds
      cpu time            4.92 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371500     *;
371501     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371502     var _iter_ _aic_ _averr_ _misc_
371503     _vaverr_ _vmisc_
371504     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371505     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 200.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371506     *------------------------------------------------------------*;
371507     * Extract best iteration;
371508     ;
371509     *------------------------------------------------------------*;
371510     %global _iter;
371511     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371512     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371513     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371514     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371515     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371516     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371517     end;
MPRINT(EM_DIAGRAM):   end;
371518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371519     *;
 
371520     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371521     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371522     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
371523     output;
MPRINT(EM_DIAGRAM):   output;
371524     stop;
MPRINT(EM_DIAGRAM):   stop;
371525     end;
MPRINT(EM_DIAGRAM):   end;
371526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371527     *;
371528     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371529     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371530     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
371531     output;
MPRINT(EM_DIAGRAM):   output;
371532     stop;
MPRINT(EM_DIAGRAM):   stop;
371533     end;
MPRINT(EM_DIAGRAM):   end;
371534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371535     *;
MPRINT(EM_DIAGRAM):    *;
371536     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371537     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371537   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371538     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371539     var _iter_ _aic_ _averr_ _misc_
371540     _vaverr_ _vmisc_
371541     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 201.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371543     title9;
MPRINT(EM_DIAGRAM):   title9;
371544     title10;
MPRINT(EM_DIAGRAM):   title10;
371545     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371546     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371547     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371548     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
371549     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371550     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371551     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371553     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371554     ;
MPRINT(EM_DIAGRAM):   ;
371555     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371556     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371557     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371558     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
371559     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371560     _step_ = "SINGLE LAYER 3";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 3";
371561     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
371562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371563     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371564     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371566     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
371567     ;
MPRINT(EM_DIAGRAM):   ;
371568     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371569     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371570     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371571     *;
MPRINT(EM_DIAGRAM):    *;
371572     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371573     validdata=EMWS1.Part2_VALIDATE
371574     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371575     *;
MPRINT(EM_DIAGRAM):   *;
371576     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371577     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371578     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371579     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371580     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371581     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371582     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371583     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
371584     ;
MPRINT(EM_DIAGRAM):   ;
371585     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371586     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
371587     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
371588     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371589     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371590     ;
MPRINT(EM_DIAGRAM):   ;
371591     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371592     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371593     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371594     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371595     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371596     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
371597     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371598     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371599     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371600     *;
MPRINT(EM_DIAGRAM):   *;
371601     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371602     *;
MPRINT(EM_DIAGRAM):   *;
371603     initial
371604     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
371605     ;
MPRINT(EM_DIAGRAM):   ;
371606     *;
MPRINT(EM_DIAGRAM):   *;
371607     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371608     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371608   ! Search # 3 SINGLE LAYER trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 SINGLE LAYER trial # 3 : SINE :
Prelim";
371609     prelim 8 outest=_anpre pretime=110 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=110 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 224 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 140 variables.
MPRINT(EM_DIAGRAM):   *;
371610     tech = Default
371611     inest = EMWS1.AutoNeural_ESTDS bylabel
371612     ;
371613     *;
371614     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371615     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371615   ! Search # 3 SINGLE LAYER trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 SINGLE LAYER trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=880
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 224 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371616     train estiter=1 outest=_anest outfit=_anfit maxtime=880 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371617     tech = Default;
371618     ;
371619     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 202.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           4.88 seconds
      cpu time            4.84 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371620     *;
371621     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371622     var _iter_ _aic_ _averr_ _misc_
371623     _vaverr_ _vmisc_
371624     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 203.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371626     *------------------------------------------------------------*;
371627     * Extract best iteration;
371628     ;
371629     *------------------------------------------------------------*;
371630     %global _iter;
371631     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371632     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371633     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371634     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371635     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371636     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371637     end;
MPRINT(EM_DIAGRAM):   end;
371638     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371639     *;
 
371640     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371641     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371642     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
371643     output;
MPRINT(EM_DIAGRAM):   output;
371644     stop;
MPRINT(EM_DIAGRAM):   stop;
371645     end;
MPRINT(EM_DIAGRAM):   end;
371646     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371647     *;
371648     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371649     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371650     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
371651     output;
MPRINT(EM_DIAGRAM):   output;
371652     stop;
MPRINT(EM_DIAGRAM):   stop;
371653     end;
MPRINT(EM_DIAGRAM):   end;
371654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371655     *;
MPRINT(EM_DIAGRAM):    *;
371656     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371657     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371657   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371658     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371659     var _iter_ _aic_ _averr_ _misc_
371660     _vaverr_ _vmisc_
371661     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 204.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371663     title9;
MPRINT(EM_DIAGRAM):   title9;
371664     title10;
MPRINT(EM_DIAGRAM):   title10;
371665     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371666     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371667     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371669     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371670     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371671     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371673     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
371674     ;
MPRINT(EM_DIAGRAM):   ;
371675     data WORK.SAVEDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3HXVX3W;
371676     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
371677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3HXVX3W has 1 observations and 224
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371678     data EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_BESTDS;
371679     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
371680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set EMWS1.AUTONEURAL_BESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371681     data WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3HXVX3W;
371682     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371683     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3HXVX3W has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371684     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371685     ;
MPRINT(EM_DIAGRAM):   ;
371686     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371687     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371688     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371689     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
371690     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
371691     _step_ = "SINGLE LAYER 3";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 3";
371692     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
371693     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371694     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371695     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371697     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
371698     ;
MPRINT(EM_DIAGRAM):   ;
371699     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371700     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371702     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371703     set WORK.BFITDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3HXVX3W;
371704     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3HXVX3W.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371705     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371706     ;
MPRINT(EM_DIAGRAM):   ;
371707     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371708     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371709     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371710     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
371711     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
371712     _step_ = "SINGLE LAYER 3";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 3";
371713     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
371714     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371715     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371716     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371717     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371718     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371719     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371720     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371722     *;
MPRINT(EM_DIAGRAM):    *;
371723     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371724     validdata=EMWS1.Part2_VALIDATE
371725     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371726     *;
MPRINT(EM_DIAGRAM):   *;
371727     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371728     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371729     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371730     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371731     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371732     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371733     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371734     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
371735     ;
MPRINT(EM_DIAGRAM):   ;
371736     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371737     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
371738     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
371739     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371740     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371741     ;
MPRINT(EM_DIAGRAM):   ;
371742     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371743     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371744     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371745     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371746     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371747     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
371748     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371749     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371750     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371751     Hidden 2 / id = H1x3_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x3_ act=TANH;
371752     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
371753     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
371754     connect H1x3_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x3_ Attrition_Flag;
371755     *;
MPRINT(EM_DIAGRAM):   *;
371756     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371757     *;
MPRINT(EM_DIAGRAM):   *;
371758     initial
371759     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
371760     ;
MPRINT(EM_DIAGRAM):   ;
371761     *;
MPRINT(EM_DIAGRAM):   *;
371762     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371763     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371763   ! Search # 4 SINGLE LAYER trial # 1 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 SINGLE LAYER trial # 1 : TANH :
Prelim";
371764     prelim 8 outest=_anpre pretime=109 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=109 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 308 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
MPRINT(EM_DIAGRAM):   *;
371765     tech = Default
371766     inest = EMWS1.AutoNeural_ESTDS bylabel
371767     ;
371768     *;
371769     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371770     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371770   ! Search # 4 SINGLE LAYER trial # 1 : TANH : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 SINGLE LAYER trial # 1 : TANH :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=879
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 308 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371771     train estiter=1 outest=_anest outfit=_anfit maxtime=879 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371772     tech = Default;
371773     ;
371774     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 205.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           7.05 seconds
      cpu time            7.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371775     *;
371776     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371777     var _iter_ _aic_ _averr_ _misc_
371778     _vaverr_ _vmisc_
371779     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 206.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371781     *------------------------------------------------------------*;
371782     * Extract best iteration;
371783     ;
371784     *------------------------------------------------------------*;
371785     %global _iter;
371786     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371787     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371788     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371789     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371790     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371791     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371792     end;
MPRINT(EM_DIAGRAM):   end;
371793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371794     *;
 
371795     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371796     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371797     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
371798     output;
MPRINT(EM_DIAGRAM):   output;
371799     stop;
MPRINT(EM_DIAGRAM):   stop;
371800     end;
MPRINT(EM_DIAGRAM):   end;
371801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 308 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371802     *;
371803     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371804     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371805     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
371806     output;
MPRINT(EM_DIAGRAM):   output;
371807     stop;
MPRINT(EM_DIAGRAM):   stop;
371808     end;
MPRINT(EM_DIAGRAM):   end;
371809     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371810     *;
MPRINT(EM_DIAGRAM):    *;
371811     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371812     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371812   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371813     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371814     var _iter_ _aic_ _averr_ _misc_
371815     _vaverr_ _vmisc_
371816     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371817     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 207.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371818     title9;
MPRINT(EM_DIAGRAM):   title9;
371819     title10;
MPRINT(EM_DIAGRAM):   title10;
371820     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371821     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371822     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371824     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371825     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371826     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371828     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371829     ;
MPRINT(EM_DIAGRAM):   ;
371830     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371831     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371832     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371833     _func_ = "TANH";
MPRINT(EM_DIAGRAM):   _func_ = "TANH";
371834     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371835     _step_ = "SINGLE LAYER 4";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 4";
371836     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
371837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371838     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371839     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371840     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371841     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
371842     ;
MPRINT(EM_DIAGRAM):   ;
371843     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371844     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371845     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371846     *;
MPRINT(EM_DIAGRAM):    *;
371847     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371848     validdata=EMWS1.Part2_VALIDATE
371849     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371850     *;
MPRINT(EM_DIAGRAM):   *;
371851     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371852     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371853     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371854     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371855     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371856     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371857     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371858     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
371859     ;
MPRINT(EM_DIAGRAM):   ;
371860     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371861     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
371862     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
371863     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371864     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371865     ;
MPRINT(EM_DIAGRAM):   ;
371866     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371867     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371868     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371869     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371870     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371871     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
371872     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371873     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371874     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371875     Hidden 2 / id = H1x3_ act=GAUSS;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x3_ act=GAUSS;
371876     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
371877     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
371878     connect H1x3_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x3_ Attrition_Flag;
371879     *;
MPRINT(EM_DIAGRAM):   *;
371880     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
371881     *;
MPRINT(EM_DIAGRAM):   *;
371882     initial
371883     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
371884     ;
MPRINT(EM_DIAGRAM):   ;
371885     *;
MPRINT(EM_DIAGRAM):   *;
371886     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371887     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
371887   ! Search # 4 SINGLE LAYER trial # 2 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 SINGLE LAYER trial # 2 : NORMAL :
Prelim";
371888     prelim 8 outest=_anpre pretime=109 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=109 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 308 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
MPRINT(EM_DIAGRAM):   *;
371889     tech = Default
371890     inest = EMWS1.AutoNeural_ESTDS bylabel
371891     ;
371892     *;
371893     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371894     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
371894   ! Search # 4 SINGLE LAYER trial # 2 : NORMAL : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 SINGLE LAYER trial # 2 : NORMAL :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=877
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 308 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
371895     train estiter=1 outest=_anest outfit=_anfit maxtime=877 maxiter=8
MPRINT(EM_DIAGRAM):   run;
371896     tech = Default;
371897     ;
371898     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 208.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.81 seconds
      cpu time            6.71 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371899     *;
371900     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
371901     var _iter_ _aic_ _averr_ _misc_
371902     _vaverr_ _vmisc_
371903     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371904     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 209.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371905     *------------------------------------------------------------*;
371906     * Extract best iteration;
371907     ;
371908     *------------------------------------------------------------*;
371909     %global _iter;
371910     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
371911     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
371912     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
371913     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
371914     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
371915     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
371916     end;
MPRINT(EM_DIAGRAM):   end;
371917     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371918     *;
 
371919     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
371920     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
371921     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
371922     output;
MPRINT(EM_DIAGRAM):   output;
371923     stop;
MPRINT(EM_DIAGRAM):   stop;
371924     end;
MPRINT(EM_DIAGRAM):   end;
371925     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 308 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
371926     *;
371927     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371928     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
371929     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
371930     output;
MPRINT(EM_DIAGRAM):   output;
371931     stop;
MPRINT(EM_DIAGRAM):   stop;
371932     end;
MPRINT(EM_DIAGRAM):   end;
371933     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371934     *;
MPRINT(EM_DIAGRAM):    *;
371935     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
371936     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
371936   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
371937     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
371938     var _iter_ _aic_ _averr_ _misc_
371939     _vaverr_ _vmisc_
371940     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
371941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 210.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371942     title9;
MPRINT(EM_DIAGRAM):   title9;
371943     title10;
MPRINT(EM_DIAGRAM):   title10;
371944     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371945     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371946     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371948     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
371949     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371950     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
371951     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371952     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
371953     ;
MPRINT(EM_DIAGRAM):   ;
371954     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
371955     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
371956     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
371957     _func_ = "NORMAL";
MPRINT(EM_DIAGRAM):   _func_ = "NORMAL";
371958     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
371959     _step_ = "SINGLE LAYER 4";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 4";
371960     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
371961     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371962     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
371963     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
371964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371965     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
371966     ;
MPRINT(EM_DIAGRAM):   ;
371967     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_ESTDS;
371968     set EMWS1.AutoNeural_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_BESTDS;
371969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_BESTDS.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
371970     *;
MPRINT(EM_DIAGRAM):    *;
371971     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
371972     validdata=EMWS1.Part2_VALIDATE
371973     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
371974     *;
MPRINT(EM_DIAGRAM):   *;
371975     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
371976     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
371977     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
371978     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
371979     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
371980     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
371981     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371982     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
371983     ;
MPRINT(EM_DIAGRAM):   ;
371984     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371985     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
371986     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
371987     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371988     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
371989     ;
MPRINT(EM_DIAGRAM):   ;
371990     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
371991     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
371992     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
371993     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
371994     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
371995     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
371996     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
371997     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
371998     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
371999     Hidden 2 / id = H1x3_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x3_ act=SINE;
372000     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
372001     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
372002     connect H1x3_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x3_ Attrition_Flag;
372003     *;
MPRINT(EM_DIAGRAM):   *;
372004     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
372005     *;
MPRINT(EM_DIAGRAM):   *;
372006     initial
372007     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
372008     ;
MPRINT(EM_DIAGRAM):   ;
372009     *;
MPRINT(EM_DIAGRAM):   *;
372010     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
372011     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
372011   ! Search # 4 SINGLE LAYER trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 SINGLE LAYER trial # 3 : SINE :
Prelim";
372012     prelim 8 outest=_anpre pretime=109 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=109 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 308 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
MPRINT(EM_DIAGRAM):   *;
372013     tech = Default
372014     inest = EMWS1.AutoNeural_ESTDS bylabel
372015     ;
372016     *;
372017     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
372018     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
372018   ! Search # 4 SINGLE LAYER trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 SINGLE LAYER trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=875
maxiter=8 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 11 observations and 308 variables.
NOTE: The data set WORK._ANFIT has 20 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
372019     train estiter=1 outest=_anest outfit=_anfit maxtime=875 maxiter=8
MPRINT(EM_DIAGRAM):   run;
372020     tech = Default;
372021     ;
372022     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 211.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.85 seconds
      cpu time            6.76 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
372023     *;
372024     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
372025     var _iter_ _aic_ _averr_ _misc_
372026     _vaverr_ _vmisc_
372027     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
372028     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 212.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372029     *------------------------------------------------------------*;
372030     * Extract best iteration;
372031     ;
372032     *------------------------------------------------------------*;
372033     %global _iter;
372034     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
372035     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
372036     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
372037     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
372038     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
372039     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
372040     end;
MPRINT(EM_DIAGRAM):   end;
372041     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
372042     *;
 
372043     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
372044     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
372045     if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
372046     output;
MPRINT(EM_DIAGRAM):   output;
372047     stop;
MPRINT(EM_DIAGRAM):   stop;
372048     end;
MPRINT(EM_DIAGRAM):   end;
372049     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 308 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
372050     *;
372051     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
372052     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
372053     if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
372054     output;
MPRINT(EM_DIAGRAM):   output;
372055     stop;
MPRINT(EM_DIAGRAM):   stop;
372056     end;
MPRINT(EM_DIAGRAM):   end;
372057     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
372058     *;
MPRINT(EM_DIAGRAM):    *;
372059     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
372060     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
372060   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
372061     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
372062     var _iter_ _aic_ _averr_ _misc_
372063     _vaverr_ _vmisc_
372064     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
372065     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 213.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372066     title9;
MPRINT(EM_DIAGRAM):   title9;
372067     title10;
MPRINT(EM_DIAGRAM):   title10;
372068     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
372069     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
372070     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
372071     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372072     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
372073     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
372074     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
372075     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372076     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
372077     ;
MPRINT(EM_DIAGRAM):   ;
372078     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
372079     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
372080     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
372081     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
372082     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
372083     _step_ = "SINGLE LAYER 4";
MPRINT(EM_DIAGRAM):   _step_ = "SINGLE LAYER 4";
372084     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
372085     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372086     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
372087     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
372088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372089     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
372090     set WORK.SAVEDS_AUTONEUR_3HXVX3W;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_3HXVX3W;
372091     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_3HXVX3W.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372092     *;
MPRINT(EM_DIAGRAM):    *;
372093     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
372094     validdata=EMWS1.Part2_VALIDATE
372095     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
372096     *;
MPRINT(EM_DIAGRAM):   *;
372097     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
372098     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
372099     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
372100     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
372101     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
372102     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
372103     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372104     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
372105     ;
MPRINT(EM_DIAGRAM):   ;
372106     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372107     connect interval Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect interval Attrition_Flag;
372108     connect nominal Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect nominal Attrition_Flag;
372109     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372110     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
372111     ;
MPRINT(EM_DIAGRAM):   ;
372112     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372113     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
372114     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
372115     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
372116     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
372117     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
372118     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
372119     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
372120     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
372121     *;
MPRINT(EM_DIAGRAM):   *;
372122     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
372123     *;
MPRINT(EM_DIAGRAM):   *;
372124     initial
372125     inest = EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
372126     ;
MPRINT(EM_DIAGRAM):   ;
372127     *;
MPRINT(EM_DIAGRAM):   *;
372128     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
372129     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
372129   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
372130     prelim 8 outest=_anpre pretime=109 preiter=8
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=109 preiter=8 tech =
Default inest = EMWS1.AutoNeural_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 8 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 224 variables.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
MPRINT(EM_DIAGRAM):   *;
372131     tech = Default
372132     inest = EMWS1.AutoNeural_ESTDS bylabel
372133     ;
372134     *;
372135     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
372136     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
372136   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=874
maxiter=5 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 224 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
372137     train estiter=1 outest=_anest outfit=_anfit maxtime=874 maxiter=5
MPRINT(EM_DIAGRAM):   run;
372138     tech = Default;
372139     ;
372140     run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 214.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.33 seconds
      cpu time            1.32 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
372141     *;
372142     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
372143     var _iter_ _aic_ _averr_ _misc_
372144     _vaverr_ _vmisc_
372145     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
372146     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 215.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372147     *------------------------------------------------------------*;
372148     * Extract best iteration;
372149     ;
372150     *------------------------------------------------------------*;
372151     %global _iter;
372152     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
372153     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
372154     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
372155     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
372156     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
372157     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
372158     end;
MPRINT(EM_DIAGRAM):   end;
372159     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
372160     *;
 
372161     data EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_ESTDS;
372162     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
372163     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
372164     output;
MPRINT(EM_DIAGRAM):   output;
372165     stop;
MPRINT(EM_DIAGRAM):   stop;
372166     end;
MPRINT(EM_DIAGRAM):   end;
372167     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
372168     *;
372169     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
372170     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
372171     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
372172     output;
MPRINT(EM_DIAGRAM):   output;
372173     stop;
MPRINT(EM_DIAGRAM):   stop;
372174     end;
MPRINT(EM_DIAGRAM):   end;
372175     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372176     *;
MPRINT(EM_DIAGRAM):    *;
372177     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
372178     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
372178   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
372179     proc print data=EMWS1.AutoNeural_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_OUTFIT noobs;
372180     var _iter_ _aic_ _averr_ _misc_
372181     _vaverr_ _vmisc_
372182     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
372183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 216.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372184     title9;
MPRINT(EM_DIAGRAM):   title9;
372185     title10;
MPRINT(EM_DIAGRAM):   title10;
372186     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
372187     ;
MPRINT(EM_DIAGRAM):   ;
372188     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
372189     set EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT;
372190     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
372191     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
372192     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
372193     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
372194     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
372195     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372196     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_HISTORY;
372197     set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY EMWS1.AutoNeural_OUTFIT;
372198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372199     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
372200     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
372200   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
372201     proc print data=EMWS1.AutoNeural_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_HISTORY noobs;
372202     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
372203     _vaverr_ _vmisc_
372204     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
372205     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: The PROCEDURE PRINT printed page 217.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372206     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
372207     set EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY;
372208     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
372209     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
372210     else neurons=2;
MPRINT(EM_DIAGRAM):   else neurons=2;
372211     label neurons="%sysfunc(sasmsg(sashelp.dmine,
372211   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
372212     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS1.AUTONEURAL_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 3 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372213     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
372214     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
372214   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
372215     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
372215   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
372215   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
372216     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
372217     var _func_ _averr_
372218     _vaverr_
372219     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
372220     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
372221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 218.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372222     title8;
MPRINT(EM_DIAGRAM):   title8;
372223     title9;
MPRINT(EM_DIAGRAM):   title9;
372224     title10;
MPRINT(EM_DIAGRAM):   title10;
372225     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372226     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
372227     ;
MPRINT(EM_DIAGRAM):   ;
372228     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372229     *;
MPRINT(EM_DIAGRAM):   *;
372230     proc neural data=EM_AutoNeural dmdbcat=WORK.AutoNeural_DMDB
372231     validdata=EMWS1.Part2_VALIDATE
372232     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural
dmdbcat=WORK.AutoNeural_DMDB validdata=EMWS1.Part2_VALIDATE ;
372233     *;
MPRINT(EM_DIAGRAM):   *;
372234     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
372235     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
372236     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   RANGE_LOG_Total_Trans_Amt RANGE_SQRT_Avg_Utilization_Ratio
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 RANGE_SQRT_Total_Ct_Chng_Q4_Q1
RANGE_Total_Revolving_Bal
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
372237     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Contacts_Count_12_mon G_Customer_Age
G_Months_Inactive_12_mon G_Months_on_book G_Total_Relationship_Count
G_Total_Trans_Ct
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
372238     target Attrition_Flag / level=NOMINAL id=Attrition_Flag
372239     ;
MPRINT(EM_DIAGRAM):   target Attrition_Flag / level=NOMINAL id=Attrition_Flag ;
372240     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372241     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
372242     ;
MPRINT(EM_DIAGRAM):   ;
372243     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372244     Hidden 2 / id = H1x1_ act=TANH;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=TANH;
372245     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
372246     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
372247     connect H1x1_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x1_ Attrition_Flag;
372248     Hidden 2 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=SINE;
372249     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
372250     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
372251     connect H1x2_ Attrition_Flag;
MPRINT(EM_DIAGRAM):   connect H1x2_ Attrition_Flag;
372252     *;
MPRINT(EM_DIAGRAM):   *;
372253     initial inest= EMWS1.AutoNeural_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS1.AutoNeural_ESTDS bylabel;
NOTE: The data set EMWS1.AUTONEURAL_ESTDS has 1 observations and 224 variables.
372254     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
372255     code
372255   ! file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural
372255   ! \SCORECODE.sas"
372256     group=AutoNeural
372257     ;
MPRINT(EM_DIAGRAM):   code
file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\SCORECODE.
sas" group=AutoNeural ;
NOTE: External file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\SCORECODE.
      sas opened.
372258     ;
MPRINT(EM_DIAGRAM):   ;
372259     code
372259   ! file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural
372259   ! \RESIDUALSCORECODE.sas"
372260     group=AutoNeural
372261     residual
372262     ;
MPRINT(EM_DIAGRAM):   code
file="D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\RESIDUALSC
ORECODE.sas" group=AutoNeural residual ;
NOTE: External file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\RESIDUALSC
      ORECODE.sas opened.
372263     ;
MPRINT(EM_DIAGRAM):   ;
372264     score data=EMWS1.Part2_TRAIN out=_NULL_
372265     outfit=WORK.FIT1
372266     role=TRAIN
372267     outkey=EMWS1.AutoNeural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Part2_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS1.AutoNeural_OUTKEY;
NOTE: The data set EMWS1.AUTONEURAL_OUTKEY has 56 observations and 8 variables.
NOTE: The data set EMWS1.PART2_TRAIN has 7088 observations and 37 variables.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
372268     score data=EMWS1.Part2_VALIDATE out=_NULL_
372269     outfit=WORK.FIT2
372270     outkey=EMWS1.AutoNeural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Part2_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS1.AutoNeural_OUTKEY;
NOTE: The data set EMWS1.AUTONEURAL_OUTKEY has 56 observations and 8 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
372271     score data=EMWS1.Part2_TEST out=_NULL_
372272     outfit=WORK.FIT3
372273     role=TEST
372274     outkey=EMWS1.AutoNeural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Part2_TEST out=_NULL_ outfit=WORK.FIT3
role=TEST outkey=EMWS1.AutoNeural_OUTKEY;
NOTE: The data set EMWS1.AUTONEURAL_OUTKEY has 56 observations and 8 variables.
NOTE: The data set EMWS1.PART2_TEST has 1014 observations and 37 variables.
NOTE: The data set WORK.FIT3 has 2 observations and 17 variables.
372275     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL has 7088 observations and 12 variables.
NOTE: The data set EMWS1.PART2_VALIDATE has 2025 observations and 37 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
 
372276     data EMWS1.AutoNeural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_OUTFIT;
372277     merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
372278     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: There were 2 observations read from the data set WORK.FIT3.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 2 observations and 51 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372279     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372280     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
372281     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
372282     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
372282   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
372283     set EMWS1.AutoNeural_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_ESTDS;
372284     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 216 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
372285     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
372286     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
372287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 216 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372288     proc transpose data=tempweight out=EMWS1.AutoNeural_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS1.AutoNeural_WEIGHTS;
372289     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
372290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS1.AUTONEURAL_WEIGHTS has 214 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
372291     data EMWS1.AutoNeural_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_WEIGHTS;
372292     set EMWS1.AutoNeural_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_WEIGHTS;
372293     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
372294     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
372295     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
372296     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
372297     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
372297   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
372297   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
372297   ! NOQUOTE))" WEIGHT =
372298        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
372299     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
372300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 214 observations read from the data set
      EMWS1.AUTONEURAL_WEIGHTS.
NOTE: The data set EMWS1.AUTONEURAL_WEIGHTS has 209 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
372301     * restore printing options;
372302     ;
372303     title10;
MPRINT(EM_DIAGRAM):   title10;
372304     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
372305     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
372306     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
372307     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
372308     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
372309     *;
372310     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
372311     delete EM_AutoNeural;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural;
372312     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL (memtype=DATA).
372313     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
372314     data EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_HISTORY;
372315     set EMWS1.AutoNeural_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_HISTORY;
372316     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
372317     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
372317   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
372318     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
372319     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.AUTONEURAL_HISTORY.
NOTE: The data set EMWS1.AUTONEURAL_HISTORY has 19 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:14:25" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 09, 2022
Time:                15:14:25
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3X6M83N
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3X6M83N new;
MPRINT(EM_DIAGRAM):   run;
372421     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
372422     set EMWS1.AutoNeural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTKEY;
372423     if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
372424     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set EMWS1.AUTONEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
372425     filename emflow
372425   ! "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372426     *------------------------------------------------------------*;
372427     * AutoNeural: Scoring DATA data;
372428     *------------------------------------------------------------*;
372429     data EMWS1.AutoNeural_TRAIN
372430     / view=EMWS1.AutoNeural_TRAIN
372431     ;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_TRAIN / view=EMWS1.AutoNeural_TRAIN ;
372432     set EMWS1.Part2_TRAIN
372433     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN ;
372434     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas.
372435    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
372436    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
372437    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
372438    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
372439    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
372440    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
372441    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
372442    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
372443    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
372444    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
372445    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
372446    +LENGTH _WARN_ $4
372447    +      F_Attrition_Flag  $ 17
372448    +      I_Attrition_Flag  $ 17
372449    +      U_Attrition_Flag  $ 17
372450    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Attrition_Flag $ 17 I_Attrition_Flag $ 17
U_Attrition_Flag $ 17 ;
372451    +      label S_RANGE_LOG_Total_Trans_Amt =
372452    +'Standard: RANGE_LOG_Total_Trans_Amt' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_LOG_Total_Trans_Amt = 'Standard:
RANGE_LOG_Total_Trans_Amt' ;
372453    +
372454    +      label S_RANGE_SQRT_Avg_Utilization_Rat =
372455    +'Standard: RANGE_SQRT_Avg_Utilization_Ratio' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Avg_Utilization_Rat = 'Standard:
RANGE_SQRT_Avg_Utilization_Ratio' ;
372456    +
372457    +      label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q =
372458    +'Standard: RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = 'Standard:
RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
372459    +
372460    +      label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 =
372461    +'Standard: RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = 'Standard:
RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
372462    +
372463    +      label S_RANGE_Total_Revolving_Bal =
372464    +'Standard: RANGE_Total_Revolving_Bal' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Total_Revolving_Bal = 'Standard:
RANGE_Total_Revolving_Bal' ;
372465    +
372466    +      label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
372467    +
372468    +      label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
372469    +
372470    +      label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
372471    +
372472    +      label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
372473    +
372474    +      label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
372475    +
372476    +      label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
372477    +
372478    +      label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
372479    +
372480    +      label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
372481    +
372482    +      label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
372483    +
372484    +      label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
372485    +
372486    +      label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
372487    +
372488    +      label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
372489    +
372490    +      label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
372491    +
372492    +      label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
372493    +
372494    +      label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
372495    +
372496    +      label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
372497    +
372498    +      label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
372499    +
372500    +      label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
372501    +
372502    +      label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
372503    +
372504    +      label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
372505    +
372506    +      label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
372507    +
372508    +      label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
372509    +
372510    +      label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
372511    +
372512    +      label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
372513    +
372514    +      label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
372515    +
372516    +      label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
372517    +
372518    +      label G_Total_Relationship_Count0 =
372519    +'Dummy: G_Total_Relationship_Count=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count0 = 'Dummy:
G_Total_Relationship_Count=0' ;
372520    +
372521    +      label G_Total_Relationship_Count1 =
372522    +'Dummy: G_Total_Relationship_Count=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count1 = 'Dummy:
G_Total_Relationship_Count=1' ;
372523    +
372524    +      label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
372525    +
372526    +      label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
372527    +
372528    +      label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
372529    +
372530    +      label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
372531    +
372532    +      label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
372533    +
372534    +      label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
372535    +
372536    +      label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
372537    +
372538    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
372539    +
372540    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
372541    +
372542    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
372543    +
372544    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
372545    +
372546    +      label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
372547    +
372548    +      label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
372549    +
372550    +      label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
372551    +
372552    +      label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
372553    +
372554    +      label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
372555    +
372556    +      label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
372557    +
372558    +      label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
372559    +
372560    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
372561    +
372562    +*** Generate dummy variables for G_Contacts_Count_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Contacts_Count_12_mon ;
372563    +drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
372564    +        G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
372565    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372566    +G_Contacts_Count_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 0;
372567    +G_Contacts_Count_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 0;
372568    +G_Contacts_Count_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 0;
372569    +G_Contacts_Count_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 0;
372570    +if missing( G_Contacts_Count_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Contacts_Count_12_mon ) then do;
372571    +   G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
372572    +   G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
372573    +   G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
372574    +   G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
372575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372577    +end;
MPRINT(EM_DIAGRAM):   end;
372578    +else do;
MPRINT(EM_DIAGRAM):   else do;
372579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372580    +   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
372581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372582    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372583    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
372584    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
372585    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372586    +            G_Contacts_Count_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 1;
372587    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372588    +         end;
MPRINT(EM_DIAGRAM):   end;
372589    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372590    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
372591    +               G_Contacts_Count_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 1;
372592    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372593    +            end;
MPRINT(EM_DIAGRAM):   end;
372594    +         end;
MPRINT(EM_DIAGRAM):   end;
372595    +      end;
MPRINT(EM_DIAGRAM):   end;
372596    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372597    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
372598    +            G_Contacts_Count_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 1;
372599    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372600    +         end;
MPRINT(EM_DIAGRAM):   end;
372601    +      end;
MPRINT(EM_DIAGRAM):   end;
372602    +   end;
MPRINT(EM_DIAGRAM):   end;
372603    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372604    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372605    +         G_Contacts_Count_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 1;
372606    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372607    +      end;
MPRINT(EM_DIAGRAM):   end;
372608    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372609    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
372610    +            G_Contacts_Count_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = -1;
372611    +            G_Contacts_Count_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = -1;
372612    +            G_Contacts_Count_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = -1;
372613    +            G_Contacts_Count_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = -1;
372614    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372615    +         end;
MPRINT(EM_DIAGRAM):   end;
372616    +      end;
MPRINT(EM_DIAGRAM):   end;
372617    +   end;
MPRINT(EM_DIAGRAM):   end;
372618    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
372619    +      G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
372620    +      G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
372621    +      G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
372622    +      G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
372623    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372624    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372625    +   end;
MPRINT(EM_DIAGRAM):   end;
372626    +end;
MPRINT(EM_DIAGRAM):   end;
372627    +
372628    +*** Generate dummy variables for G_Customer_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Customer_Age ;
372629    +drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
372630    +        G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7
372631    +        G_Customer_Age8 G_Customer_Age9 ;
MPRINT(EM_DIAGRAM):   drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7 G_Customer_Age8
G_Customer_Age9 ;
372632    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372633    +G_Customer_Age0 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 0;
372634    +G_Customer_Age1 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 0;
372635    +G_Customer_Age2 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 0;
372636    +G_Customer_Age3 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 0;
372637    +G_Customer_Age4 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 0;
372638    +G_Customer_Age5 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 0;
372639    +G_Customer_Age6 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 0;
372640    +G_Customer_Age7 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 0;
372641    +G_Customer_Age8 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 0;
372642    +G_Customer_Age9 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 0;
372643    +if missing( G_Customer_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Customer_Age ) then do;
372644    +   G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
372645    +   G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
372646    +   G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
372647    +   G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
372648    +   G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
372649    +   G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
372650    +   G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
372651    +   G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
372652    +   G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
372653    +   G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
372654    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372655    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372656    +end;
MPRINT(EM_DIAGRAM):   end;
372657    +else do;
MPRINT(EM_DIAGRAM):   else do;
372658    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372659    +   _dm12 = put( G_Customer_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Customer_Age , BEST12. );
372660    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372661    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372662    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
372663    +      if _dm12 <= '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '10' then do;
372664    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
372665    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372666    +               G_Customer_Age0 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 1;
372667    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372668    +            end;
MPRINT(EM_DIAGRAM):   end;
372669    +            else do;
MPRINT(EM_DIAGRAM):   else do;
372670    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
372671    +                  G_Customer_Age1 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 1;
372672    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372673    +               end;
MPRINT(EM_DIAGRAM):   end;
372674    +            end;
MPRINT(EM_DIAGRAM):   end;
372675    +         end;
MPRINT(EM_DIAGRAM):   end;
372676    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372677    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
372678    +               G_Customer_Age0 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = -1;
372679    +               G_Customer_Age1 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = -1;
372680    +               G_Customer_Age2 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = -1;
372681    +               G_Customer_Age3 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = -1;
372682    +               G_Customer_Age4 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = -1;
372683    +               G_Customer_Age5 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = -1;
372684    +               G_Customer_Age6 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = -1;
372685    +               G_Customer_Age7 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = -1;
372686    +               G_Customer_Age8 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = -1;
372687    +               G_Customer_Age9 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = -1;
372688    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372689    +            end;
MPRINT(EM_DIAGRAM):   end;
372690    +         end;
MPRINT(EM_DIAGRAM):   end;
372691    +      end;
MPRINT(EM_DIAGRAM):   end;
372692    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372693    +         if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
372694    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
372695    +               G_Customer_Age2 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 1;
372696    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372697    +            end;
MPRINT(EM_DIAGRAM):   end;
372698    +            else do;
MPRINT(EM_DIAGRAM):   else do;
372699    +               if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372700    +                  G_Customer_Age3 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 1;
372701    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372702    +               end;
MPRINT(EM_DIAGRAM):   end;
372703    +            end;
MPRINT(EM_DIAGRAM):   end;
372704    +         end;
MPRINT(EM_DIAGRAM):   end;
372705    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372706    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
372707    +               G_Customer_Age4 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 1;
372708    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372709    +            end;
MPRINT(EM_DIAGRAM):   end;
372710    +         end;
MPRINT(EM_DIAGRAM):   end;
372711    +      end;
MPRINT(EM_DIAGRAM):   end;
372712    +   end;
MPRINT(EM_DIAGRAM):   end;
372713    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372714    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
372715    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
372716    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
372717    +               G_Customer_Age5 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 1;
372718    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372719    +            end;
MPRINT(EM_DIAGRAM):   end;
372720    +            else do;
MPRINT(EM_DIAGRAM):   else do;
372721    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
372722    +                  G_Customer_Age6 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 1;
372723    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372724    +               end;
MPRINT(EM_DIAGRAM):   end;
372725    +            end;
MPRINT(EM_DIAGRAM):   end;
372726    +         end;
MPRINT(EM_DIAGRAM):   end;
372727    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372728    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
372729    +               G_Customer_Age7 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 1;
372730    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372731    +            end;
MPRINT(EM_DIAGRAM):   end;
372732    +         end;
MPRINT(EM_DIAGRAM):   end;
372733    +      end;
MPRINT(EM_DIAGRAM):   end;
372734    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372735    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
372736    +            G_Customer_Age8 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 1;
372737    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372738    +         end;
MPRINT(EM_DIAGRAM):   end;
372739    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372740    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
372741    +               G_Customer_Age9 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 1;
372742    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372743    +            end;
MPRINT(EM_DIAGRAM):   end;
372744    +         end;
MPRINT(EM_DIAGRAM):   end;
372745    +      end;
MPRINT(EM_DIAGRAM):   end;
372746    +   end;
MPRINT(EM_DIAGRAM):   end;
372747    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
372748    +      G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
372749    +      G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
372750    +      G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
372751    +      G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
372752    +      G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
372753    +      G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
372754    +      G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
372755    +      G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
372756    +      G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
372757    +      G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
372758    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372759    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372760    +   end;
MPRINT(EM_DIAGRAM):   end;
372761    +end;
MPRINT(EM_DIAGRAM):   end;
372762    +
372763    +*** Generate dummy variables for G_Months_Inactive_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_Inactive_12_mon ;
372764    +drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
372765    +        G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
372766    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372767    +G_Months_Inactive_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 0;
372768    +G_Months_Inactive_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 0;
372769    +G_Months_Inactive_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 0;
372770    +G_Months_Inactive_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 0;
372771    +if missing( G_Months_Inactive_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_Inactive_12_mon ) then do;
372772    +   G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
372773    +   G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
372774    +   G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
372775    +   G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
372776    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372777    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372778    +end;
MPRINT(EM_DIAGRAM):   end;
372779    +else do;
MPRINT(EM_DIAGRAM):   else do;
372780    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372781    +   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
372782    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372783    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372784    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
372785    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
372786    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372787    +            G_Months_Inactive_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 1;
372788    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372789    +         end;
MPRINT(EM_DIAGRAM):   end;
372790    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372791    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
372792    +               G_Months_Inactive_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 1;
372793    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372794    +            end;
MPRINT(EM_DIAGRAM):   end;
372795    +         end;
MPRINT(EM_DIAGRAM):   end;
372796    +      end;
MPRINT(EM_DIAGRAM):   end;
372797    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372798    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
372799    +            G_Months_Inactive_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 1;
372800    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372801    +         end;
MPRINT(EM_DIAGRAM):   end;
372802    +      end;
MPRINT(EM_DIAGRAM):   end;
372803    +   end;
MPRINT(EM_DIAGRAM):   end;
372804    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372805    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372806    +         G_Months_Inactive_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 1;
372807    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372808    +      end;
MPRINT(EM_DIAGRAM):   end;
372809    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372810    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
372811    +            G_Months_Inactive_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = -1;
372812    +            G_Months_Inactive_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = -1;
372813    +            G_Months_Inactive_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = -1;
372814    +            G_Months_Inactive_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = -1;
372815    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372816    +         end;
MPRINT(EM_DIAGRAM):   end;
372817    +      end;
MPRINT(EM_DIAGRAM):   end;
372818    +   end;
MPRINT(EM_DIAGRAM):   end;
372819    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
372820    +      G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
372821    +      G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
372822    +      G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
372823    +      G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
372824    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372825    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372826    +   end;
MPRINT(EM_DIAGRAM):   end;
372827    +end;
MPRINT(EM_DIAGRAM):   end;
372828    +
372829    +*** Generate dummy variables for G_Months_on_book ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_on_book ;
372830    +drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2 G_Months_on_book3
372831    +        G_Months_on_book4 G_Months_on_book5 G_Months_on_book6
372832    +        G_Months_on_book7 ;
MPRINT(EM_DIAGRAM):   drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2
G_Months_on_book3 G_Months_on_book4 G_Months_on_book5 G_Months_on_book6 G_Months_on_book7 ;
372833    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372834    +G_Months_on_book0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 0;
372835    +G_Months_on_book1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 0;
372836    +G_Months_on_book2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 0;
372837    +G_Months_on_book3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 0;
372838    +G_Months_on_book4 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 0;
372839    +G_Months_on_book5 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 0;
372840    +G_Months_on_book6 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 0;
372841    +G_Months_on_book7 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 0;
372842    +if missing( G_Months_on_book ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_on_book ) then do;
372843    +   G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
372844    +   G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
372845    +   G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
372846    +   G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
372847    +   G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
372848    +   G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
372849    +   G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
372850    +   G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
372851    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372852    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372853    +end;
MPRINT(EM_DIAGRAM):   end;
372854    +else do;
MPRINT(EM_DIAGRAM):   else do;
372855    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372856    +   _dm12 = put( G_Months_on_book , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_on_book , BEST12. );
372857    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372858    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372859    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
372860    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
372861    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
372862    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372863    +               G_Months_on_book0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 1;
372864    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372865    +            end;
MPRINT(EM_DIAGRAM):   end;
372866    +            else do;
MPRINT(EM_DIAGRAM):   else do;
372867    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
372868    +                  G_Months_on_book1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 1;
372869    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372870    +               end;
MPRINT(EM_DIAGRAM):   end;
372871    +            end;
MPRINT(EM_DIAGRAM):   end;
372872    +         end;
MPRINT(EM_DIAGRAM):   end;
372873    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372874    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
372875    +               G_Months_on_book2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 1;
372876    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372877    +            end;
MPRINT(EM_DIAGRAM):   end;
372878    +         end;
MPRINT(EM_DIAGRAM):   end;
372879    +      end;
MPRINT(EM_DIAGRAM):   end;
372880    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372881    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372882    +            G_Months_on_book3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 1;
372883    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372884    +         end;
MPRINT(EM_DIAGRAM):   end;
372885    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372886    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
372887    +               G_Months_on_book4 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 1;
372888    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372889    +            end;
MPRINT(EM_DIAGRAM):   end;
372890    +         end;
MPRINT(EM_DIAGRAM):   end;
372891    +      end;
MPRINT(EM_DIAGRAM):   end;
372892    +   end;
MPRINT(EM_DIAGRAM):   end;
372893    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372894    +      if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
372895    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
372896    +            G_Months_on_book5 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 1;
372897    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372898    +         end;
MPRINT(EM_DIAGRAM):   end;
372899    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372900    +            if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
372901    +               G_Months_on_book6 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 1;
372902    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372903    +            end;
MPRINT(EM_DIAGRAM):   end;
372904    +         end;
MPRINT(EM_DIAGRAM):   end;
372905    +      end;
MPRINT(EM_DIAGRAM):   end;
372906    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372907    +         if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
372908    +            G_Months_on_book7 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 1;
372909    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372910    +         end;
MPRINT(EM_DIAGRAM):   end;
372911    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372912    +            if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
372913    +               G_Months_on_book0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = -1;
372914    +               G_Months_on_book1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = -1;
372915    +               G_Months_on_book2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = -1;
372916    +               G_Months_on_book3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = -1;
372917    +               G_Months_on_book4 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = -1;
372918    +               G_Months_on_book5 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = -1;
372919    +               G_Months_on_book6 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = -1;
372920    +               G_Months_on_book7 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = -1;
372921    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372922    +            end;
MPRINT(EM_DIAGRAM):   end;
372923    +         end;
MPRINT(EM_DIAGRAM):   end;
372924    +      end;
MPRINT(EM_DIAGRAM):   end;
372925    +   end;
MPRINT(EM_DIAGRAM):   end;
372926    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
372927    +      G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
372928    +      G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
372929    +      G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
372930    +      G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
372931    +      G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
372932    +      G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
372933    +      G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
372934    +      G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
372935    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372936    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372937    +   end;
MPRINT(EM_DIAGRAM):   end;
372938    +end;
MPRINT(EM_DIAGRAM):   end;
372939    +
372940    +*** Generate dummy variables for G_Total_Relationship_Count ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Relationship_Count ;
372941    +drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
372942    +if missing( G_Total_Relationship_Count ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Relationship_Count ) then do;
372943    +   G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
372944    +   G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
372945    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372946    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372947    +end;
MPRINT(EM_DIAGRAM):   end;
372948    +else do;
MPRINT(EM_DIAGRAM):   else do;
372949    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372950    +   _dm12 = put( G_Total_Relationship_Count , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Relationship_Count , BEST12. );
372951    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372952    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
372953    +      G_Total_Relationship_Count0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = -1;
372954    +      G_Total_Relationship_Count1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = -1;
372955    +   end;
MPRINT(EM_DIAGRAM):   end;
372956    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372957    +      G_Total_Relationship_Count0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 0;
372958    +      G_Total_Relationship_Count1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 1;
372959    +   end;
MPRINT(EM_DIAGRAM):   end;
372960    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
372961    +      G_Total_Relationship_Count0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 1;
372962    +      G_Total_Relationship_Count1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 0;
372963    +   end;
MPRINT(EM_DIAGRAM):   end;
372964    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372965    +      G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
372966    +      G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
372967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372969    +   end;
MPRINT(EM_DIAGRAM):   end;
372970    +end;
MPRINT(EM_DIAGRAM):   end;
372971    +
372972    +*** Generate dummy variables for G_Total_Trans_Ct ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Trans_Ct ;
372973    +drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2 G_Total_Trans_Ct3
372974    +        G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2
G_Total_Trans_Ct3 G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
372975    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372976    +G_Total_Trans_Ct0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 0;
372977    +G_Total_Trans_Ct1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 0;
372978    +G_Total_Trans_Ct2 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 0;
372979    +G_Total_Trans_Ct3 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 0;
372980    +G_Total_Trans_Ct4 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 0;
372981    +G_Total_Trans_Ct5 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 0;
372982    +G_Total_Trans_Ct6 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 0;
372983    +if missing( G_Total_Trans_Ct ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Trans_Ct ) then do;
372984    +   G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
372985    +   G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
372986    +   G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
372987    +   G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
372988    +   G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
372989    +   G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
372990    +   G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
372991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372993    +end;
MPRINT(EM_DIAGRAM):   end;
372994    +else do;
MPRINT(EM_DIAGRAM):   else do;
372995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372996    +   _dm12 = put( G_Total_Trans_Ct , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Trans_Ct , BEST12. );
372997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372998    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372999    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
373000    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
373001    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
373002    +            G_Total_Trans_Ct0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 1;
373003    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373004    +         end;
MPRINT(EM_DIAGRAM):   end;
373005    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373006    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
373007    +               G_Total_Trans_Ct1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 1;
373008    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373009    +            end;
MPRINT(EM_DIAGRAM):   end;
373010    +         end;
MPRINT(EM_DIAGRAM):   end;
373011    +      end;
MPRINT(EM_DIAGRAM):   end;
373012    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373013    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373014    +            G_Total_Trans_Ct2 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 1;
373015    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373016    +         end;
MPRINT(EM_DIAGRAM):   end;
373017    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373018    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373019    +               G_Total_Trans_Ct3 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 1;
373020    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373021    +            end;
MPRINT(EM_DIAGRAM):   end;
373022    +         end;
MPRINT(EM_DIAGRAM):   end;
373023    +      end;
MPRINT(EM_DIAGRAM):   end;
373024    +   end;
MPRINT(EM_DIAGRAM):   end;
373025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373026    +      if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
373027    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373028    +            G_Total_Trans_Ct4 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 1;
373029    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373030    +         end;
MPRINT(EM_DIAGRAM):   end;
373031    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373032    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373033    +               G_Total_Trans_Ct5 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 1;
373034    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373035    +            end;
MPRINT(EM_DIAGRAM):   end;
373036    +         end;
MPRINT(EM_DIAGRAM):   end;
373037    +      end;
MPRINT(EM_DIAGRAM):   end;
373038    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373039    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
373040    +            G_Total_Trans_Ct6 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 1;
373041    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373042    +         end;
MPRINT(EM_DIAGRAM):   end;
373043    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373044    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
373045    +               G_Total_Trans_Ct0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = -1;
373046    +               G_Total_Trans_Ct1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = -1;
373047    +               G_Total_Trans_Ct2 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = -1;
373048    +               G_Total_Trans_Ct3 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = -1;
373049    +               G_Total_Trans_Ct4 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = -1;
373050    +               G_Total_Trans_Ct5 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = -1;
373051    +               G_Total_Trans_Ct6 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = -1;
373052    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373053    +            end;
MPRINT(EM_DIAGRAM):   end;
373054    +         end;
MPRINT(EM_DIAGRAM):   end;
373055    +      end;
MPRINT(EM_DIAGRAM):   end;
373056    +   end;
MPRINT(EM_DIAGRAM):   end;
373057    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
373058    +      G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
373059    +      G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
373060    +      G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
373061    +      G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
373062    +      G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
373063    +      G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
373064    +      G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
373065    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373066    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373067    +   end;
MPRINT(EM_DIAGRAM):   end;
373068    +end;
MPRINT(EM_DIAGRAM):   end;
373069    +
373070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373071    +*** Checking missing input Interval
373072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
373073    +
373074    +IF NMISS(
373075    +   RANGE_LOG_Total_Trans_Amt ,
373076    +   RANGE_SQRT_Avg_Utilization_Ratio ,
373077    +   RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ,
373078    +   RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ,
373079    +   RANGE_Total_Revolving_Bal   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( RANGE_LOG_Total_Trans_Amt , RANGE_SQRT_Avg_Utilization_Ratio ,
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 , RANGE_SQRT_Total_Ct_Chng_Q4_Q1 , RANGE_Total_Revolving_Bal )
THEN DO;
373080    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
373081    +
373082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373083    +END;
MPRINT(EM_DIAGRAM):   END;
373084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373085    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
373086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373087    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
373088    +   S_RANGE_LOG_Total_Trans_Amt
373089    +          =    -1.34747068578628 +      5.0128535511494 *
373090    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
373091    +   S_RANGE_SQRT_Avg_Utilization_Rat
373092    +          =    -1.34502734827526 +     3.19469433649726 *
373093    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 + 3.19469433649726
* RANGE_SQRT_Avg_Utilization_Ratio ;
373094    +   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373095    +          =    -7.21426643857002 +     15.4166020949803 *
373096    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 + 15.4166020949803
* RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
373097    +   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373098    +          =    -6.16155815683527 +     14.2791680762335 *
373099    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 + 14.2791680762335
* RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
373100    +   S_RANGE_Total_Revolving_Bal
373101    +          =    -1.43123481780808 +     3.09032113107013 *
373102    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013 *
RANGE_Total_Revolving_Bal ;
373103    +END;
MPRINT(EM_DIAGRAM):   END;
373104    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
373105    +   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
373106    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
= . ;
373107    +   ELSE S_RANGE_LOG_Total_Trans_Amt
373108    +          =    -1.34747068578628 +      5.0128535511494 *
373109    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
373110    +   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
373111    +        S_RANGE_SQRT_Avg_Utilization_Rat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
S_RANGE_SQRT_Avg_Utilization_Rat = . ;
373112    +   ELSE S_RANGE_SQRT_Avg_Utilization_Rat
373113    +          =    -1.34502734827526 +     3.19469433649726 *
373114    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 +
3.19469433649726 * RANGE_SQRT_Avg_Utilization_Ratio ;
373115    +   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
373116    +        S_RANGE_SQRT_Total_Amt_Chng_Q4_Q  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = . ;
373117    +   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373118    +          =    -7.21426643857002 +     15.4166020949803 *
373119    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 +
15.4166020949803 * RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
373120    +   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
373121    +        S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = . ;
373122    +   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373123    +          =    -6.16155815683527 +     14.2791680762335 *
373124    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 +
14.2791680762335 * RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
373125    +   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
373126    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
= . ;
373127    +   ELSE S_RANGE_Total_Revolving_Bal
373128    +          =    -1.43123481780808 +     3.09032113107013 *
373129    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013
* RANGE_Total_Revolving_Bal ;
373130    +END;
MPRINT(EM_DIAGRAM):   END;
373131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373132    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
373133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373134    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373135    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
373136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373137    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
373138    +   H1x1_1  =     1.02501964860994 * S_RANGE_LOG_Total_Trans_Amt
373139    +          +     0.30125997647147 * S_RANGE_SQRT_Avg_Utilization_Rat
373140    +          +     0.23244197886313 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373141    +          +     -0.1186861071534 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373142    +          +    -2.97931719831362 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.02501964860994 * S_RANGE_LOG_Total_Trans_Amt +
0.30125997647147 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.23244197886313 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.1186861071534 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-2.97931719831362 * S_RANGE_Total_Revolving_Bal ;
373143    +   H1x1_2  =    -0.95198389903237 * S_RANGE_LOG_Total_Trans_Amt
373144    +          +    -0.16356667531156 * S_RANGE_SQRT_Avg_Utilization_Rat
373145    +          +     0.11682877242643 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373146    +          +     0.20373298002789 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373147    +          +     0.02861216680365 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.95198389903237 * S_RANGE_LOG_Total_Trans_Amt +
-0.16356667531156 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.11682877242643 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.20373298002789 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.02861216680365 * S_RANGE_Total_Revolving_Bal ;
373148    +   H1x1_1  = H1x1_1  +     2.40671499395249 * G_Contacts_Count_12_mon0
373149    +          +    -0.28604333391551 * G_Contacts_Count_12_mon1
373150    +          +    -0.65633348542709 * G_Contacts_Count_12_mon2
373151    +          +    -1.01395328713868 * G_Contacts_Count_12_mon3
373152    +          +     0.85960465205093 * G_Customer_Age0  +     0.05121480560908 *
373153    +        G_Customer_Age1  +     0.07410310179315 * G_Customer_Age2
373154    +          +     0.34166223952007 * G_Customer_Age3  +     0.06870447056678 *
373155    +        G_Customer_Age4  +    -0.11676539026414 * G_Customer_Age5
373156    +          +     0.28927492204781 * G_Customer_Age6  +     0.23499226142499 *
373157    +        G_Customer_Age7  +    -0.11493422026684 * G_Customer_Age8
373158    +          +      -1.747811086948 * G_Customer_Age9  +    -1.75331030145069 *
373159    +        G_Months_Inactive_12_mon0  +     0.71391443696804 *
373160    +        G_Months_Inactive_12_mon1  +      0.3345243422843 *
373161    +        G_Months_Inactive_12_mon2  +      0.4696045512812 *
373162    +        G_Months_Inactive_12_mon3  +     0.45485139833883 * G_Months_on_book0
373163    +          +     0.39911195244105 * G_Months_on_book1
373164    +          +    -0.44963865252838 * G_Months_on_book2
373165    +          +     0.10698249012831 * G_Months_on_book3
373166    +          +     0.22008108873992 * G_Months_on_book4
373167    +          +     0.28392109419284 * G_Months_on_book5
373168    +          +     -0.3013014569746 * G_Months_on_book6
373169    +          +     0.15608132241029 * G_Months_on_book7
373170    +          +     0.31679963195245 * G_Total_Relationship_Count0
373171    +          +    -0.17244128327697 * G_Total_Relationship_Count1
373172    +          +     0.64194280071474 * G_Total_Trans_Ct0
373173    +          +     1.13181256946841 * G_Total_Trans_Ct1
373174    +          +     0.97686269686271 * G_Total_Trans_Ct2
373175    +          +     0.98717016810806 * G_Total_Trans_Ct3
373176    +          +     0.16424164762715 * G_Total_Trans_Ct4
373177    +          +     0.72187096755953 * G_Total_Trans_Ct5
373178    +          +    -1.97148427169564 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.40671499395249 * G_Contacts_Count_12_mon0 +
-0.28604333391551 * G_Contacts_Count_12_mon1 + -0.65633348542709 * G_Contacts_Count_12_mon2 +
-1.01395328713868 * G_Contacts_Count_12_mon3 + 0.85960465205093 * G_Customer_Age0 +
0.05121480560908 * G_Customer_Age1 + 0.07410310179315 * G_Customer_Age2 + 0.34166223952007 *
G_Customer_Age3 + 0.06870447056678 * G_Customer_Age4 + -0.11676539026414 * G_Customer_Age5 +
0.28927492204781 * G_Customer_Age6 + 0.23499226142499 * G_Customer_Age7 + -0.11493422026684 *
G_Customer_Age8 + -1.747811086948 * G_Customer_Age9 + -1.75331030145069 *
G_Months_Inactive_12_mon0 + 0.71391443696804 * G_Months_Inactive_12_mon1 + 0.3345243422843 *
G_Months_Inactive_12_mon2 + 0.4696045512812 * G_Months_Inactive_12_mon3 + 0.45485139833883 *
G_Months_on_book0 + 0.39911195244105 * G_Months_on_book1 + -0.44963865252838 *
G_Months_on_book2 + 0.10698249012831 * G_Months_on_book3 + 0.22008108873992 *
G_Months_on_book4 + 0.28392109419284 * G_Months_on_book5 + -0.3013014569746 *
G_Months_on_book6 + 0.15608132241029 * G_Months_on_book7 + 0.31679963195245 *
G_Total_Relationship_Count0 + -0.17244128327697 * G_Total_Relationship_Count1 +
0.64194280071474 * G_Total_Trans_Ct0 + 1.13181256946841 * G_Total_Trans_Ct1 + 0.97686269686271
* G_Total_Trans_Ct2 + 0.98717016810806 * G_Total_Trans_Ct3 + 0.16424164762715 *
G_Total_Trans_Ct4 + 0.72187096755953 * G_Total_Trans_Ct5 + -1.97148427169564 *
G_Total_Trans_Ct6 ;
373179    +   H1x1_2  = H1x1_2  +       -3.11569913609 * G_Contacts_Count_12_mon0
373180    +          +     0.55463007561471 * G_Contacts_Count_12_mon1
373181    +          +     0.86789725339798 * G_Contacts_Count_12_mon2
373182    +          +     0.83343929891411 * G_Contacts_Count_12_mon3
373183    +          +    -0.95250865316681 * G_Customer_Age0  +    -0.20153360153754 *
373184    +        G_Customer_Age1  +    -0.13395945037511 * G_Customer_Age2
373185    +          +    -0.16566544227004 * G_Customer_Age3  +     -0.0620673520045 *
373186    +        G_Customer_Age4  +    -0.17864972110492 * G_Customer_Age5
373187    +          +    -0.03983418838966 * G_Customer_Age6  +    -0.03191322178204 *
373188    +        G_Customer_Age7  +     0.11505624722812 * G_Customer_Age8
373189    +          +     0.57109255297529 * G_Customer_Age9  +    -0.87036174573518 *
373190    +        G_Months_Inactive_12_mon0  +     0.07164716186277 *
373191    +        G_Months_Inactive_12_mon1  +     0.17818319570595 *
373192    +        G_Months_Inactive_12_mon2  +     0.21942633339221 *
373193    +        G_Months_Inactive_12_mon3  +     0.03310063502739 * G_Months_on_book0
373194    +          +    -0.46458200938733 * G_Months_on_book1
373195    +          +    -0.04269630807226 * G_Months_on_book2
373196    +          +     0.01759018538732 * G_Months_on_book3
373197    +          +     0.11272864233309 * G_Months_on_book4
373198    +          +     0.05384941545576 * G_Months_on_book5
373199    +          +     0.02571962139521 * G_Months_on_book6
373200    +          +     0.20452595693382 * G_Months_on_book7
373201    +          +    -0.19840105547444 * G_Total_Relationship_Count0
373202    +          +     0.14283649235279 * G_Total_Relationship_Count1
373203    +          +    -2.38920084655518 * G_Total_Trans_Ct0
373204    +          +    -0.75544993192888 * G_Total_Trans_Ct1
373205    +          +    -0.72964558743549 * G_Total_Trans_Ct2
373206    +          +    -0.61944349469073 * G_Total_Trans_Ct3
373207    +          +    -0.41739064945083 * G_Total_Trans_Ct4
373208    +          +    -0.03013125081655 * G_Total_Trans_Ct5
373209    +          +     0.41065071348614 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -3.11569913609 * G_Contacts_Count_12_mon0 +
0.55463007561471 * G_Contacts_Count_12_mon1 + 0.86789725339798 * G_Contacts_Count_12_mon2 +
0.83343929891411 * G_Contacts_Count_12_mon3 + -0.95250865316681 * G_Customer_Age0 +
-0.20153360153754 * G_Customer_Age1 + -0.13395945037511 * G_Customer_Age2 + -0.16566544227004
* G_Customer_Age3 + -0.0620673520045 * G_Customer_Age4 + -0.17864972110492 * G_Customer_Age5 +
-0.03983418838966 * G_Customer_Age6 + -0.03191322178204 * G_Customer_Age7 + 0.11505624722812 *
G_Customer_Age8 + 0.57109255297529 * G_Customer_Age9 + -0.87036174573518 *
G_Months_Inactive_12_mon0 + 0.07164716186277 * G_Months_Inactive_12_mon1 + 0.17818319570595 *
G_Months_Inactive_12_mon2 + 0.21942633339221 * G_Months_Inactive_12_mon3 + 0.03310063502739 *
G_Months_on_book0 + -0.46458200938733 * G_Months_on_book1 + -0.04269630807226 *
G_Months_on_book2 + 0.01759018538732 * G_Months_on_book3 + 0.11272864233309 *
G_Months_on_book4 + 0.05384941545576 * G_Months_on_book5 + 0.02571962139521 *
G_Months_on_book6 + 0.20452595693382 * G_Months_on_book7 + -0.19840105547444 *
G_Total_Relationship_Count0 + 0.14283649235279 * G_Total_Relationship_Count1 +
-2.38920084655518 * G_Total_Trans_Ct0 + -0.75544993192888 * G_Total_Trans_Ct1 +
-0.72964558743549 * G_Total_Trans_Ct2 + -0.61944349469073 * G_Total_Trans_Ct3 +
-0.41739064945083 * G_Total_Trans_Ct4 + -0.03013125081655 * G_Total_Trans_Ct5 +
0.41065071348614 * G_Total_Trans_Ct6 ;
373210    +   H1x1_1  =    -1.40436708245126 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.40436708245126 + H1x1_1 ;
373211    +   H1x1_2  =    -0.62244542562102 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62244542562102 + H1x1_2 ;
373212    +   H1x1_1  = TANH(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = TANH(H1x1_1 );
373213    +   H1x1_2  = TANH(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = TANH(H1x1_2 );
373214    +END;
MPRINT(EM_DIAGRAM):   END;
373215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
373216    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
373217    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
373218    +END;
MPRINT(EM_DIAGRAM):   END;
373219    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373220    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
373221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373222    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
373223    +   H1x2_1  =     0.34659311824578 * S_RANGE_LOG_Total_Trans_Amt
373224    +          +      -2.853271161796 * S_RANGE_SQRT_Avg_Utilization_Rat
373225    +          +    -2.57518066438565 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373226    +          +     0.81279997821052 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373227    +          +     0.61085756295407 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.34659311824578 * S_RANGE_LOG_Total_Trans_Amt +
-2.853271161796 * S_RANGE_SQRT_Avg_Utilization_Rat + -2.57518066438565 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.81279997821052 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.61085756295407 * S_RANGE_Total_Revolving_Bal ;
373228    +   H1x2_2  =    -0.93866568010483 * S_RANGE_LOG_Total_Trans_Amt
373229    +          +      0.0621508860157 * S_RANGE_SQRT_Avg_Utilization_Rat
373230    +          +     0.81058548555497 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373231    +          +    -0.44824766946914 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373232    +          +    -0.47053902310597 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.93866568010483 * S_RANGE_LOG_Total_Trans_Amt +
0.0621508860157 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.81058548555497 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.44824766946914 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.47053902310597 * S_RANGE_Total_Revolving_Bal ;
373233    +   H1x2_1  = H1x2_1  +     0.71400513216767 * G_Contacts_Count_12_mon0
373234    +          +     0.92110780972835 * G_Contacts_Count_12_mon1
373235    +          +      0.3629668816764 * G_Contacts_Count_12_mon2
373236    +          +    -0.76435790327487 * G_Contacts_Count_12_mon3
373237    +          +     0.54626705501872 * G_Customer_Age0  +    -0.38925455254039 *
373238    +        G_Customer_Age1  +    -0.33241651106823 * G_Customer_Age2
373239    +          +    -1.15895365580622 * G_Customer_Age3  +     1.03208806982955 *
373240    +        G_Customer_Age4  +     0.56450431682696 * G_Customer_Age5
373241    +          +    -0.46180185966695 * G_Customer_Age6  +     2.06449433187004 *
373242    +        G_Customer_Age7  +     1.34602734238407 * G_Customer_Age8
373243    +          +    -0.12998191802167 * G_Customer_Age9  +     0.90239304334566 *
373244    +        G_Months_Inactive_12_mon0  +    -0.57705712485771 *
373245    +        G_Months_Inactive_12_mon1  +     0.20537489416112 *
373246    +        G_Months_Inactive_12_mon2  +    -0.49514361515621 *
373247    +        G_Months_Inactive_12_mon3  +    -0.32788082970898 * G_Months_on_book0
373248    +          +     0.39208442279716 * G_Months_on_book1
373249    +          +     0.32578211410595 * G_Months_on_book2
373250    +          +     0.51936552147334 * G_Months_on_book3
373251    +          +    -1.21996861431241 * G_Months_on_book4
373252    +          +    -0.79511599891093 * G_Months_on_book5
373253    +          +    -0.34474328383204 * G_Months_on_book6
373254    +          +    -2.57829235432067 * G_Months_on_book7
373255    +          +    -0.22957069127939 * G_Total_Relationship_Count0
373256    +          +     0.48708741281952 * G_Total_Relationship_Count1
373257    +          +    -0.20439350866799 * G_Total_Trans_Ct0
373258    +          +    -1.53642603362521 * G_Total_Trans_Ct1
373259    +          +    -0.25605051972162 * G_Total_Trans_Ct2
373260    +          +    -0.09346705616277 * G_Total_Trans_Ct3
373261    +          +     0.29244537978438 * G_Total_Trans_Ct4
373262    +          +     1.10332787181309 * G_Total_Trans_Ct5
373263    +          +     1.05459273095253 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.71400513216767 * G_Contacts_Count_12_mon0 +
0.92110780972835 * G_Contacts_Count_12_mon1 + 0.3629668816764 * G_Contacts_Count_12_mon2 +
-0.76435790327487 * G_Contacts_Count_12_mon3 + 0.54626705501872 * G_Customer_Age0 +
-0.38925455254039 * G_Customer_Age1 + -0.33241651106823 * G_Customer_Age2 + -1.15895365580622
* G_Customer_Age3 + 1.03208806982955 * G_Customer_Age4 + 0.56450431682696 * G_Customer_Age5 +
-0.46180185966695 * G_Customer_Age6 + 2.06449433187004 * G_Customer_Age7 + 1.34602734238407 *
G_Customer_Age8 + -0.12998191802167 * G_Customer_Age9 + 0.90239304334566 *
G_Months_Inactive_12_mon0 + -0.57705712485771 * G_Months_Inactive_12_mon1 + 0.20537489416112 *
G_Months_Inactive_12_mon2 + -0.49514361515621 * G_Months_Inactive_12_mon3 + -0.32788082970898
* G_Months_on_book0 + 0.39208442279716 * G_Months_on_book1 + 0.32578211410595 *
G_Months_on_book2 + 0.51936552147334 * G_Months_on_book3 + -1.21996861431241 *
G_Months_on_book4 + -0.79511599891093 * G_Months_on_book5 + -0.34474328383204 *
G_Months_on_book6 + -2.57829235432067 * G_Months_on_book7 + -0.22957069127939 *
G_Total_Relationship_Count0 + 0.48708741281952 * G_Total_Relationship_Count1 +
-0.20439350866799 * G_Total_Trans_Ct0 + -1.53642603362521 * G_Total_Trans_Ct1 +
-0.25605051972162 * G_Total_Trans_Ct2 + -0.09346705616277 * G_Total_Trans_Ct3 +
0.29244537978438 * G_Total_Trans_Ct4 + 1.10332787181309 * G_Total_Trans_Ct5 + 1.05459273095253
* G_Total_Trans_Ct6 ;
373264    +   H1x2_2  = H1x2_2  +    -0.74054226776565 * G_Contacts_Count_12_mon0
373265    +          +     0.25988400090888 * G_Contacts_Count_12_mon1
373266    +          +     0.36052880436315 * G_Contacts_Count_12_mon2
373267    +          +      1.2433826357089 * G_Contacts_Count_12_mon3
373268    +          +    -0.27615383177284 * G_Customer_Age0  +     0.53383540020492 *
373269    +        G_Customer_Age1  +    -1.54528759740368 * G_Customer_Age2
373270    +          +     0.16347425548076 * G_Customer_Age3  +    -1.83494882792742 *
373271    +        G_Customer_Age4  +     0.07542541730265 * G_Customer_Age5
373272    +          +      1.3274294957122 * G_Customer_Age6  +    -0.19652227566702 *
373273    +        G_Customer_Age7  +     1.17416887757193 * G_Customer_Age8
373274    +          +    -0.67757642607906 * G_Customer_Age9  +    -0.23841243791319 *
373275    +        G_Months_Inactive_12_mon0  +     0.17419249230621 *
373276    +        G_Months_Inactive_12_mon1  +    -1.32654545796903 *
373277    +        G_Months_Inactive_12_mon2  +    -0.17840288252074 *
373278    +        G_Months_Inactive_12_mon3  +     -1.3435001500078 * G_Months_on_book0
373279    +          +    -1.71551288230779 * G_Months_on_book1
373280    +          +    -0.45437716209274 * G_Months_on_book2
373281    +          +     0.20533045705777 * G_Months_on_book3
373282    +          +     0.35509066616616 * G_Months_on_book4
373283    +          +    -0.57998503526656 * G_Months_on_book5
373284    +          +     1.05551310369074 * G_Months_on_book6
373285    +          +    -1.65575396359379 * G_Months_on_book7
373286    +          +     0.39647475519458 * G_Total_Relationship_Count0
373287    +          +     0.73363930002586 * G_Total_Relationship_Count1
373288    +          +     0.93243970501905 * G_Total_Trans_Ct0
373289    +          +    -0.05888635699865 * G_Total_Trans_Ct1
373290    +          +     0.76141941519989 * G_Total_Trans_Ct2
373291    +          +     0.27602418707378 * G_Total_Trans_Ct3
373292    +          +       0.313462073547 * G_Total_Trans_Ct4
373293    +          +     1.64625003255342 * G_Total_Trans_Ct5
373294    +          +     2.07977868728295 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.74054226776565 * G_Contacts_Count_12_mon0 +
0.25988400090888 * G_Contacts_Count_12_mon1 + 0.36052880436315 * G_Contacts_Count_12_mon2 +
1.2433826357089 * G_Contacts_Count_12_mon3 + -0.27615383177284 * G_Customer_Age0 +
0.53383540020492 * G_Customer_Age1 + -1.54528759740368 * G_Customer_Age2 + 0.16347425548076 *
G_Customer_Age3 + -1.83494882792742 * G_Customer_Age4 + 0.07542541730265 * G_Customer_Age5 +
1.3274294957122 * G_Customer_Age6 + -0.19652227566702 * G_Customer_Age7 + 1.17416887757193 *
G_Customer_Age8 + -0.67757642607906 * G_Customer_Age9 + -0.23841243791319 *
G_Months_Inactive_12_mon0 + 0.17419249230621 * G_Months_Inactive_12_mon1 + -1.32654545796903 *
G_Months_Inactive_12_mon2 + -0.17840288252074 * G_Months_Inactive_12_mon3 + -1.3435001500078 *
G_Months_on_book0 + -1.71551288230779 * G_Months_on_book1 + -0.45437716209274 *
G_Months_on_book2 + 0.20533045705777 * G_Months_on_book3 + 0.35509066616616 *
G_Months_on_book4 + -0.57998503526656 * G_Months_on_book5 + 1.05551310369074 *
G_Months_on_book6 + -1.65575396359379 * G_Months_on_book7 + 0.39647475519458 *
G_Total_Relationship_Count0 + 0.73363930002586 * G_Total_Relationship_Count1 +
0.93243970501905 * G_Total_Trans_Ct0 + -0.05888635699865 * G_Total_Trans_Ct1 +
0.76141941519989 * G_Total_Trans_Ct2 + 0.27602418707378 * G_Total_Trans_Ct3 + 0.313462073547 *
G_Total_Trans_Ct4 + 1.64625003255342 * G_Total_Trans_Ct5 + 2.07977868728295 *
G_Total_Trans_Ct6 ;
373295    +   H1x2_1  =     0.44894143904256 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.44894143904256 + H1x2_1 ;
373296    +   H1x2_2  =    -1.17791753007224 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.17791753007224 + H1x2_2 ;
373297    +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
373298    +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
373299    +END;
MPRINT(EM_DIAGRAM):   END;
373300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
373301    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
373302    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
373303    +END;
MPRINT(EM_DIAGRAM):   END;
373304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373305    +*** Writing the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Attrition_Flag ;
373306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373307    +
373308    +*** Generate dummy variables for Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Attrition_Flag ;
373309    +drop Attrition_Flag1 Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   drop Attrition_Flag1 Attrition_Flag0 ;
373310    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
373311    +length F_Attrition_Flag $ 17;
MPRINT(EM_DIAGRAM):   length F_Attrition_Flag $ 17;
373312    +F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
MPRINT(EM_DIAGRAM):   F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
373313    +%DMNORMIP( F_Attrition_Flag )
MPRINT(DMNORMIP):   call dmnorm(F_Attrition_Flag,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373314    +if missing( Attrition_Flag ) then do;
MPRINT(EM_DIAGRAM):   if missing( Attrition_Flag ) then do;
373315    +   Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
373316    +   Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
373317    +end;
MPRINT(EM_DIAGRAM):   end;
373318    +else do;
MPRINT(EM_DIAGRAM):   else do;
373319    +   if F_Attrition_Flag = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_Attrition_Flag = '0' then do;
373320    +      Attrition_Flag1 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 0;
373321    +      Attrition_Flag0 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 1;
373322    +   end;
MPRINT(EM_DIAGRAM):   end;
373323    +   else if F_Attrition_Flag = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_Attrition_Flag = '1' then do;
373324    +      Attrition_Flag1 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 1;
373325    +      Attrition_Flag0 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 0;
373326    +   end;
MPRINT(EM_DIAGRAM):   end;
373327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373328    +      Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
373329    +      Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
373330    +   end;
MPRINT(EM_DIAGRAM):   end;
373331    +end;
MPRINT(EM_DIAGRAM):   end;
373332    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
373333    +   P_Attrition_Flag1  =     2.66059139553414 * H1x1_1
373334    +          +    -4.72406220462279 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 2.66059139553414 * H1x1_1 + -4.72406220462279 *
H1x1_2 ;
373335    +   P_Attrition_Flag1  = P_Attrition_Flag1  +     0.01783303872814 * H1x2_1
373336    +          +     -0.0072448325809 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 + 0.01783303872814 * H1x2_1 +
-0.0072448325809 * H1x2_2 ;
373337    +   P_Attrition_Flag1  =     1.65896234349997 + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1.65896234349997 + P_Attrition_Flag1 ;
373338    +   P_Attrition_Flag0  = 0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
373339    +   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
373340    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
373341    +   P_Attrition_Flag1  = EXP(P_Attrition_Flag1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = EXP(P_Attrition_Flag1 - _MAX_);
373342    +   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
373343    +   P_Attrition_Flag0  = EXP(P_Attrition_Flag0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = EXP(P_Attrition_Flag0 - _MAX_);
373344    +   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
373345    +   P_Attrition_Flag1  = P_Attrition_Flag1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 / _SUM_;
373346    +   P_Attrition_Flag0  = P_Attrition_Flag0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = P_Attrition_Flag0 / _SUM_;
373347    +END;
MPRINT(EM_DIAGRAM):   END;
373348    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
373349    +   P_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = .;
373350    +   P_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = .;
373351    +END;
MPRINT(EM_DIAGRAM):   END;
373352    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
373353    +   P_Attrition_Flag1  =      0.1606941309255;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1606941309255;
373354    +   P_Attrition_Flag0  =     0.83930586907449;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83930586907449;
373355    +END;
MPRINT(EM_DIAGRAM):   END;
373356    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
373357    +*** Writing the Residuals  of the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Attrition_Flag ;
373358    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
373359    +IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1 = . ;
373360    +ELSE R_Attrition_Flag1  = Attrition_Flag1  - P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag1 = Attrition_Flag1 - P_Attrition_Flag1 ;
373361    +IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0 = . ;
373362    +ELSE R_Attrition_Flag0  = Attrition_Flag0  - P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag0 = Attrition_Flag0 - P_Attrition_Flag0 ;
373363    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373364    +*** Writing the I_Attrition_Flag  AND U_Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Attrition_Flag AND U_Attrition_Flag ;
373365    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
373366    +_MAXP_ = P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag1 ;
373367    +I_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "1                " ;
373368    +U_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "1                " ;
373369    +IF( _MAXP_ LT P_Attrition_Flag0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Attrition_Flag0 ) THEN DO;
373370    +   _MAXP_ = P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag0 ;
373371    +   I_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "0                " ;
373372    +   U_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "0                " ;
373373    +END;
MPRINT(EM_DIAGRAM):   END;
373374    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
373375    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
373376    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
373377    +drop
373378    +S_RANGE_LOG_Total_Trans_Amt
373379    +S_RANGE_SQRT_Avg_Utilization_Rat
373380    +S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
373381    +S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
373382    +S_RANGE_Total_Revolving_Bal
373383    +H1x1_1
373384    +H1x1_2
373385    +H1x2_1
373386    +H1x2_2
373387    +;
MPRINT(EM_DIAGRAM):   drop S_RANGE_LOG_Total_Trans_Amt S_RANGE_SQRT_Avg_Utilization_Rat
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 S_RANGE_Total_Revolving_Bal
H1x1_1 H1x1_2 H1x2_1 H1x2_2 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
373388     run;
 
NOTE: DATA STEP view saved on file EMWS1.AUTONEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
373389     quit;
373390     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
373391     filename emflow
373391   ! "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
373392     *------------------------------------------------------------*;
373393     * AutoNeural: Scoring VALIDATE data;
373394     *------------------------------------------------------------*;
373395     data EMWS1.AutoNeural_VALIDATE
373396     / view=EMWS1.AutoNeural_VALIDATE
373397     ;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_VALIDATE / view=EMWS1.AutoNeural_VALIDATE ;
373398     set EMWS1.Part2_VALIDATE
373399     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_VALIDATE ;
373400     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas.
373401    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
373402    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
373403    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
373404    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
373405    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
373406    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
373407    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
373408    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
373409    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
373410    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
373411    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
373412    +LENGTH _WARN_ $4
373413    +      F_Attrition_Flag  $ 17
373414    +      I_Attrition_Flag  $ 17
373415    +      U_Attrition_Flag  $ 17
373416    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Attrition_Flag $ 17 I_Attrition_Flag $ 17
U_Attrition_Flag $ 17 ;
373417    +      label S_RANGE_LOG_Total_Trans_Amt =
373418    +'Standard: RANGE_LOG_Total_Trans_Amt' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_LOG_Total_Trans_Amt = 'Standard:
RANGE_LOG_Total_Trans_Amt' ;
373419    +
373420    +      label S_RANGE_SQRT_Avg_Utilization_Rat =
373421    +'Standard: RANGE_SQRT_Avg_Utilization_Ratio' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Avg_Utilization_Rat = 'Standard:
RANGE_SQRT_Avg_Utilization_Ratio' ;
373422    +
373423    +      label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q =
373424    +'Standard: RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = 'Standard:
RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
373425    +
373426    +      label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 =
373427    +'Standard: RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = 'Standard:
RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
373428    +
373429    +      label S_RANGE_Total_Revolving_Bal =
373430    +'Standard: RANGE_Total_Revolving_Bal' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Total_Revolving_Bal = 'Standard:
RANGE_Total_Revolving_Bal' ;
373431    +
373432    +      label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
373433    +
373434    +      label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
373435    +
373436    +      label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
373437    +
373438    +      label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
373439    +
373440    +      label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
373441    +
373442    +      label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
373443    +
373444    +      label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
373445    +
373446    +      label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
373447    +
373448    +      label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
373449    +
373450    +      label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
373451    +
373452    +      label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
373453    +
373454    +      label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
373455    +
373456    +      label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
373457    +
373458    +      label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
373459    +
373460    +      label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
373461    +
373462    +      label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
373463    +
373464    +      label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
373465    +
373466    +      label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
373467    +
373468    +      label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
373469    +
373470    +      label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
373471    +
373472    +      label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
373473    +
373474    +      label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
373475    +
373476    +      label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
373477    +
373478    +      label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
373479    +
373480    +      label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
373481    +
373482    +      label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
373483    +
373484    +      label G_Total_Relationship_Count0 =
373485    +'Dummy: G_Total_Relationship_Count=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count0 = 'Dummy:
G_Total_Relationship_Count=0' ;
373486    +
373487    +      label G_Total_Relationship_Count1 =
373488    +'Dummy: G_Total_Relationship_Count=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count1 = 'Dummy:
G_Total_Relationship_Count=1' ;
373489    +
373490    +      label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
373491    +
373492    +      label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
373493    +
373494    +      label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
373495    +
373496    +      label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
373497    +
373498    +      label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
373499    +
373500    +      label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
373501    +
373502    +      label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
373503    +
373504    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
373505    +
373506    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
373507    +
373508    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
373509    +
373510    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
373511    +
373512    +      label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
373513    +
373514    +      label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
373515    +
373516    +      label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
373517    +
373518    +      label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
373519    +
373520    +      label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
373521    +
373522    +      label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
373523    +
373524    +      label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
373525    +
373526    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
373527    +
373528    +*** Generate dummy variables for G_Contacts_Count_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Contacts_Count_12_mon ;
373529    +drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
373530    +        G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
373531    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
373532    +G_Contacts_Count_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 0;
373533    +G_Contacts_Count_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 0;
373534    +G_Contacts_Count_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 0;
373535    +G_Contacts_Count_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 0;
373536    +if missing( G_Contacts_Count_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Contacts_Count_12_mon ) then do;
373537    +   G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
373538    +   G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
373539    +   G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
373540    +   G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
373541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373543    +end;
MPRINT(EM_DIAGRAM):   end;
373544    +else do;
MPRINT(EM_DIAGRAM):   else do;
373545    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373546    +   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
373547    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373548    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
373549    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
373550    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
373551    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
373552    +            G_Contacts_Count_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 1;
373553    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373554    +         end;
MPRINT(EM_DIAGRAM):   end;
373555    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373556    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
373557    +               G_Contacts_Count_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 1;
373558    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373559    +            end;
MPRINT(EM_DIAGRAM):   end;
373560    +         end;
MPRINT(EM_DIAGRAM):   end;
373561    +      end;
MPRINT(EM_DIAGRAM):   end;
373562    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373563    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373564    +            G_Contacts_Count_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 1;
373565    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373566    +         end;
MPRINT(EM_DIAGRAM):   end;
373567    +      end;
MPRINT(EM_DIAGRAM):   end;
373568    +   end;
MPRINT(EM_DIAGRAM):   end;
373569    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373570    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373571    +         G_Contacts_Count_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 1;
373572    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373573    +      end;
MPRINT(EM_DIAGRAM):   end;
373574    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373575    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373576    +            G_Contacts_Count_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = -1;
373577    +            G_Contacts_Count_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = -1;
373578    +            G_Contacts_Count_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = -1;
373579    +            G_Contacts_Count_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = -1;
373580    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373581    +         end;
MPRINT(EM_DIAGRAM):   end;
373582    +      end;
MPRINT(EM_DIAGRAM):   end;
373583    +   end;
MPRINT(EM_DIAGRAM):   end;
373584    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
373585    +      G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
373586    +      G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
373587    +      G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
373588    +      G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
373589    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373590    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373591    +   end;
MPRINT(EM_DIAGRAM):   end;
373592    +end;
MPRINT(EM_DIAGRAM):   end;
373593    +
373594    +*** Generate dummy variables for G_Customer_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Customer_Age ;
373595    +drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
373596    +        G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7
373597    +        G_Customer_Age8 G_Customer_Age9 ;
MPRINT(EM_DIAGRAM):   drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7 G_Customer_Age8
G_Customer_Age9 ;
373598    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
373599    +G_Customer_Age0 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 0;
373600    +G_Customer_Age1 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 0;
373601    +G_Customer_Age2 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 0;
373602    +G_Customer_Age3 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 0;
373603    +G_Customer_Age4 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 0;
373604    +G_Customer_Age5 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 0;
373605    +G_Customer_Age6 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 0;
373606    +G_Customer_Age7 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 0;
373607    +G_Customer_Age8 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 0;
373608    +G_Customer_Age9 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 0;
373609    +if missing( G_Customer_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Customer_Age ) then do;
373610    +   G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
373611    +   G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
373612    +   G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
373613    +   G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
373614    +   G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
373615    +   G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
373616    +   G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
373617    +   G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
373618    +   G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
373619    +   G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
373620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373622    +end;
MPRINT(EM_DIAGRAM):   end;
373623    +else do;
MPRINT(EM_DIAGRAM):   else do;
373624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373625    +   _dm12 = put( G_Customer_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Customer_Age , BEST12. );
373626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373627    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
373628    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
373629    +      if _dm12 <= '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '10' then do;
373630    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
373631    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
373632    +               G_Customer_Age0 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 1;
373633    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373634    +            end;
MPRINT(EM_DIAGRAM):   end;
373635    +            else do;
MPRINT(EM_DIAGRAM):   else do;
373636    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
373637    +                  G_Customer_Age1 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 1;
373638    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373639    +               end;
MPRINT(EM_DIAGRAM):   end;
373640    +            end;
MPRINT(EM_DIAGRAM):   end;
373641    +         end;
MPRINT(EM_DIAGRAM):   end;
373642    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373643    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
373644    +               G_Customer_Age0 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = -1;
373645    +               G_Customer_Age1 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = -1;
373646    +               G_Customer_Age2 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = -1;
373647    +               G_Customer_Age3 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = -1;
373648    +               G_Customer_Age4 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = -1;
373649    +               G_Customer_Age5 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = -1;
373650    +               G_Customer_Age6 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = -1;
373651    +               G_Customer_Age7 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = -1;
373652    +               G_Customer_Age8 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = -1;
373653    +               G_Customer_Age9 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = -1;
373654    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373655    +            end;
MPRINT(EM_DIAGRAM):   end;
373656    +         end;
MPRINT(EM_DIAGRAM):   end;
373657    +      end;
MPRINT(EM_DIAGRAM):   end;
373658    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373659    +         if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
373660    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373661    +               G_Customer_Age2 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 1;
373662    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373663    +            end;
MPRINT(EM_DIAGRAM):   end;
373664    +            else do;
MPRINT(EM_DIAGRAM):   else do;
373665    +               if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373666    +                  G_Customer_Age3 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 1;
373667    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373668    +               end;
MPRINT(EM_DIAGRAM):   end;
373669    +            end;
MPRINT(EM_DIAGRAM):   end;
373670    +         end;
MPRINT(EM_DIAGRAM):   end;
373671    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373672    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373673    +               G_Customer_Age4 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 1;
373674    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373675    +            end;
MPRINT(EM_DIAGRAM):   end;
373676    +         end;
MPRINT(EM_DIAGRAM):   end;
373677    +      end;
MPRINT(EM_DIAGRAM):   end;
373678    +   end;
MPRINT(EM_DIAGRAM):   end;
373679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373680    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
373681    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
373682    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373683    +               G_Customer_Age5 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 1;
373684    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373685    +            end;
MPRINT(EM_DIAGRAM):   end;
373686    +            else do;
MPRINT(EM_DIAGRAM):   else do;
373687    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
373688    +                  G_Customer_Age6 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 1;
373689    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373690    +               end;
MPRINT(EM_DIAGRAM):   end;
373691    +            end;
MPRINT(EM_DIAGRAM):   end;
373692    +         end;
MPRINT(EM_DIAGRAM):   end;
373693    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373694    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
373695    +               G_Customer_Age7 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 1;
373696    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373697    +            end;
MPRINT(EM_DIAGRAM):   end;
373698    +         end;
MPRINT(EM_DIAGRAM):   end;
373699    +      end;
MPRINT(EM_DIAGRAM):   end;
373700    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373701    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
373702    +            G_Customer_Age8 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 1;
373703    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373704    +         end;
MPRINT(EM_DIAGRAM):   end;
373705    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373706    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
373707    +               G_Customer_Age9 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 1;
373708    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373709    +            end;
MPRINT(EM_DIAGRAM):   end;
373710    +         end;
MPRINT(EM_DIAGRAM):   end;
373711    +      end;
MPRINT(EM_DIAGRAM):   end;
373712    +   end;
MPRINT(EM_DIAGRAM):   end;
373713    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
373714    +      G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
373715    +      G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
373716    +      G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
373717    +      G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
373718    +      G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
373719    +      G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
373720    +      G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
373721    +      G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
373722    +      G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
373723    +      G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
373724    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373725    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373726    +   end;
MPRINT(EM_DIAGRAM):   end;
373727    +end;
MPRINT(EM_DIAGRAM):   end;
373728    +
373729    +*** Generate dummy variables for G_Months_Inactive_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_Inactive_12_mon ;
373730    +drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
373731    +        G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
373732    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
373733    +G_Months_Inactive_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 0;
373734    +G_Months_Inactive_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 0;
373735    +G_Months_Inactive_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 0;
373736    +G_Months_Inactive_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 0;
373737    +if missing( G_Months_Inactive_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_Inactive_12_mon ) then do;
373738    +   G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
373739    +   G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
373740    +   G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
373741    +   G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
373742    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373743    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373744    +end;
MPRINT(EM_DIAGRAM):   end;
373745    +else do;
MPRINT(EM_DIAGRAM):   else do;
373746    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373747    +   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
373748    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373749    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
373750    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
373751    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
373752    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
373753    +            G_Months_Inactive_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 1;
373754    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373755    +         end;
MPRINT(EM_DIAGRAM):   end;
373756    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373757    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
373758    +               G_Months_Inactive_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 1;
373759    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373760    +            end;
MPRINT(EM_DIAGRAM):   end;
373761    +         end;
MPRINT(EM_DIAGRAM):   end;
373762    +      end;
MPRINT(EM_DIAGRAM):   end;
373763    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373764    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373765    +            G_Months_Inactive_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 1;
373766    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373767    +         end;
MPRINT(EM_DIAGRAM):   end;
373768    +      end;
MPRINT(EM_DIAGRAM):   end;
373769    +   end;
MPRINT(EM_DIAGRAM):   end;
373770    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373771    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373772    +         G_Months_Inactive_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 1;
373773    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373774    +      end;
MPRINT(EM_DIAGRAM):   end;
373775    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373776    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373777    +            G_Months_Inactive_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = -1;
373778    +            G_Months_Inactive_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = -1;
373779    +            G_Months_Inactive_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = -1;
373780    +            G_Months_Inactive_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = -1;
373781    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373782    +         end;
MPRINT(EM_DIAGRAM):   end;
373783    +      end;
MPRINT(EM_DIAGRAM):   end;
373784    +   end;
MPRINT(EM_DIAGRAM):   end;
373785    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
373786    +      G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
373787    +      G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
373788    +      G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
373789    +      G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
373790    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373791    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373792    +   end;
MPRINT(EM_DIAGRAM):   end;
373793    +end;
MPRINT(EM_DIAGRAM):   end;
373794    +
373795    +*** Generate dummy variables for G_Months_on_book ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_on_book ;
373796    +drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2 G_Months_on_book3
373797    +        G_Months_on_book4 G_Months_on_book5 G_Months_on_book6
373798    +        G_Months_on_book7 ;
MPRINT(EM_DIAGRAM):   drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2
G_Months_on_book3 G_Months_on_book4 G_Months_on_book5 G_Months_on_book6 G_Months_on_book7 ;
373799    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
373800    +G_Months_on_book0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 0;
373801    +G_Months_on_book1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 0;
373802    +G_Months_on_book2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 0;
373803    +G_Months_on_book3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 0;
373804    +G_Months_on_book4 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 0;
373805    +G_Months_on_book5 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 0;
373806    +G_Months_on_book6 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 0;
373807    +G_Months_on_book7 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 0;
373808    +if missing( G_Months_on_book ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_on_book ) then do;
373809    +   G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
373810    +   G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
373811    +   G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
373812    +   G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
373813    +   G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
373814    +   G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
373815    +   G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
373816    +   G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
373817    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373818    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373819    +end;
MPRINT(EM_DIAGRAM):   end;
373820    +else do;
MPRINT(EM_DIAGRAM):   else do;
373821    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373822    +   _dm12 = put( G_Months_on_book , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_on_book , BEST12. );
373823    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373824    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
373825    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
373826    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
373827    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
373828    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
373829    +               G_Months_on_book0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 1;
373830    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373831    +            end;
MPRINT(EM_DIAGRAM):   end;
373832    +            else do;
MPRINT(EM_DIAGRAM):   else do;
373833    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
373834    +                  G_Months_on_book1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 1;
373835    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373836    +               end;
MPRINT(EM_DIAGRAM):   end;
373837    +            end;
MPRINT(EM_DIAGRAM):   end;
373838    +         end;
MPRINT(EM_DIAGRAM):   end;
373839    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373840    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373841    +               G_Months_on_book2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 1;
373842    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373843    +            end;
MPRINT(EM_DIAGRAM):   end;
373844    +         end;
MPRINT(EM_DIAGRAM):   end;
373845    +      end;
MPRINT(EM_DIAGRAM):   end;
373846    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373847    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373848    +            G_Months_on_book3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 1;
373849    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373850    +         end;
MPRINT(EM_DIAGRAM):   end;
373851    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373852    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373853    +               G_Months_on_book4 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 1;
373854    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373855    +            end;
MPRINT(EM_DIAGRAM):   end;
373856    +         end;
MPRINT(EM_DIAGRAM):   end;
373857    +      end;
MPRINT(EM_DIAGRAM):   end;
373858    +   end;
MPRINT(EM_DIAGRAM):   end;
373859    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373860    +      if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
373861    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373862    +            G_Months_on_book5 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 1;
373863    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373864    +         end;
MPRINT(EM_DIAGRAM):   end;
373865    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373866    +            if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
373867    +               G_Months_on_book6 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 1;
373868    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373869    +            end;
MPRINT(EM_DIAGRAM):   end;
373870    +         end;
MPRINT(EM_DIAGRAM):   end;
373871    +      end;
MPRINT(EM_DIAGRAM):   end;
373872    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373873    +         if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
373874    +            G_Months_on_book7 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 1;
373875    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373876    +         end;
MPRINT(EM_DIAGRAM):   end;
373877    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373878    +            if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
373879    +               G_Months_on_book0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = -1;
373880    +               G_Months_on_book1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = -1;
373881    +               G_Months_on_book2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = -1;
373882    +               G_Months_on_book3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = -1;
373883    +               G_Months_on_book4 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = -1;
373884    +               G_Months_on_book5 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = -1;
373885    +               G_Months_on_book6 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = -1;
373886    +               G_Months_on_book7 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = -1;
373887    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373888    +            end;
MPRINT(EM_DIAGRAM):   end;
373889    +         end;
MPRINT(EM_DIAGRAM):   end;
373890    +      end;
MPRINT(EM_DIAGRAM):   end;
373891    +   end;
MPRINT(EM_DIAGRAM):   end;
373892    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
373893    +      G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
373894    +      G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
373895    +      G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
373896    +      G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
373897    +      G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
373898    +      G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
373899    +      G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
373900    +      G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
373901    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373902    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373903    +   end;
MPRINT(EM_DIAGRAM):   end;
373904    +end;
MPRINT(EM_DIAGRAM):   end;
373905    +
373906    +*** Generate dummy variables for G_Total_Relationship_Count ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Relationship_Count ;
373907    +drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
373908    +if missing( G_Total_Relationship_Count ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Relationship_Count ) then do;
373909    +   G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
373910    +   G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
373911    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373912    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373913    +end;
MPRINT(EM_DIAGRAM):   end;
373914    +else do;
MPRINT(EM_DIAGRAM):   else do;
373915    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373916    +   _dm12 = put( G_Total_Relationship_Count , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Relationship_Count , BEST12. );
373917    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373918    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373919    +      G_Total_Relationship_Count0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = -1;
373920    +      G_Total_Relationship_Count1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = -1;
373921    +   end;
MPRINT(EM_DIAGRAM):   end;
373922    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
373923    +      G_Total_Relationship_Count0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 0;
373924    +      G_Total_Relationship_Count1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 1;
373925    +   end;
MPRINT(EM_DIAGRAM):   end;
373926    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
373927    +      G_Total_Relationship_Count0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 1;
373928    +      G_Total_Relationship_Count1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 0;
373929    +   end;
MPRINT(EM_DIAGRAM):   end;
373930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373931    +      G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
373932    +      G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
373933    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373934    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373935    +   end;
MPRINT(EM_DIAGRAM):   end;
373936    +end;
MPRINT(EM_DIAGRAM):   end;
373937    +
373938    +*** Generate dummy variables for G_Total_Trans_Ct ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Trans_Ct ;
373939    +drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2 G_Total_Trans_Ct3
373940    +        G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2
G_Total_Trans_Ct3 G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
373941    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
373942    +G_Total_Trans_Ct0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 0;
373943    +G_Total_Trans_Ct1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 0;
373944    +G_Total_Trans_Ct2 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 0;
373945    +G_Total_Trans_Ct3 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 0;
373946    +G_Total_Trans_Ct4 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 0;
373947    +G_Total_Trans_Ct5 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 0;
373948    +G_Total_Trans_Ct6 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 0;
373949    +if missing( G_Total_Trans_Ct ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Trans_Ct ) then do;
373950    +   G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
373951    +   G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
373952    +   G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
373953    +   G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
373954    +   G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
373955    +   G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
373956    +   G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
373957    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373959    +end;
MPRINT(EM_DIAGRAM):   end;
373960    +else do;
MPRINT(EM_DIAGRAM):   else do;
373961    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373962    +   _dm12 = put( G_Total_Trans_Ct , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Trans_Ct , BEST12. );
373963    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373964    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
373965    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
373966    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
373967    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
373968    +            G_Total_Trans_Ct0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 1;
373969    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373970    +         end;
MPRINT(EM_DIAGRAM):   end;
373971    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373972    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
373973    +               G_Total_Trans_Ct1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 1;
373974    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373975    +            end;
MPRINT(EM_DIAGRAM):   end;
373976    +         end;
MPRINT(EM_DIAGRAM):   end;
373977    +      end;
MPRINT(EM_DIAGRAM):   end;
373978    +      else do;
MPRINT(EM_DIAGRAM):   else do;
373979    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373980    +            G_Total_Trans_Ct2 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 1;
373981    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373982    +         end;
MPRINT(EM_DIAGRAM):   end;
373983    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373984    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373985    +               G_Total_Trans_Ct3 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 1;
373986    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373987    +            end;
MPRINT(EM_DIAGRAM):   end;
373988    +         end;
MPRINT(EM_DIAGRAM):   end;
373989    +      end;
MPRINT(EM_DIAGRAM):   end;
373990    +   end;
MPRINT(EM_DIAGRAM):   end;
373991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373992    +      if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
373993    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373994    +            G_Total_Trans_Ct4 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 1;
373995    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
373996    +         end;
MPRINT(EM_DIAGRAM):   end;
373997    +         else do;
MPRINT(EM_DIAGRAM):   else do;
373998    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373999    +               G_Total_Trans_Ct5 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 1;
374000    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374001    +            end;
MPRINT(EM_DIAGRAM):   end;
374002    +         end;
MPRINT(EM_DIAGRAM):   end;
374003    +      end;
MPRINT(EM_DIAGRAM):   end;
374004    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374005    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
374006    +            G_Total_Trans_Ct6 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 1;
374007    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374008    +         end;
MPRINT(EM_DIAGRAM):   end;
374009    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374010    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
374011    +               G_Total_Trans_Ct0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = -1;
374012    +               G_Total_Trans_Ct1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = -1;
374013    +               G_Total_Trans_Ct2 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = -1;
374014    +               G_Total_Trans_Ct3 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = -1;
374015    +               G_Total_Trans_Ct4 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = -1;
374016    +               G_Total_Trans_Ct5 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = -1;
374017    +               G_Total_Trans_Ct6 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = -1;
374018    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374019    +            end;
MPRINT(EM_DIAGRAM):   end;
374020    +         end;
MPRINT(EM_DIAGRAM):   end;
374021    +      end;
MPRINT(EM_DIAGRAM):   end;
374022    +   end;
MPRINT(EM_DIAGRAM):   end;
374023    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
374024    +      G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
374025    +      G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
374026    +      G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
374027    +      G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
374028    +      G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
374029    +      G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
374030    +      G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
374031    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374032    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374033    +   end;
MPRINT(EM_DIAGRAM):   end;
374034    +end;
MPRINT(EM_DIAGRAM):   end;
374035    +
374036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374037    +*** Checking missing input Interval
374038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
374039    +
374040    +IF NMISS(
374041    +   RANGE_LOG_Total_Trans_Amt ,
374042    +   RANGE_SQRT_Avg_Utilization_Ratio ,
374043    +   RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ,
374044    +   RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ,
374045    +   RANGE_Total_Revolving_Bal   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( RANGE_LOG_Total_Trans_Amt , RANGE_SQRT_Avg_Utilization_Ratio ,
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 , RANGE_SQRT_Total_Ct_Chng_Q4_Q1 , RANGE_Total_Revolving_Bal )
THEN DO;
374046    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
374047    +
374048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374049    +END;
MPRINT(EM_DIAGRAM):   END;
374050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374051    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
374052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374053    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374054    +   S_RANGE_LOG_Total_Trans_Amt
374055    +          =    -1.34747068578628 +      5.0128535511494 *
374056    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
374057    +   S_RANGE_SQRT_Avg_Utilization_Rat
374058    +          =    -1.34502734827526 +     3.19469433649726 *
374059    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 + 3.19469433649726
* RANGE_SQRT_Avg_Utilization_Ratio ;
374060    +   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374061    +          =    -7.21426643857002 +     15.4166020949803 *
374062    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 + 15.4166020949803
* RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
374063    +   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374064    +          =    -6.16155815683527 +     14.2791680762335 *
374065    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 + 14.2791680762335
* RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
374066    +   S_RANGE_Total_Revolving_Bal
374067    +          =    -1.43123481780808 +     3.09032113107013 *
374068    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013 *
RANGE_Total_Revolving_Bal ;
374069    +END;
MPRINT(EM_DIAGRAM):   END;
374070    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374071    +   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
374072    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
= . ;
374073    +   ELSE S_RANGE_LOG_Total_Trans_Amt
374074    +          =    -1.34747068578628 +      5.0128535511494 *
374075    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
374076    +   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
374077    +        S_RANGE_SQRT_Avg_Utilization_Rat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
S_RANGE_SQRT_Avg_Utilization_Rat = . ;
374078    +   ELSE S_RANGE_SQRT_Avg_Utilization_Rat
374079    +          =    -1.34502734827526 +     3.19469433649726 *
374080    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 +
3.19469433649726 * RANGE_SQRT_Avg_Utilization_Ratio ;
374081    +   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
374082    +        S_RANGE_SQRT_Total_Amt_Chng_Q4_Q  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = . ;
374083    +   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374084    +          =    -7.21426643857002 +     15.4166020949803 *
374085    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 +
15.4166020949803 * RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
374086    +   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
374087    +        S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = . ;
374088    +   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374089    +          =    -6.16155815683527 +     14.2791680762335 *
374090    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 +
14.2791680762335 * RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
374091    +   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
374092    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
= . ;
374093    +   ELSE S_RANGE_Total_Revolving_Bal
374094    +          =    -1.43123481780808 +     3.09032113107013 *
374095    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013
* RANGE_Total_Revolving_Bal ;
374096    +END;
MPRINT(EM_DIAGRAM):   END;
374097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374098    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
374099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374101    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
374102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374103    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374104    +   H1x1_1  =     1.02501964860994 * S_RANGE_LOG_Total_Trans_Amt
374105    +          +     0.30125997647147 * S_RANGE_SQRT_Avg_Utilization_Rat
374106    +          +     0.23244197886313 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374107    +          +     -0.1186861071534 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374108    +          +    -2.97931719831362 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.02501964860994 * S_RANGE_LOG_Total_Trans_Amt +
0.30125997647147 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.23244197886313 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.1186861071534 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-2.97931719831362 * S_RANGE_Total_Revolving_Bal ;
374109    +   H1x1_2  =    -0.95198389903237 * S_RANGE_LOG_Total_Trans_Amt
374110    +          +    -0.16356667531156 * S_RANGE_SQRT_Avg_Utilization_Rat
374111    +          +     0.11682877242643 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374112    +          +     0.20373298002789 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374113    +          +     0.02861216680365 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.95198389903237 * S_RANGE_LOG_Total_Trans_Amt +
-0.16356667531156 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.11682877242643 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.20373298002789 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.02861216680365 * S_RANGE_Total_Revolving_Bal ;
374114    +   H1x1_1  = H1x1_1  +     2.40671499395249 * G_Contacts_Count_12_mon0
374115    +          +    -0.28604333391551 * G_Contacts_Count_12_mon1
374116    +          +    -0.65633348542709 * G_Contacts_Count_12_mon2
374117    +          +    -1.01395328713868 * G_Contacts_Count_12_mon3
374118    +          +     0.85960465205093 * G_Customer_Age0  +     0.05121480560908 *
374119    +        G_Customer_Age1  +     0.07410310179315 * G_Customer_Age2
374120    +          +     0.34166223952007 * G_Customer_Age3  +     0.06870447056678 *
374121    +        G_Customer_Age4  +    -0.11676539026414 * G_Customer_Age5
374122    +          +     0.28927492204781 * G_Customer_Age6  +     0.23499226142499 *
374123    +        G_Customer_Age7  +    -0.11493422026684 * G_Customer_Age8
374124    +          +      -1.747811086948 * G_Customer_Age9  +    -1.75331030145069 *
374125    +        G_Months_Inactive_12_mon0  +     0.71391443696804 *
374126    +        G_Months_Inactive_12_mon1  +      0.3345243422843 *
374127    +        G_Months_Inactive_12_mon2  +      0.4696045512812 *
374128    +        G_Months_Inactive_12_mon3  +     0.45485139833883 * G_Months_on_book0
374129    +          +     0.39911195244105 * G_Months_on_book1
374130    +          +    -0.44963865252838 * G_Months_on_book2
374131    +          +     0.10698249012831 * G_Months_on_book3
374132    +          +     0.22008108873992 * G_Months_on_book4
374133    +          +     0.28392109419284 * G_Months_on_book5
374134    +          +     -0.3013014569746 * G_Months_on_book6
374135    +          +     0.15608132241029 * G_Months_on_book7
374136    +          +     0.31679963195245 * G_Total_Relationship_Count0
374137    +          +    -0.17244128327697 * G_Total_Relationship_Count1
374138    +          +     0.64194280071474 * G_Total_Trans_Ct0
374139    +          +     1.13181256946841 * G_Total_Trans_Ct1
374140    +          +     0.97686269686271 * G_Total_Trans_Ct2
374141    +          +     0.98717016810806 * G_Total_Trans_Ct3
374142    +          +     0.16424164762715 * G_Total_Trans_Ct4
374143    +          +     0.72187096755953 * G_Total_Trans_Ct5
374144    +          +    -1.97148427169564 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.40671499395249 * G_Contacts_Count_12_mon0 +
-0.28604333391551 * G_Contacts_Count_12_mon1 + -0.65633348542709 * G_Contacts_Count_12_mon2 +
-1.01395328713868 * G_Contacts_Count_12_mon3 + 0.85960465205093 * G_Customer_Age0 +
0.05121480560908 * G_Customer_Age1 + 0.07410310179315 * G_Customer_Age2 + 0.34166223952007 *
G_Customer_Age3 + 0.06870447056678 * G_Customer_Age4 + -0.11676539026414 * G_Customer_Age5 +
0.28927492204781 * G_Customer_Age6 + 0.23499226142499 * G_Customer_Age7 + -0.11493422026684 *
G_Customer_Age8 + -1.747811086948 * G_Customer_Age9 + -1.75331030145069 *
G_Months_Inactive_12_mon0 + 0.71391443696804 * G_Months_Inactive_12_mon1 + 0.3345243422843 *
G_Months_Inactive_12_mon2 + 0.4696045512812 * G_Months_Inactive_12_mon3 + 0.45485139833883 *
G_Months_on_book0 + 0.39911195244105 * G_Months_on_book1 + -0.44963865252838 *
G_Months_on_book2 + 0.10698249012831 * G_Months_on_book3 + 0.22008108873992 *
G_Months_on_book4 + 0.28392109419284 * G_Months_on_book5 + -0.3013014569746 *
G_Months_on_book6 + 0.15608132241029 * G_Months_on_book7 + 0.31679963195245 *
G_Total_Relationship_Count0 + -0.17244128327697 * G_Total_Relationship_Count1 +
0.64194280071474 * G_Total_Trans_Ct0 + 1.13181256946841 * G_Total_Trans_Ct1 + 0.97686269686271
* G_Total_Trans_Ct2 + 0.98717016810806 * G_Total_Trans_Ct3 + 0.16424164762715 *
G_Total_Trans_Ct4 + 0.72187096755953 * G_Total_Trans_Ct5 + -1.97148427169564 *
G_Total_Trans_Ct6 ;
374145    +   H1x1_2  = H1x1_2  +       -3.11569913609 * G_Contacts_Count_12_mon0
374146    +          +     0.55463007561471 * G_Contacts_Count_12_mon1
374147    +          +     0.86789725339798 * G_Contacts_Count_12_mon2
374148    +          +     0.83343929891411 * G_Contacts_Count_12_mon3
374149    +          +    -0.95250865316681 * G_Customer_Age0  +    -0.20153360153754 *
374150    +        G_Customer_Age1  +    -0.13395945037511 * G_Customer_Age2
374151    +          +    -0.16566544227004 * G_Customer_Age3  +     -0.0620673520045 *
374152    +        G_Customer_Age4  +    -0.17864972110492 * G_Customer_Age5
374153    +          +    -0.03983418838966 * G_Customer_Age6  +    -0.03191322178204 *
374154    +        G_Customer_Age7  +     0.11505624722812 * G_Customer_Age8
374155    +          +     0.57109255297529 * G_Customer_Age9  +    -0.87036174573518 *
374156    +        G_Months_Inactive_12_mon0  +     0.07164716186277 *
374157    +        G_Months_Inactive_12_mon1  +     0.17818319570595 *
374158    +        G_Months_Inactive_12_mon2  +     0.21942633339221 *
374159    +        G_Months_Inactive_12_mon3  +     0.03310063502739 * G_Months_on_book0
374160    +          +    -0.46458200938733 * G_Months_on_book1
374161    +          +    -0.04269630807226 * G_Months_on_book2
374162    +          +     0.01759018538732 * G_Months_on_book3
374163    +          +     0.11272864233309 * G_Months_on_book4
374164    +          +     0.05384941545576 * G_Months_on_book5
374165    +          +     0.02571962139521 * G_Months_on_book6
374166    +          +     0.20452595693382 * G_Months_on_book7
374167    +          +    -0.19840105547444 * G_Total_Relationship_Count0
374168    +          +     0.14283649235279 * G_Total_Relationship_Count1
374169    +          +    -2.38920084655518 * G_Total_Trans_Ct0
374170    +          +    -0.75544993192888 * G_Total_Trans_Ct1
374171    +          +    -0.72964558743549 * G_Total_Trans_Ct2
374172    +          +    -0.61944349469073 * G_Total_Trans_Ct3
374173    +          +    -0.41739064945083 * G_Total_Trans_Ct4
374174    +          +    -0.03013125081655 * G_Total_Trans_Ct5
374175    +          +     0.41065071348614 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -3.11569913609 * G_Contacts_Count_12_mon0 +
0.55463007561471 * G_Contacts_Count_12_mon1 + 0.86789725339798 * G_Contacts_Count_12_mon2 +
0.83343929891411 * G_Contacts_Count_12_mon3 + -0.95250865316681 * G_Customer_Age0 +
-0.20153360153754 * G_Customer_Age1 + -0.13395945037511 * G_Customer_Age2 + -0.16566544227004
* G_Customer_Age3 + -0.0620673520045 * G_Customer_Age4 + -0.17864972110492 * G_Customer_Age5 +
-0.03983418838966 * G_Customer_Age6 + -0.03191322178204 * G_Customer_Age7 + 0.11505624722812 *
G_Customer_Age8 + 0.57109255297529 * G_Customer_Age9 + -0.87036174573518 *
G_Months_Inactive_12_mon0 + 0.07164716186277 * G_Months_Inactive_12_mon1 + 0.17818319570595 *
G_Months_Inactive_12_mon2 + 0.21942633339221 * G_Months_Inactive_12_mon3 + 0.03310063502739 *
G_Months_on_book0 + -0.46458200938733 * G_Months_on_book1 + -0.04269630807226 *
G_Months_on_book2 + 0.01759018538732 * G_Months_on_book3 + 0.11272864233309 *
G_Months_on_book4 + 0.05384941545576 * G_Months_on_book5 + 0.02571962139521 *
G_Months_on_book6 + 0.20452595693382 * G_Months_on_book7 + -0.19840105547444 *
G_Total_Relationship_Count0 + 0.14283649235279 * G_Total_Relationship_Count1 +
-2.38920084655518 * G_Total_Trans_Ct0 + -0.75544993192888 * G_Total_Trans_Ct1 +
-0.72964558743549 * G_Total_Trans_Ct2 + -0.61944349469073 * G_Total_Trans_Ct3 +
-0.41739064945083 * G_Total_Trans_Ct4 + -0.03013125081655 * G_Total_Trans_Ct5 +
0.41065071348614 * G_Total_Trans_Ct6 ;
374176    +   H1x1_1  =    -1.40436708245126 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.40436708245126 + H1x1_1 ;
374177    +   H1x1_2  =    -0.62244542562102 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62244542562102 + H1x1_2 ;
374178    +   H1x1_1  = TANH(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = TANH(H1x1_1 );
374179    +   H1x1_2  = TANH(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = TANH(H1x1_2 );
374180    +END;
MPRINT(EM_DIAGRAM):   END;
374181    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374182    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
374183    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
374184    +END;
MPRINT(EM_DIAGRAM):   END;
374185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374186    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
374187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374188    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374189    +   H1x2_1  =     0.34659311824578 * S_RANGE_LOG_Total_Trans_Amt
374190    +          +      -2.853271161796 * S_RANGE_SQRT_Avg_Utilization_Rat
374191    +          +    -2.57518066438565 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374192    +          +     0.81279997821052 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374193    +          +     0.61085756295407 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.34659311824578 * S_RANGE_LOG_Total_Trans_Amt +
-2.853271161796 * S_RANGE_SQRT_Avg_Utilization_Rat + -2.57518066438565 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.81279997821052 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.61085756295407 * S_RANGE_Total_Revolving_Bal ;
374194    +   H1x2_2  =    -0.93866568010483 * S_RANGE_LOG_Total_Trans_Amt
374195    +          +      0.0621508860157 * S_RANGE_SQRT_Avg_Utilization_Rat
374196    +          +     0.81058548555497 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374197    +          +    -0.44824766946914 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374198    +          +    -0.47053902310597 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.93866568010483 * S_RANGE_LOG_Total_Trans_Amt +
0.0621508860157 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.81058548555497 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.44824766946914 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.47053902310597 * S_RANGE_Total_Revolving_Bal ;
374199    +   H1x2_1  = H1x2_1  +     0.71400513216767 * G_Contacts_Count_12_mon0
374200    +          +     0.92110780972835 * G_Contacts_Count_12_mon1
374201    +          +      0.3629668816764 * G_Contacts_Count_12_mon2
374202    +          +    -0.76435790327487 * G_Contacts_Count_12_mon3
374203    +          +     0.54626705501872 * G_Customer_Age0  +    -0.38925455254039 *
374204    +        G_Customer_Age1  +    -0.33241651106823 * G_Customer_Age2
374205    +          +    -1.15895365580622 * G_Customer_Age3  +     1.03208806982955 *
374206    +        G_Customer_Age4  +     0.56450431682696 * G_Customer_Age5
374207    +          +    -0.46180185966695 * G_Customer_Age6  +     2.06449433187004 *
374208    +        G_Customer_Age7  +     1.34602734238407 * G_Customer_Age8
374209    +          +    -0.12998191802167 * G_Customer_Age9  +     0.90239304334566 *
374210    +        G_Months_Inactive_12_mon0  +    -0.57705712485771 *
374211    +        G_Months_Inactive_12_mon1  +     0.20537489416112 *
374212    +        G_Months_Inactive_12_mon2  +    -0.49514361515621 *
374213    +        G_Months_Inactive_12_mon3  +    -0.32788082970898 * G_Months_on_book0
374214    +          +     0.39208442279716 * G_Months_on_book1
374215    +          +     0.32578211410595 * G_Months_on_book2
374216    +          +     0.51936552147334 * G_Months_on_book3
374217    +          +    -1.21996861431241 * G_Months_on_book4
374218    +          +    -0.79511599891093 * G_Months_on_book5
374219    +          +    -0.34474328383204 * G_Months_on_book6
374220    +          +    -2.57829235432067 * G_Months_on_book7
374221    +          +    -0.22957069127939 * G_Total_Relationship_Count0
374222    +          +     0.48708741281952 * G_Total_Relationship_Count1
374223    +          +    -0.20439350866799 * G_Total_Trans_Ct0
374224    +          +    -1.53642603362521 * G_Total_Trans_Ct1
374225    +          +    -0.25605051972162 * G_Total_Trans_Ct2
374226    +          +    -0.09346705616277 * G_Total_Trans_Ct3
374227    +          +     0.29244537978438 * G_Total_Trans_Ct4
374228    +          +     1.10332787181309 * G_Total_Trans_Ct5
374229    +          +     1.05459273095253 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.71400513216767 * G_Contacts_Count_12_mon0 +
0.92110780972835 * G_Contacts_Count_12_mon1 + 0.3629668816764 * G_Contacts_Count_12_mon2 +
-0.76435790327487 * G_Contacts_Count_12_mon3 + 0.54626705501872 * G_Customer_Age0 +
-0.38925455254039 * G_Customer_Age1 + -0.33241651106823 * G_Customer_Age2 + -1.15895365580622
* G_Customer_Age3 + 1.03208806982955 * G_Customer_Age4 + 0.56450431682696 * G_Customer_Age5 +
-0.46180185966695 * G_Customer_Age6 + 2.06449433187004 * G_Customer_Age7 + 1.34602734238407 *
G_Customer_Age8 + -0.12998191802167 * G_Customer_Age9 + 0.90239304334566 *
G_Months_Inactive_12_mon0 + -0.57705712485771 * G_Months_Inactive_12_mon1 + 0.20537489416112 *
G_Months_Inactive_12_mon2 + -0.49514361515621 * G_Months_Inactive_12_mon3 + -0.32788082970898
* G_Months_on_book0 + 0.39208442279716 * G_Months_on_book1 + 0.32578211410595 *
G_Months_on_book2 + 0.51936552147334 * G_Months_on_book3 + -1.21996861431241 *
G_Months_on_book4 + -0.79511599891093 * G_Months_on_book5 + -0.34474328383204 *
G_Months_on_book6 + -2.57829235432067 * G_Months_on_book7 + -0.22957069127939 *
G_Total_Relationship_Count0 + 0.48708741281952 * G_Total_Relationship_Count1 +
-0.20439350866799 * G_Total_Trans_Ct0 + -1.53642603362521 * G_Total_Trans_Ct1 +
-0.25605051972162 * G_Total_Trans_Ct2 + -0.09346705616277 * G_Total_Trans_Ct3 +
0.29244537978438 * G_Total_Trans_Ct4 + 1.10332787181309 * G_Total_Trans_Ct5 + 1.05459273095253
* G_Total_Trans_Ct6 ;
374230    +   H1x2_2  = H1x2_2  +    -0.74054226776565 * G_Contacts_Count_12_mon0
374231    +          +     0.25988400090888 * G_Contacts_Count_12_mon1
374232    +          +     0.36052880436315 * G_Contacts_Count_12_mon2
374233    +          +      1.2433826357089 * G_Contacts_Count_12_mon3
374234    +          +    -0.27615383177284 * G_Customer_Age0  +     0.53383540020492 *
374235    +        G_Customer_Age1  +    -1.54528759740368 * G_Customer_Age2
374236    +          +     0.16347425548076 * G_Customer_Age3  +    -1.83494882792742 *
374237    +        G_Customer_Age4  +     0.07542541730265 * G_Customer_Age5
374238    +          +      1.3274294957122 * G_Customer_Age6  +    -0.19652227566702 *
374239    +        G_Customer_Age7  +     1.17416887757193 * G_Customer_Age8
374240    +          +    -0.67757642607906 * G_Customer_Age9  +    -0.23841243791319 *
374241    +        G_Months_Inactive_12_mon0  +     0.17419249230621 *
374242    +        G_Months_Inactive_12_mon1  +    -1.32654545796903 *
374243    +        G_Months_Inactive_12_mon2  +    -0.17840288252074 *
374244    +        G_Months_Inactive_12_mon3  +     -1.3435001500078 * G_Months_on_book0
374245    +          +    -1.71551288230779 * G_Months_on_book1
374246    +          +    -0.45437716209274 * G_Months_on_book2
374247    +          +     0.20533045705777 * G_Months_on_book3
374248    +          +     0.35509066616616 * G_Months_on_book4
374249    +          +    -0.57998503526656 * G_Months_on_book5
374250    +          +     1.05551310369074 * G_Months_on_book6
374251    +          +    -1.65575396359379 * G_Months_on_book7
374252    +          +     0.39647475519458 * G_Total_Relationship_Count0
374253    +          +     0.73363930002586 * G_Total_Relationship_Count1
374254    +          +     0.93243970501905 * G_Total_Trans_Ct0
374255    +          +    -0.05888635699865 * G_Total_Trans_Ct1
374256    +          +     0.76141941519989 * G_Total_Trans_Ct2
374257    +          +     0.27602418707378 * G_Total_Trans_Ct3
374258    +          +       0.313462073547 * G_Total_Trans_Ct4
374259    +          +     1.64625003255342 * G_Total_Trans_Ct5
374260    +          +     2.07977868728295 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.74054226776565 * G_Contacts_Count_12_mon0 +
0.25988400090888 * G_Contacts_Count_12_mon1 + 0.36052880436315 * G_Contacts_Count_12_mon2 +
1.2433826357089 * G_Contacts_Count_12_mon3 + -0.27615383177284 * G_Customer_Age0 +
0.53383540020492 * G_Customer_Age1 + -1.54528759740368 * G_Customer_Age2 + 0.16347425548076 *
G_Customer_Age3 + -1.83494882792742 * G_Customer_Age4 + 0.07542541730265 * G_Customer_Age5 +
1.3274294957122 * G_Customer_Age6 + -0.19652227566702 * G_Customer_Age7 + 1.17416887757193 *
G_Customer_Age8 + -0.67757642607906 * G_Customer_Age9 + -0.23841243791319 *
G_Months_Inactive_12_mon0 + 0.17419249230621 * G_Months_Inactive_12_mon1 + -1.32654545796903 *
G_Months_Inactive_12_mon2 + -0.17840288252074 * G_Months_Inactive_12_mon3 + -1.3435001500078 *
G_Months_on_book0 + -1.71551288230779 * G_Months_on_book1 + -0.45437716209274 *
G_Months_on_book2 + 0.20533045705777 * G_Months_on_book3 + 0.35509066616616 *
G_Months_on_book4 + -0.57998503526656 * G_Months_on_book5 + 1.05551310369074 *
G_Months_on_book6 + -1.65575396359379 * G_Months_on_book7 + 0.39647475519458 *
G_Total_Relationship_Count0 + 0.73363930002586 * G_Total_Relationship_Count1 +
0.93243970501905 * G_Total_Trans_Ct0 + -0.05888635699865 * G_Total_Trans_Ct1 +
0.76141941519989 * G_Total_Trans_Ct2 + 0.27602418707378 * G_Total_Trans_Ct3 + 0.313462073547 *
G_Total_Trans_Ct4 + 1.64625003255342 * G_Total_Trans_Ct5 + 2.07977868728295 *
G_Total_Trans_Ct6 ;
374261    +   H1x2_1  =     0.44894143904256 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.44894143904256 + H1x2_1 ;
374262    +   H1x2_2  =    -1.17791753007224 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.17791753007224 + H1x2_2 ;
374263    +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
374264    +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
374265    +END;
MPRINT(EM_DIAGRAM):   END;
374266    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374267    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
374268    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
374269    +END;
MPRINT(EM_DIAGRAM):   END;
374270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374271    +*** Writing the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Attrition_Flag ;
374272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374273    +
374274    +*** Generate dummy variables for Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Attrition_Flag ;
374275    +drop Attrition_Flag1 Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   drop Attrition_Flag1 Attrition_Flag0 ;
374276    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
374277    +length F_Attrition_Flag $ 17;
MPRINT(EM_DIAGRAM):   length F_Attrition_Flag $ 17;
374278    +F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
MPRINT(EM_DIAGRAM):   F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
374279    +%DMNORMIP( F_Attrition_Flag )
MPRINT(DMNORMIP):   call dmnorm(F_Attrition_Flag,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374280    +if missing( Attrition_Flag ) then do;
MPRINT(EM_DIAGRAM):   if missing( Attrition_Flag ) then do;
374281    +   Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
374282    +   Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
374283    +end;
MPRINT(EM_DIAGRAM):   end;
374284    +else do;
MPRINT(EM_DIAGRAM):   else do;
374285    +   if F_Attrition_Flag = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_Attrition_Flag = '0' then do;
374286    +      Attrition_Flag1 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 0;
374287    +      Attrition_Flag0 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 1;
374288    +   end;
MPRINT(EM_DIAGRAM):   end;
374289    +   else if F_Attrition_Flag = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_Attrition_Flag = '1' then do;
374290    +      Attrition_Flag1 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 1;
374291    +      Attrition_Flag0 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 0;
374292    +   end;
MPRINT(EM_DIAGRAM):   end;
374293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374294    +      Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
374295    +      Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
374296    +   end;
MPRINT(EM_DIAGRAM):   end;
374297    +end;
MPRINT(EM_DIAGRAM):   end;
374298    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374299    +   P_Attrition_Flag1  =     2.66059139553414 * H1x1_1
374300    +          +    -4.72406220462279 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 2.66059139553414 * H1x1_1 + -4.72406220462279 *
H1x1_2 ;
374301    +   P_Attrition_Flag1  = P_Attrition_Flag1  +     0.01783303872814 * H1x2_1
374302    +          +     -0.0072448325809 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 + 0.01783303872814 * H1x2_1 +
-0.0072448325809 * H1x2_2 ;
374303    +   P_Attrition_Flag1  =     1.65896234349997 + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1.65896234349997 + P_Attrition_Flag1 ;
374304    +   P_Attrition_Flag0  = 0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
374305    +   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
374306    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
374307    +   P_Attrition_Flag1  = EXP(P_Attrition_Flag1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = EXP(P_Attrition_Flag1 - _MAX_);
374308    +   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
374309    +   P_Attrition_Flag0  = EXP(P_Attrition_Flag0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = EXP(P_Attrition_Flag0 - _MAX_);
374310    +   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
374311    +   P_Attrition_Flag1  = P_Attrition_Flag1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 / _SUM_;
374312    +   P_Attrition_Flag0  = P_Attrition_Flag0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = P_Attrition_Flag0 / _SUM_;
374313    +END;
MPRINT(EM_DIAGRAM):   END;
374314    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374315    +   P_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = .;
374316    +   P_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = .;
374317    +END;
MPRINT(EM_DIAGRAM):   END;
374318    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
374319    +   P_Attrition_Flag1  =      0.1606941309255;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1606941309255;
374320    +   P_Attrition_Flag0  =     0.83930586907449;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83930586907449;
374321    +END;
MPRINT(EM_DIAGRAM):   END;
374322    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
374323    +*** Writing the Residuals  of the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Attrition_Flag ;
374324    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
374325    +IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1 = . ;
374326    +ELSE R_Attrition_Flag1  = Attrition_Flag1  - P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag1 = Attrition_Flag1 - P_Attrition_Flag1 ;
374327    +IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0 = . ;
374328    +ELSE R_Attrition_Flag0  = Attrition_Flag0  - P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag0 = Attrition_Flag0 - P_Attrition_Flag0 ;
374329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374330    +*** Writing the I_Attrition_Flag  AND U_Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Attrition_Flag AND U_Attrition_Flag ;
374331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374332    +_MAXP_ = P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag1 ;
374333    +I_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "1                " ;
374334    +U_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "1                " ;
374335    +IF( _MAXP_ LT P_Attrition_Flag0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Attrition_Flag0 ) THEN DO;
374336    +   _MAXP_ = P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag0 ;
374337    +   I_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "0                " ;
374338    +   U_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "0                " ;
374339    +END;
MPRINT(EM_DIAGRAM):   END;
374340    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
374341    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
374342    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
374343    +drop
374344    +S_RANGE_LOG_Total_Trans_Amt
374345    +S_RANGE_SQRT_Avg_Utilization_Rat
374346    +S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
374347    +S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
374348    +S_RANGE_Total_Revolving_Bal
374349    +H1x1_1
374350    +H1x1_2
374351    +H1x2_1
374352    +H1x2_2
374353    +;
MPRINT(EM_DIAGRAM):   drop S_RANGE_LOG_Total_Trans_Amt S_RANGE_SQRT_Avg_Utilization_Rat
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 S_RANGE_Total_Revolving_Bal
H1x1_1 H1x1_2 H1x2_1 H1x2_2 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
374354     run;
 
NOTE: DATA STEP view saved on file EMWS1.AUTONEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
374355     quit;
374356     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
374357     filename emflow
374357   ! "D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374358     *------------------------------------------------------------*;
374359     * AutoNeural: Scoring TEST data;
374360     *------------------------------------------------------------*;
374361     data EMWS1.AutoNeural_TEST
374362     / view=EMWS1.AutoNeural_TEST
374363     ;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_TEST / view=EMWS1.AutoNeural_TEST ;
374364     set EMWS1.Part2_TEST
374365     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TEST ;
374366     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMFLOWSCORE.sas.
374367    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
374368    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
374369    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
374370    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
374371    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
374372    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
374373    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
374374    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
374375    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
374376    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
374377    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
374378    +LENGTH _WARN_ $4
374379    +      F_Attrition_Flag  $ 17
374380    +      I_Attrition_Flag  $ 17
374381    +      U_Attrition_Flag  $ 17
374382    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Attrition_Flag $ 17 I_Attrition_Flag $ 17
U_Attrition_Flag $ 17 ;
374383    +      label S_RANGE_LOG_Total_Trans_Amt =
374384    +'Standard: RANGE_LOG_Total_Trans_Amt' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_LOG_Total_Trans_Amt = 'Standard:
RANGE_LOG_Total_Trans_Amt' ;
374385    +
374386    +      label S_RANGE_SQRT_Avg_Utilization_Rat =
374387    +'Standard: RANGE_SQRT_Avg_Utilization_Ratio' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Avg_Utilization_Rat = 'Standard:
RANGE_SQRT_Avg_Utilization_Ratio' ;
374388    +
374389    +      label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q =
374390    +'Standard: RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = 'Standard:
RANGE_SQRT_Total_Amt_Chng_Q4_Q1' ;
374391    +
374392    +      label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 =
374393    +'Standard: RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = 'Standard:
RANGE_SQRT_Total_Ct_Chng_Q4_Q1' ;
374394    +
374395    +      label S_RANGE_Total_Revolving_Bal =
374396    +'Standard: RANGE_Total_Revolving_Bal' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Total_Revolving_Bal = 'Standard:
RANGE_Total_Revolving_Bal' ;
374397    +
374398    +      label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon0 = 'Dummy: G_Contacts_Count_12_mon=0' ;
374399    +
374400    +      label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon1 = 'Dummy: G_Contacts_Count_12_mon=1' ;
374401    +
374402    +      label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon2 = 'Dummy: G_Contacts_Count_12_mon=2' ;
374403    +
374404    +      label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Contacts_Count_12_mon3 = 'Dummy: G_Contacts_Count_12_mon=3' ;
374405    +
374406    +      label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age0 = 'Dummy: G_Customer_Age=0' ;
374407    +
374408    +      label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age1 = 'Dummy: G_Customer_Age=1' ;
374409    +
374410    +      label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age2 = 'Dummy: G_Customer_Age=2' ;
374411    +
374412    +      label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age3 = 'Dummy: G_Customer_Age=3' ;
374413    +
374414    +      label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age4 = 'Dummy: G_Customer_Age=4' ;
374415    +
374416    +      label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age5 = 'Dummy: G_Customer_Age=5' ;
374417    +
374418    +      label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age6 = 'Dummy: G_Customer_Age=6' ;
374419    +
374420    +      label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age7 = 'Dummy: G_Customer_Age=7' ;
374421    +
374422    +      label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age8 = 'Dummy: G_Customer_Age=8' ;
374423    +
374424    +      label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
MPRINT(EM_DIAGRAM):   label G_Customer_Age9 = 'Dummy: G_Customer_Age=9' ;
374425    +
374426    +      label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon0 = 'Dummy: G_Months_Inactive_12_mon=0' ;
374427    +
374428    +      label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon1 = 'Dummy: G_Months_Inactive_12_mon=1' ;
374429    +
374430    +      label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon2 = 'Dummy: G_Months_Inactive_12_mon=2' ;
374431    +
374432    +      label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_Inactive_12_mon3 = 'Dummy: G_Months_Inactive_12_mon=3' ;
374433    +
374434    +      label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book0 = 'Dummy: G_Months_on_book=0' ;
374435    +
374436    +      label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book1 = 'Dummy: G_Months_on_book=1' ;
374437    +
374438    +      label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book2 = 'Dummy: G_Months_on_book=2' ;
374439    +
374440    +      label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book3 = 'Dummy: G_Months_on_book=3' ;
374441    +
374442    +      label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book4 = 'Dummy: G_Months_on_book=4' ;
374443    +
374444    +      label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book5 = 'Dummy: G_Months_on_book=5' ;
374445    +
374446    +      label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book6 = 'Dummy: G_Months_on_book=6' ;
374447    +
374448    +      label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
MPRINT(EM_DIAGRAM):   label G_Months_on_book7 = 'Dummy: G_Months_on_book=7' ;
374449    +
374450    +      label G_Total_Relationship_Count0 =
374451    +'Dummy: G_Total_Relationship_Count=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count0 = 'Dummy:
G_Total_Relationship_Count=0' ;
374452    +
374453    +      label G_Total_Relationship_Count1 =
374454    +'Dummy: G_Total_Relationship_Count=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Relationship_Count1 = 'Dummy:
G_Total_Relationship_Count=1' ;
374455    +
374456    +      label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct0 = 'Dummy: G_Total_Trans_Ct=0' ;
374457    +
374458    +      label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct1 = 'Dummy: G_Total_Trans_Ct=1' ;
374459    +
374460    +      label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct2 = 'Dummy: G_Total_Trans_Ct=2' ;
374461    +
374462    +      label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct3 = 'Dummy: G_Total_Trans_Ct=3' ;
374463    +
374464    +      label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct4 = 'Dummy: G_Total_Trans_Ct=4' ;
374465    +
374466    +      label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct5 = 'Dummy: G_Total_Trans_Ct=5' ;
374467    +
374468    +      label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
MPRINT(EM_DIAGRAM):   label G_Total_Trans_Ct6 = 'Dummy: G_Total_Trans_Ct=6' ;
374469    +
374470    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
374471    +
374472    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
374473    +
374474    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
374475    +
374476    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
374477    +
374478    +      label I_Attrition_Flag = 'Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label I_Attrition_Flag = 'Into: Attrition_Flag' ;
374479    +
374480    +      label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
374481    +
374482    +      label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label U_Attrition_Flag = 'Unnormalized Into: Attrition_Flag' ;
374483    +
374484    +      label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag1 = 'Predicted: Attrition_Flag=1' ;
374485    +
374486    +      label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag1 = 'Residual: Attrition_Flag=1' ;
374487    +
374488    +      label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label P_Attrition_Flag0 = 'Predicted: Attrition_Flag=0' ;
374489    +
374490    +      label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
MPRINT(EM_DIAGRAM):   label R_Attrition_Flag0 = 'Residual: Attrition_Flag=0' ;
374491    +
374492    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
374493    +
374494    +*** Generate dummy variables for G_Contacts_Count_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Contacts_Count_12_mon ;
374495    +drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
374496    +        G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Contacts_Count_12_mon0 G_Contacts_Count_12_mon1
G_Contacts_Count_12_mon2 G_Contacts_Count_12_mon3 ;
374497    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
374498    +G_Contacts_Count_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 0;
374499    +G_Contacts_Count_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 0;
374500    +G_Contacts_Count_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 0;
374501    +G_Contacts_Count_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 0;
374502    +if missing( G_Contacts_Count_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Contacts_Count_12_mon ) then do;
374503    +   G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
374504    +   G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
374505    +   G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
374506    +   G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
374507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
374508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374509    +end;
MPRINT(EM_DIAGRAM):   end;
374510    +else do;
MPRINT(EM_DIAGRAM):   else do;
374511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
374512    +   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Contacts_Count_12_mon , BEST12. );
374513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374514    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
374515    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
374516    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
374517    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
374518    +            G_Contacts_Count_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = 1;
374519    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374520    +         end;
MPRINT(EM_DIAGRAM):   end;
374521    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374522    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
374523    +               G_Contacts_Count_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = 1;
374524    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374525    +            end;
MPRINT(EM_DIAGRAM):   end;
374526    +         end;
MPRINT(EM_DIAGRAM):   end;
374527    +      end;
MPRINT(EM_DIAGRAM):   end;
374528    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374529    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
374530    +            G_Contacts_Count_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = 1;
374531    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374532    +         end;
MPRINT(EM_DIAGRAM):   end;
374533    +      end;
MPRINT(EM_DIAGRAM):   end;
374534    +   end;
MPRINT(EM_DIAGRAM):   end;
374535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374536    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
374537    +         G_Contacts_Count_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = 1;
374538    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374539    +      end;
MPRINT(EM_DIAGRAM):   end;
374540    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374541    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
374542    +            G_Contacts_Count_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = -1;
374543    +            G_Contacts_Count_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = -1;
374544    +            G_Contacts_Count_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = -1;
374545    +            G_Contacts_Count_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = -1;
374546    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374547    +         end;
MPRINT(EM_DIAGRAM):   end;
374548    +      end;
MPRINT(EM_DIAGRAM):   end;
374549    +   end;
MPRINT(EM_DIAGRAM):   end;
374550    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
374551    +      G_Contacts_Count_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon0 = .;
374552    +      G_Contacts_Count_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon1 = .;
374553    +      G_Contacts_Count_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon2 = .;
374554    +      G_Contacts_Count_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Contacts_Count_12_mon3 = .;
374555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374557    +   end;
MPRINT(EM_DIAGRAM):   end;
374558    +end;
MPRINT(EM_DIAGRAM):   end;
374559    +
374560    +*** Generate dummy variables for G_Customer_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Customer_Age ;
374561    +drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
374562    +        G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7
374563    +        G_Customer_Age8 G_Customer_Age9 ;
MPRINT(EM_DIAGRAM):   drop G_Customer_Age0 G_Customer_Age1 G_Customer_Age2 G_Customer_Age3
G_Customer_Age4 G_Customer_Age5 G_Customer_Age6 G_Customer_Age7 G_Customer_Age8
G_Customer_Age9 ;
374564    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
374565    +G_Customer_Age0 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 0;
374566    +G_Customer_Age1 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 0;
374567    +G_Customer_Age2 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 0;
374568    +G_Customer_Age3 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 0;
374569    +G_Customer_Age4 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 0;
374570    +G_Customer_Age5 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 0;
374571    +G_Customer_Age6 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 0;
374572    +G_Customer_Age7 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 0;
374573    +G_Customer_Age8 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 0;
374574    +G_Customer_Age9 = 0;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 0;
374575    +if missing( G_Customer_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Customer_Age ) then do;
374576    +   G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
374577    +   G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
374578    +   G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
374579    +   G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
374580    +   G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
374581    +   G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
374582    +   G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
374583    +   G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
374584    +   G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
374585    +   G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
374586    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
374587    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374588    +end;
MPRINT(EM_DIAGRAM):   end;
374589    +else do;
MPRINT(EM_DIAGRAM):   else do;
374590    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
374591    +   _dm12 = put( G_Customer_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Customer_Age , BEST12. );
374592    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374593    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
374594    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
374595    +      if _dm12 <= '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '10' then do;
374596    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
374597    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
374598    +               G_Customer_Age0 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = 1;
374599    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374600    +            end;
MPRINT(EM_DIAGRAM):   end;
374601    +            else do;
MPRINT(EM_DIAGRAM):   else do;
374602    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
374603    +                  G_Customer_Age1 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = 1;
374604    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374605    +               end;
MPRINT(EM_DIAGRAM):   end;
374606    +            end;
MPRINT(EM_DIAGRAM):   end;
374607    +         end;
MPRINT(EM_DIAGRAM):   end;
374608    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374609    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
374610    +               G_Customer_Age0 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = -1;
374611    +               G_Customer_Age1 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = -1;
374612    +               G_Customer_Age2 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = -1;
374613    +               G_Customer_Age3 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = -1;
374614    +               G_Customer_Age4 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = -1;
374615    +               G_Customer_Age5 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = -1;
374616    +               G_Customer_Age6 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = -1;
374617    +               G_Customer_Age7 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = -1;
374618    +               G_Customer_Age8 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = -1;
374619    +               G_Customer_Age9 = -1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = -1;
374620    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374621    +            end;
MPRINT(EM_DIAGRAM):   end;
374622    +         end;
MPRINT(EM_DIAGRAM):   end;
374623    +      end;
MPRINT(EM_DIAGRAM):   end;
374624    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374625    +         if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
374626    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
374627    +               G_Customer_Age2 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = 1;
374628    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374629    +            end;
MPRINT(EM_DIAGRAM):   end;
374630    +            else do;
MPRINT(EM_DIAGRAM):   else do;
374631    +               if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
374632    +                  G_Customer_Age3 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = 1;
374633    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374634    +               end;
MPRINT(EM_DIAGRAM):   end;
374635    +            end;
MPRINT(EM_DIAGRAM):   end;
374636    +         end;
MPRINT(EM_DIAGRAM):   end;
374637    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374638    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
374639    +               G_Customer_Age4 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = 1;
374640    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374641    +            end;
MPRINT(EM_DIAGRAM):   end;
374642    +         end;
MPRINT(EM_DIAGRAM):   end;
374643    +      end;
MPRINT(EM_DIAGRAM):   end;
374644    +   end;
MPRINT(EM_DIAGRAM):   end;
374645    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374646    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
374647    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
374648    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
374649    +               G_Customer_Age5 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = 1;
374650    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374651    +            end;
MPRINT(EM_DIAGRAM):   end;
374652    +            else do;
MPRINT(EM_DIAGRAM):   else do;
374653    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
374654    +                  G_Customer_Age6 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = 1;
374655    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374656    +               end;
MPRINT(EM_DIAGRAM):   end;
374657    +            end;
MPRINT(EM_DIAGRAM):   end;
374658    +         end;
MPRINT(EM_DIAGRAM):   end;
374659    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374660    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
374661    +               G_Customer_Age7 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = 1;
374662    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374663    +            end;
MPRINT(EM_DIAGRAM):   end;
374664    +         end;
MPRINT(EM_DIAGRAM):   end;
374665    +      end;
MPRINT(EM_DIAGRAM):   end;
374666    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374667    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
374668    +            G_Customer_Age8 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = 1;
374669    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374670    +         end;
MPRINT(EM_DIAGRAM):   end;
374671    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374672    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
374673    +               G_Customer_Age9 = 1;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = 1;
374674    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374675    +            end;
MPRINT(EM_DIAGRAM):   end;
374676    +         end;
MPRINT(EM_DIAGRAM):   end;
374677    +      end;
MPRINT(EM_DIAGRAM):   end;
374678    +   end;
MPRINT(EM_DIAGRAM):   end;
374679    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
374680    +      G_Customer_Age0 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age0 = .;
374681    +      G_Customer_Age1 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age1 = .;
374682    +      G_Customer_Age2 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age2 = .;
374683    +      G_Customer_Age3 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age3 = .;
374684    +      G_Customer_Age4 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age4 = .;
374685    +      G_Customer_Age5 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age5 = .;
374686    +      G_Customer_Age6 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age6 = .;
374687    +      G_Customer_Age7 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age7 = .;
374688    +      G_Customer_Age8 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age8 = .;
374689    +      G_Customer_Age9 = .;
MPRINT(EM_DIAGRAM):   G_Customer_Age9 = .;
374690    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374691    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374692    +   end;
MPRINT(EM_DIAGRAM):   end;
374693    +end;
MPRINT(EM_DIAGRAM):   end;
374694    +
374695    +*** Generate dummy variables for G_Months_Inactive_12_mon ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_Inactive_12_mon ;
374696    +drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
374697    +        G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
MPRINT(EM_DIAGRAM):   drop G_Months_Inactive_12_mon0 G_Months_Inactive_12_mon1
G_Months_Inactive_12_mon2 G_Months_Inactive_12_mon3 ;
374698    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
374699    +G_Months_Inactive_12_mon0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 0;
374700    +G_Months_Inactive_12_mon1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 0;
374701    +G_Months_Inactive_12_mon2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 0;
374702    +G_Months_Inactive_12_mon3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 0;
374703    +if missing( G_Months_Inactive_12_mon ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_Inactive_12_mon ) then do;
374704    +   G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
374705    +   G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
374706    +   G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
374707    +   G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
374708    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
374709    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374710    +end;
MPRINT(EM_DIAGRAM):   end;
374711    +else do;
MPRINT(EM_DIAGRAM):   else do;
374712    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
374713    +   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_Inactive_12_mon , BEST12. );
374714    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374715    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
374716    +   if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
374717    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
374718    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
374719    +            G_Months_Inactive_12_mon0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = 1;
374720    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374721    +         end;
MPRINT(EM_DIAGRAM):   end;
374722    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374723    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
374724    +               G_Months_Inactive_12_mon1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = 1;
374725    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374726    +            end;
MPRINT(EM_DIAGRAM):   end;
374727    +         end;
MPRINT(EM_DIAGRAM):   end;
374728    +      end;
MPRINT(EM_DIAGRAM):   end;
374729    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374730    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
374731    +            G_Months_Inactive_12_mon2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = 1;
374732    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374733    +         end;
MPRINT(EM_DIAGRAM):   end;
374734    +      end;
MPRINT(EM_DIAGRAM):   end;
374735    +   end;
MPRINT(EM_DIAGRAM):   end;
374736    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374737    +      if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
374738    +         G_Months_Inactive_12_mon3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = 1;
374739    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374740    +      end;
MPRINT(EM_DIAGRAM):   end;
374741    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374742    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
374743    +            G_Months_Inactive_12_mon0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = -1;
374744    +            G_Months_Inactive_12_mon1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = -1;
374745    +            G_Months_Inactive_12_mon2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = -1;
374746    +            G_Months_Inactive_12_mon3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = -1;
374747    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374748    +         end;
MPRINT(EM_DIAGRAM):   end;
374749    +      end;
MPRINT(EM_DIAGRAM):   end;
374750    +   end;
MPRINT(EM_DIAGRAM):   end;
374751    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
374752    +      G_Months_Inactive_12_mon0 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon0 = .;
374753    +      G_Months_Inactive_12_mon1 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon1 = .;
374754    +      G_Months_Inactive_12_mon2 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon2 = .;
374755    +      G_Months_Inactive_12_mon3 = .;
MPRINT(EM_DIAGRAM):   G_Months_Inactive_12_mon3 = .;
374756    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374757    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374758    +   end;
MPRINT(EM_DIAGRAM):   end;
374759    +end;
MPRINT(EM_DIAGRAM):   end;
374760    +
374761    +*** Generate dummy variables for G_Months_on_book ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Months_on_book ;
374762    +drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2 G_Months_on_book3
374763    +        G_Months_on_book4 G_Months_on_book5 G_Months_on_book6
374764    +        G_Months_on_book7 ;
MPRINT(EM_DIAGRAM):   drop G_Months_on_book0 G_Months_on_book1 G_Months_on_book2
G_Months_on_book3 G_Months_on_book4 G_Months_on_book5 G_Months_on_book6 G_Months_on_book7 ;
374765    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
374766    +G_Months_on_book0 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 0;
374767    +G_Months_on_book1 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 0;
374768    +G_Months_on_book2 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 0;
374769    +G_Months_on_book3 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 0;
374770    +G_Months_on_book4 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 0;
374771    +G_Months_on_book5 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 0;
374772    +G_Months_on_book6 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 0;
374773    +G_Months_on_book7 = 0;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 0;
374774    +if missing( G_Months_on_book ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Months_on_book ) then do;
374775    +   G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
374776    +   G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
374777    +   G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
374778    +   G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
374779    +   G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
374780    +   G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
374781    +   G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
374782    +   G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
374783    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
374784    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374785    +end;
MPRINT(EM_DIAGRAM):   end;
374786    +else do;
MPRINT(EM_DIAGRAM):   else do;
374787    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
374788    +   _dm12 = put( G_Months_on_book , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Months_on_book , BEST12. );
374789    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374790    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
374791    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
374792    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
374793    +         if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
374794    +            if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
374795    +               G_Months_on_book0 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = 1;
374796    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374797    +            end;
MPRINT(EM_DIAGRAM):   end;
374798    +            else do;
MPRINT(EM_DIAGRAM):   else do;
374799    +               if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
374800    +                  G_Months_on_book1 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = 1;
374801    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374802    +               end;
MPRINT(EM_DIAGRAM):   end;
374803    +            end;
MPRINT(EM_DIAGRAM):   end;
374804    +         end;
MPRINT(EM_DIAGRAM):   end;
374805    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374806    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
374807    +               G_Months_on_book2 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = 1;
374808    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374809    +            end;
MPRINT(EM_DIAGRAM):   end;
374810    +         end;
MPRINT(EM_DIAGRAM):   end;
374811    +      end;
MPRINT(EM_DIAGRAM):   end;
374812    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374813    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
374814    +            G_Months_on_book3 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = 1;
374815    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374816    +         end;
MPRINT(EM_DIAGRAM):   end;
374817    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374818    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
374819    +               G_Months_on_book4 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = 1;
374820    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374821    +            end;
MPRINT(EM_DIAGRAM):   end;
374822    +         end;
MPRINT(EM_DIAGRAM):   end;
374823    +      end;
MPRINT(EM_DIAGRAM):   end;
374824    +   end;
MPRINT(EM_DIAGRAM):   end;
374825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374826    +      if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
374827    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
374828    +            G_Months_on_book5 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = 1;
374829    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374830    +         end;
MPRINT(EM_DIAGRAM):   end;
374831    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374832    +            if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
374833    +               G_Months_on_book6 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = 1;
374834    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374835    +            end;
MPRINT(EM_DIAGRAM):   end;
374836    +         end;
MPRINT(EM_DIAGRAM):   end;
374837    +      end;
MPRINT(EM_DIAGRAM):   end;
374838    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374839    +         if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
374840    +            G_Months_on_book7 = 1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = 1;
374841    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374842    +         end;
MPRINT(EM_DIAGRAM):   end;
374843    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374844    +            if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
374845    +               G_Months_on_book0 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = -1;
374846    +               G_Months_on_book1 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = -1;
374847    +               G_Months_on_book2 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = -1;
374848    +               G_Months_on_book3 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = -1;
374849    +               G_Months_on_book4 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = -1;
374850    +               G_Months_on_book5 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = -1;
374851    +               G_Months_on_book6 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = -1;
374852    +               G_Months_on_book7 = -1;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = -1;
374853    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374854    +            end;
MPRINT(EM_DIAGRAM):   end;
374855    +         end;
MPRINT(EM_DIAGRAM):   end;
374856    +      end;
MPRINT(EM_DIAGRAM):   end;
374857    +   end;
MPRINT(EM_DIAGRAM):   end;
374858    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
374859    +      G_Months_on_book0 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book0 = .;
374860    +      G_Months_on_book1 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book1 = .;
374861    +      G_Months_on_book2 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book2 = .;
374862    +      G_Months_on_book3 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book3 = .;
374863    +      G_Months_on_book4 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book4 = .;
374864    +      G_Months_on_book5 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book5 = .;
374865    +      G_Months_on_book6 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book6 = .;
374866    +      G_Months_on_book7 = .;
MPRINT(EM_DIAGRAM):   G_Months_on_book7 = .;
374867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374869    +   end;
MPRINT(EM_DIAGRAM):   end;
374870    +end;
MPRINT(EM_DIAGRAM):   end;
374871    +
374872    +*** Generate dummy variables for G_Total_Relationship_Count ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Relationship_Count ;
374873    +drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Relationship_Count0 G_Total_Relationship_Count1 ;
374874    +if missing( G_Total_Relationship_Count ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Relationship_Count ) then do;
374875    +   G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
374876    +   G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
374877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
374878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374879    +end;
MPRINT(EM_DIAGRAM):   end;
374880    +else do;
MPRINT(EM_DIAGRAM):   else do;
374881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
374882    +   _dm12 = put( G_Total_Relationship_Count , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Relationship_Count , BEST12. );
374883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374884    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
374885    +      G_Total_Relationship_Count0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = -1;
374886    +      G_Total_Relationship_Count1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = -1;
374887    +   end;
MPRINT(EM_DIAGRAM):   end;
374888    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
374889    +      G_Total_Relationship_Count0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 0;
374890    +      G_Total_Relationship_Count1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 1;
374891    +   end;
MPRINT(EM_DIAGRAM):   end;
374892    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
374893    +      G_Total_Relationship_Count0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = 1;
374894    +      G_Total_Relationship_Count1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = 0;
374895    +   end;
MPRINT(EM_DIAGRAM):   end;
374896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374897    +      G_Total_Relationship_Count0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count0 = .;
374898    +      G_Total_Relationship_Count1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Relationship_Count1 = .;
374899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374901    +   end;
MPRINT(EM_DIAGRAM):   end;
374902    +end;
MPRINT(EM_DIAGRAM):   end;
374903    +
374904    +*** Generate dummy variables for G_Total_Trans_Ct ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Total_Trans_Ct ;
374905    +drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2 G_Total_Trans_Ct3
374906    +        G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   drop G_Total_Trans_Ct0 G_Total_Trans_Ct1 G_Total_Trans_Ct2
G_Total_Trans_Ct3 G_Total_Trans_Ct4 G_Total_Trans_Ct5 G_Total_Trans_Ct6 ;
374907    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
374908    +G_Total_Trans_Ct0 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 0;
374909    +G_Total_Trans_Ct1 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 0;
374910    +G_Total_Trans_Ct2 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 0;
374911    +G_Total_Trans_Ct3 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 0;
374912    +G_Total_Trans_Ct4 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 0;
374913    +G_Total_Trans_Ct5 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 0;
374914    +G_Total_Trans_Ct6 = 0;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 0;
374915    +if missing( G_Total_Trans_Ct ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Total_Trans_Ct ) then do;
374916    +   G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
374917    +   G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
374918    +   G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
374919    +   G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
374920    +   G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
374921    +   G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
374922    +   G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
374923    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
374924    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374925    +end;
MPRINT(EM_DIAGRAM):   end;
374926    +else do;
MPRINT(EM_DIAGRAM):   else do;
374927    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
374928    +   _dm12 = put( G_Total_Trans_Ct , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Total_Trans_Ct , BEST12. );
374929    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
374930    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
374931    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
374932    +      if _dm12 <= '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '1' then do;
374933    +         if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
374934    +            G_Total_Trans_Ct0 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = 1;
374935    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374936    +         end;
MPRINT(EM_DIAGRAM):   end;
374937    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374938    +            if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
374939    +               G_Total_Trans_Ct1 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = 1;
374940    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374941    +            end;
MPRINT(EM_DIAGRAM):   end;
374942    +         end;
MPRINT(EM_DIAGRAM):   end;
374943    +      end;
MPRINT(EM_DIAGRAM):   end;
374944    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374945    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
374946    +            G_Total_Trans_Ct2 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = 1;
374947    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374948    +         end;
MPRINT(EM_DIAGRAM):   end;
374949    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374950    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
374951    +               G_Total_Trans_Ct3 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = 1;
374952    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374953    +            end;
MPRINT(EM_DIAGRAM):   end;
374954    +         end;
MPRINT(EM_DIAGRAM):   end;
374955    +      end;
MPRINT(EM_DIAGRAM):   end;
374956    +   end;
MPRINT(EM_DIAGRAM):   end;
374957    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374958    +      if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
374959    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
374960    +            G_Total_Trans_Ct4 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = 1;
374961    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374962    +         end;
MPRINT(EM_DIAGRAM):   end;
374963    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374964    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
374965    +               G_Total_Trans_Ct5 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = 1;
374966    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374967    +            end;
MPRINT(EM_DIAGRAM):   end;
374968    +         end;
MPRINT(EM_DIAGRAM):   end;
374969    +      end;
MPRINT(EM_DIAGRAM):   end;
374970    +      else do;
MPRINT(EM_DIAGRAM):   else do;
374971    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
374972    +            G_Total_Trans_Ct6 = 1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = 1;
374973    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374974    +         end;
MPRINT(EM_DIAGRAM):   end;
374975    +         else do;
MPRINT(EM_DIAGRAM):   else do;
374976    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
374977    +               G_Total_Trans_Ct0 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = -1;
374978    +               G_Total_Trans_Ct1 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = -1;
374979    +               G_Total_Trans_Ct2 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = -1;
374980    +               G_Total_Trans_Ct3 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = -1;
374981    +               G_Total_Trans_Ct4 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = -1;
374982    +               G_Total_Trans_Ct5 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = -1;
374983    +               G_Total_Trans_Ct6 = -1;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = -1;
374984    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
374985    +            end;
MPRINT(EM_DIAGRAM):   end;
374986    +         end;
MPRINT(EM_DIAGRAM):   end;
374987    +      end;
MPRINT(EM_DIAGRAM):   end;
374988    +   end;
MPRINT(EM_DIAGRAM):   end;
374989    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
374990    +      G_Total_Trans_Ct0 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct0 = .;
374991    +      G_Total_Trans_Ct1 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct1 = .;
374992    +      G_Total_Trans_Ct2 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct2 = .;
374993    +      G_Total_Trans_Ct3 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct3 = .;
374994    +      G_Total_Trans_Ct4 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct4 = .;
374995    +      G_Total_Trans_Ct5 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct5 = .;
374996    +      G_Total_Trans_Ct6 = .;
MPRINT(EM_DIAGRAM):   G_Total_Trans_Ct6 = .;
374997    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374998    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374999    +   end;
MPRINT(EM_DIAGRAM):   end;
375000    +end;
MPRINT(EM_DIAGRAM):   end;
375001    +
375002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375003    +*** Checking missing input Interval
375004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
375005    +
375006    +IF NMISS(
375007    +   RANGE_LOG_Total_Trans_Amt ,
375008    +   RANGE_SQRT_Avg_Utilization_Ratio ,
375009    +   RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ,
375010    +   RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ,
375011    +   RANGE_Total_Revolving_Bal   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( RANGE_LOG_Total_Trans_Amt , RANGE_SQRT_Avg_Utilization_Ratio ,
RANGE_SQRT_Total_Amt_Chng_Q4_Q1 , RANGE_SQRT_Total_Ct_Chng_Q4_Q1 , RANGE_Total_Revolving_Bal )
THEN DO;
375012    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
375013    +
375014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375015    +END;
MPRINT(EM_DIAGRAM):   END;
375016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375017    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
375018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375019    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375020    +   S_RANGE_LOG_Total_Trans_Amt
375021    +          =    -1.34747068578628 +      5.0128535511494 *
375022    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
375023    +   S_RANGE_SQRT_Avg_Utilization_Rat
375024    +          =    -1.34502734827526 +     3.19469433649726 *
375025    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 + 3.19469433649726
* RANGE_SQRT_Avg_Utilization_Ratio ;
375026    +   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375027    +          =    -7.21426643857002 +     15.4166020949803 *
375028    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 + 15.4166020949803
* RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
375029    +   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375030    +          =    -6.16155815683527 +     14.2791680762335 *
375031    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 + 14.2791680762335
* RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
375032    +   S_RANGE_Total_Revolving_Bal
375033    +          =    -1.43123481780808 +     3.09032113107013 *
375034    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013 *
RANGE_Total_Revolving_Bal ;
375035    +END;
MPRINT(EM_DIAGRAM):   END;
375036    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375037    +   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
375038    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_LOG_Total_Trans_Amt ) THEN S_RANGE_LOG_Total_Trans_Amt
= . ;
375039    +   ELSE S_RANGE_LOG_Total_Trans_Amt
375040    +          =    -1.34747068578628 +      5.0128535511494 *
375041    +        RANGE_LOG_Total_Trans_Amt ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_LOG_Total_Trans_Amt = -1.34747068578628 + 5.0128535511494 *
RANGE_LOG_Total_Trans_Amt ;
375042    +   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
375043    +        S_RANGE_SQRT_Avg_Utilization_Rat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Avg_Utilization_Ratio ) THEN
S_RANGE_SQRT_Avg_Utilization_Rat = . ;
375044    +   ELSE S_RANGE_SQRT_Avg_Utilization_Rat
375045    +          =    -1.34502734827526 +     3.19469433649726 *
375046    +        RANGE_SQRT_Avg_Utilization_Ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Avg_Utilization_Rat = -1.34502734827526 +
3.19469433649726 * RANGE_SQRT_Avg_Utilization_Ratio ;
375047    +   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
375048    +        S_RANGE_SQRT_Total_Amt_Chng_Q4_Q  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = . ;
375049    +   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375050    +          =    -7.21426643857002 +     15.4166020949803 *
375051    +        RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Amt_Chng_Q4_Q = -7.21426643857002 +
15.4166020949803 * RANGE_SQRT_Total_Amt_Chng_Q4_Q1 ;
375052    +   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
375053    +        S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ) THEN
S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = . ;
375054    +   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375055    +          =    -6.16155815683527 +     14.2791680762335 *
375056    +        RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 = -6.16155815683527 +
14.2791680762335 * RANGE_SQRT_Total_Ct_Chng_Q4_Q1 ;
375057    +   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
375058    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Total_Revolving_Bal ) THEN S_RANGE_Total_Revolving_Bal
= . ;
375059    +   ELSE S_RANGE_Total_Revolving_Bal
375060    +          =    -1.43123481780808 +     3.09032113107013 *
375061    +        RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Total_Revolving_Bal = -1.43123481780808 + 3.09032113107013
* RANGE_Total_Revolving_Bal ;
375062    +END;
MPRINT(EM_DIAGRAM):   END;
375063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375064    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
375065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375067    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
375068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375069    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375070    +   H1x1_1  =     1.02501964860994 * S_RANGE_LOG_Total_Trans_Amt
375071    +          +     0.30125997647147 * S_RANGE_SQRT_Avg_Utilization_Rat
375072    +          +     0.23244197886313 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375073    +          +     -0.1186861071534 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375074    +          +    -2.97931719831362 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.02501964860994 * S_RANGE_LOG_Total_Trans_Amt +
0.30125997647147 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.23244197886313 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.1186861071534 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-2.97931719831362 * S_RANGE_Total_Revolving_Bal ;
375075    +   H1x1_2  =    -0.95198389903237 * S_RANGE_LOG_Total_Trans_Amt
375076    +          +    -0.16356667531156 * S_RANGE_SQRT_Avg_Utilization_Rat
375077    +          +     0.11682877242643 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375078    +          +     0.20373298002789 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375079    +          +     0.02861216680365 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.95198389903237 * S_RANGE_LOG_Total_Trans_Amt +
-0.16356667531156 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.11682877242643 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.20373298002789 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.02861216680365 * S_RANGE_Total_Revolving_Bal ;
375080    +   H1x1_1  = H1x1_1  +     2.40671499395249 * G_Contacts_Count_12_mon0
375081    +          +    -0.28604333391551 * G_Contacts_Count_12_mon1
375082    +          +    -0.65633348542709 * G_Contacts_Count_12_mon2
375083    +          +    -1.01395328713868 * G_Contacts_Count_12_mon3
375084    +          +     0.85960465205093 * G_Customer_Age0  +     0.05121480560908 *
375085    +        G_Customer_Age1  +     0.07410310179315 * G_Customer_Age2
375086    +          +     0.34166223952007 * G_Customer_Age3  +     0.06870447056678 *
375087    +        G_Customer_Age4  +    -0.11676539026414 * G_Customer_Age5
375088    +          +     0.28927492204781 * G_Customer_Age6  +     0.23499226142499 *
375089    +        G_Customer_Age7  +    -0.11493422026684 * G_Customer_Age8
375090    +          +      -1.747811086948 * G_Customer_Age9  +    -1.75331030145069 *
375091    +        G_Months_Inactive_12_mon0  +     0.71391443696804 *
375092    +        G_Months_Inactive_12_mon1  +      0.3345243422843 *
375093    +        G_Months_Inactive_12_mon2  +      0.4696045512812 *
375094    +        G_Months_Inactive_12_mon3  +     0.45485139833883 * G_Months_on_book0
375095    +          +     0.39911195244105 * G_Months_on_book1
375096    +          +    -0.44963865252838 * G_Months_on_book2
375097    +          +     0.10698249012831 * G_Months_on_book3
375098    +          +     0.22008108873992 * G_Months_on_book4
375099    +          +     0.28392109419284 * G_Months_on_book5
375100    +          +     -0.3013014569746 * G_Months_on_book6
375101    +          +     0.15608132241029 * G_Months_on_book7
375102    +          +     0.31679963195245 * G_Total_Relationship_Count0
375103    +          +    -0.17244128327697 * G_Total_Relationship_Count1
375104    +          +     0.64194280071474 * G_Total_Trans_Ct0
375105    +          +     1.13181256946841 * G_Total_Trans_Ct1
375106    +          +     0.97686269686271 * G_Total_Trans_Ct2
375107    +          +     0.98717016810806 * G_Total_Trans_Ct3
375108    +          +     0.16424164762715 * G_Total_Trans_Ct4
375109    +          +     0.72187096755953 * G_Total_Trans_Ct5
375110    +          +    -1.97148427169564 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.40671499395249 * G_Contacts_Count_12_mon0 +
-0.28604333391551 * G_Contacts_Count_12_mon1 + -0.65633348542709 * G_Contacts_Count_12_mon2 +
-1.01395328713868 * G_Contacts_Count_12_mon3 + 0.85960465205093 * G_Customer_Age0 +
0.05121480560908 * G_Customer_Age1 + 0.07410310179315 * G_Customer_Age2 + 0.34166223952007 *
G_Customer_Age3 + 0.06870447056678 * G_Customer_Age4 + -0.11676539026414 * G_Customer_Age5 +
0.28927492204781 * G_Customer_Age6 + 0.23499226142499 * G_Customer_Age7 + -0.11493422026684 *
G_Customer_Age8 + -1.747811086948 * G_Customer_Age9 + -1.75331030145069 *
G_Months_Inactive_12_mon0 + 0.71391443696804 * G_Months_Inactive_12_mon1 + 0.3345243422843 *
G_Months_Inactive_12_mon2 + 0.4696045512812 * G_Months_Inactive_12_mon3 + 0.45485139833883 *
G_Months_on_book0 + 0.39911195244105 * G_Months_on_book1 + -0.44963865252838 *
G_Months_on_book2 + 0.10698249012831 * G_Months_on_book3 + 0.22008108873992 *
G_Months_on_book4 + 0.28392109419284 * G_Months_on_book5 + -0.3013014569746 *
G_Months_on_book6 + 0.15608132241029 * G_Months_on_book7 + 0.31679963195245 *
G_Total_Relationship_Count0 + -0.17244128327697 * G_Total_Relationship_Count1 +
0.64194280071474 * G_Total_Trans_Ct0 + 1.13181256946841 * G_Total_Trans_Ct1 + 0.97686269686271
* G_Total_Trans_Ct2 + 0.98717016810806 * G_Total_Trans_Ct3 + 0.16424164762715 *
G_Total_Trans_Ct4 + 0.72187096755953 * G_Total_Trans_Ct5 + -1.97148427169564 *
G_Total_Trans_Ct6 ;
375111    +   H1x1_2  = H1x1_2  +       -3.11569913609 * G_Contacts_Count_12_mon0
375112    +          +     0.55463007561471 * G_Contacts_Count_12_mon1
375113    +          +     0.86789725339798 * G_Contacts_Count_12_mon2
375114    +          +     0.83343929891411 * G_Contacts_Count_12_mon3
375115    +          +    -0.95250865316681 * G_Customer_Age0  +    -0.20153360153754 *
375116    +        G_Customer_Age1  +    -0.13395945037511 * G_Customer_Age2
375117    +          +    -0.16566544227004 * G_Customer_Age3  +     -0.0620673520045 *
375118    +        G_Customer_Age4  +    -0.17864972110492 * G_Customer_Age5
375119    +          +    -0.03983418838966 * G_Customer_Age6  +    -0.03191322178204 *
375120    +        G_Customer_Age7  +     0.11505624722812 * G_Customer_Age8
375121    +          +     0.57109255297529 * G_Customer_Age9  +    -0.87036174573518 *
375122    +        G_Months_Inactive_12_mon0  +     0.07164716186277 *
375123    +        G_Months_Inactive_12_mon1  +     0.17818319570595 *
375124    +        G_Months_Inactive_12_mon2  +     0.21942633339221 *
375125    +        G_Months_Inactive_12_mon3  +     0.03310063502739 * G_Months_on_book0
375126    +          +    -0.46458200938733 * G_Months_on_book1
375127    +          +    -0.04269630807226 * G_Months_on_book2
375128    +          +     0.01759018538732 * G_Months_on_book3
375129    +          +     0.11272864233309 * G_Months_on_book4
375130    +          +     0.05384941545576 * G_Months_on_book5
375131    +          +     0.02571962139521 * G_Months_on_book6
375132    +          +     0.20452595693382 * G_Months_on_book7
375133    +          +    -0.19840105547444 * G_Total_Relationship_Count0
375134    +          +     0.14283649235279 * G_Total_Relationship_Count1
375135    +          +    -2.38920084655518 * G_Total_Trans_Ct0
375136    +          +    -0.75544993192888 * G_Total_Trans_Ct1
375137    +          +    -0.72964558743549 * G_Total_Trans_Ct2
375138    +          +    -0.61944349469073 * G_Total_Trans_Ct3
375139    +          +    -0.41739064945083 * G_Total_Trans_Ct4
375140    +          +    -0.03013125081655 * G_Total_Trans_Ct5
375141    +          +     0.41065071348614 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -3.11569913609 * G_Contacts_Count_12_mon0 +
0.55463007561471 * G_Contacts_Count_12_mon1 + 0.86789725339798 * G_Contacts_Count_12_mon2 +
0.83343929891411 * G_Contacts_Count_12_mon3 + -0.95250865316681 * G_Customer_Age0 +
-0.20153360153754 * G_Customer_Age1 + -0.13395945037511 * G_Customer_Age2 + -0.16566544227004
* G_Customer_Age3 + -0.0620673520045 * G_Customer_Age4 + -0.17864972110492 * G_Customer_Age5 +
-0.03983418838966 * G_Customer_Age6 + -0.03191322178204 * G_Customer_Age7 + 0.11505624722812 *
G_Customer_Age8 + 0.57109255297529 * G_Customer_Age9 + -0.87036174573518 *
G_Months_Inactive_12_mon0 + 0.07164716186277 * G_Months_Inactive_12_mon1 + 0.17818319570595 *
G_Months_Inactive_12_mon2 + 0.21942633339221 * G_Months_Inactive_12_mon3 + 0.03310063502739 *
G_Months_on_book0 + -0.46458200938733 * G_Months_on_book1 + -0.04269630807226 *
G_Months_on_book2 + 0.01759018538732 * G_Months_on_book3 + 0.11272864233309 *
G_Months_on_book4 + 0.05384941545576 * G_Months_on_book5 + 0.02571962139521 *
G_Months_on_book6 + 0.20452595693382 * G_Months_on_book7 + -0.19840105547444 *
G_Total_Relationship_Count0 + 0.14283649235279 * G_Total_Relationship_Count1 +
-2.38920084655518 * G_Total_Trans_Ct0 + -0.75544993192888 * G_Total_Trans_Ct1 +
-0.72964558743549 * G_Total_Trans_Ct2 + -0.61944349469073 * G_Total_Trans_Ct3 +
-0.41739064945083 * G_Total_Trans_Ct4 + -0.03013125081655 * G_Total_Trans_Ct5 +
0.41065071348614 * G_Total_Trans_Ct6 ;
375142    +   H1x1_1  =    -1.40436708245126 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.40436708245126 + H1x1_1 ;
375143    +   H1x1_2  =    -0.62244542562102 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62244542562102 + H1x1_2 ;
375144    +   H1x1_1  = TANH(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = TANH(H1x1_1 );
375145    +   H1x1_2  = TANH(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = TANH(H1x1_2 );
375146    +END;
MPRINT(EM_DIAGRAM):   END;
375147    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375148    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
375149    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
375150    +END;
MPRINT(EM_DIAGRAM):   END;
375151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375152    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
375153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375154    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375155    +   H1x2_1  =     0.34659311824578 * S_RANGE_LOG_Total_Trans_Amt
375156    +          +      -2.853271161796 * S_RANGE_SQRT_Avg_Utilization_Rat
375157    +          +    -2.57518066438565 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375158    +          +     0.81279997821052 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375159    +          +     0.61085756295407 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.34659311824578 * S_RANGE_LOG_Total_Trans_Amt +
-2.853271161796 * S_RANGE_SQRT_Avg_Utilization_Rat + -2.57518066438565 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + 0.81279997821052 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
0.61085756295407 * S_RANGE_Total_Revolving_Bal ;
375160    +   H1x2_2  =    -0.93866568010483 * S_RANGE_LOG_Total_Trans_Amt
375161    +          +      0.0621508860157 * S_RANGE_SQRT_Avg_Utilization_Rat
375162    +          +     0.81058548555497 * S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375163    +          +    -0.44824766946914 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375164    +          +    -0.47053902310597 * S_RANGE_Total_Revolving_Bal ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.93866568010483 * S_RANGE_LOG_Total_Trans_Amt +
0.0621508860157 * S_RANGE_SQRT_Avg_Utilization_Rat + 0.81058548555497 *
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q + -0.44824766946914 * S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 +
-0.47053902310597 * S_RANGE_Total_Revolving_Bal ;
375165    +   H1x2_1  = H1x2_1  +     0.71400513216767 * G_Contacts_Count_12_mon0
375166    +          +     0.92110780972835 * G_Contacts_Count_12_mon1
375167    +          +      0.3629668816764 * G_Contacts_Count_12_mon2
375168    +          +    -0.76435790327487 * G_Contacts_Count_12_mon3
375169    +          +     0.54626705501872 * G_Customer_Age0  +    -0.38925455254039 *
375170    +        G_Customer_Age1  +    -0.33241651106823 * G_Customer_Age2
375171    +          +    -1.15895365580622 * G_Customer_Age3  +     1.03208806982955 *
375172    +        G_Customer_Age4  +     0.56450431682696 * G_Customer_Age5
375173    +          +    -0.46180185966695 * G_Customer_Age6  +     2.06449433187004 *
375174    +        G_Customer_Age7  +     1.34602734238407 * G_Customer_Age8
375175    +          +    -0.12998191802167 * G_Customer_Age9  +     0.90239304334566 *
375176    +        G_Months_Inactive_12_mon0  +    -0.57705712485771 *
375177    +        G_Months_Inactive_12_mon1  +     0.20537489416112 *
375178    +        G_Months_Inactive_12_mon2  +    -0.49514361515621 *
375179    +        G_Months_Inactive_12_mon3  +    -0.32788082970898 * G_Months_on_book0
375180    +          +     0.39208442279716 * G_Months_on_book1
375181    +          +     0.32578211410595 * G_Months_on_book2
375182    +          +     0.51936552147334 * G_Months_on_book3
375183    +          +    -1.21996861431241 * G_Months_on_book4
375184    +          +    -0.79511599891093 * G_Months_on_book5
375185    +          +    -0.34474328383204 * G_Months_on_book6
375186    +          +    -2.57829235432067 * G_Months_on_book7
375187    +          +    -0.22957069127939 * G_Total_Relationship_Count0
375188    +          +     0.48708741281952 * G_Total_Relationship_Count1
375189    +          +    -0.20439350866799 * G_Total_Trans_Ct0
375190    +          +    -1.53642603362521 * G_Total_Trans_Ct1
375191    +          +    -0.25605051972162 * G_Total_Trans_Ct2
375192    +          +    -0.09346705616277 * G_Total_Trans_Ct3
375193    +          +     0.29244537978438 * G_Total_Trans_Ct4
375194    +          +     1.10332787181309 * G_Total_Trans_Ct5
375195    +          +     1.05459273095253 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.71400513216767 * G_Contacts_Count_12_mon0 +
0.92110780972835 * G_Contacts_Count_12_mon1 + 0.3629668816764 * G_Contacts_Count_12_mon2 +
-0.76435790327487 * G_Contacts_Count_12_mon3 + 0.54626705501872 * G_Customer_Age0 +
-0.38925455254039 * G_Customer_Age1 + -0.33241651106823 * G_Customer_Age2 + -1.15895365580622
* G_Customer_Age3 + 1.03208806982955 * G_Customer_Age4 + 0.56450431682696 * G_Customer_Age5 +
-0.46180185966695 * G_Customer_Age6 + 2.06449433187004 * G_Customer_Age7 + 1.34602734238407 *
G_Customer_Age8 + -0.12998191802167 * G_Customer_Age9 + 0.90239304334566 *
G_Months_Inactive_12_mon0 + -0.57705712485771 * G_Months_Inactive_12_mon1 + 0.20537489416112 *
G_Months_Inactive_12_mon2 + -0.49514361515621 * G_Months_Inactive_12_mon3 + -0.32788082970898
* G_Months_on_book0 + 0.39208442279716 * G_Months_on_book1 + 0.32578211410595 *
G_Months_on_book2 + 0.51936552147334 * G_Months_on_book3 + -1.21996861431241 *
G_Months_on_book4 + -0.79511599891093 * G_Months_on_book5 + -0.34474328383204 *
G_Months_on_book6 + -2.57829235432067 * G_Months_on_book7 + -0.22957069127939 *
G_Total_Relationship_Count0 + 0.48708741281952 * G_Total_Relationship_Count1 +
-0.20439350866799 * G_Total_Trans_Ct0 + -1.53642603362521 * G_Total_Trans_Ct1 +
-0.25605051972162 * G_Total_Trans_Ct2 + -0.09346705616277 * G_Total_Trans_Ct3 +
0.29244537978438 * G_Total_Trans_Ct4 + 1.10332787181309 * G_Total_Trans_Ct5 + 1.05459273095253
* G_Total_Trans_Ct6 ;
375196    +   H1x2_2  = H1x2_2  +    -0.74054226776565 * G_Contacts_Count_12_mon0
375197    +          +     0.25988400090888 * G_Contacts_Count_12_mon1
375198    +          +     0.36052880436315 * G_Contacts_Count_12_mon2
375199    +          +      1.2433826357089 * G_Contacts_Count_12_mon3
375200    +          +    -0.27615383177284 * G_Customer_Age0  +     0.53383540020492 *
375201    +        G_Customer_Age1  +    -1.54528759740368 * G_Customer_Age2
375202    +          +     0.16347425548076 * G_Customer_Age3  +    -1.83494882792742 *
375203    +        G_Customer_Age4  +     0.07542541730265 * G_Customer_Age5
375204    +          +      1.3274294957122 * G_Customer_Age6  +    -0.19652227566702 *
375205    +        G_Customer_Age7  +     1.17416887757193 * G_Customer_Age8
375206    +          +    -0.67757642607906 * G_Customer_Age9  +    -0.23841243791319 *
375207    +        G_Months_Inactive_12_mon0  +     0.17419249230621 *
375208    +        G_Months_Inactive_12_mon1  +    -1.32654545796903 *
375209    +        G_Months_Inactive_12_mon2  +    -0.17840288252074 *
375210    +        G_Months_Inactive_12_mon3  +     -1.3435001500078 * G_Months_on_book0
375211    +          +    -1.71551288230779 * G_Months_on_book1
375212    +          +    -0.45437716209274 * G_Months_on_book2
375213    +          +     0.20533045705777 * G_Months_on_book3
375214    +          +     0.35509066616616 * G_Months_on_book4
375215    +          +    -0.57998503526656 * G_Months_on_book5
375216    +          +     1.05551310369074 * G_Months_on_book6
375217    +          +    -1.65575396359379 * G_Months_on_book7
375218    +          +     0.39647475519458 * G_Total_Relationship_Count0
375219    +          +     0.73363930002586 * G_Total_Relationship_Count1
375220    +          +     0.93243970501905 * G_Total_Trans_Ct0
375221    +          +    -0.05888635699865 * G_Total_Trans_Ct1
375222    +          +     0.76141941519989 * G_Total_Trans_Ct2
375223    +          +     0.27602418707378 * G_Total_Trans_Ct3
375224    +          +       0.313462073547 * G_Total_Trans_Ct4
375225    +          +     1.64625003255342 * G_Total_Trans_Ct5
375226    +          +     2.07977868728295 * G_Total_Trans_Ct6 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.74054226776565 * G_Contacts_Count_12_mon0 +
0.25988400090888 * G_Contacts_Count_12_mon1 + 0.36052880436315 * G_Contacts_Count_12_mon2 +
1.2433826357089 * G_Contacts_Count_12_mon3 + -0.27615383177284 * G_Customer_Age0 +
0.53383540020492 * G_Customer_Age1 + -1.54528759740368 * G_Customer_Age2 + 0.16347425548076 *
G_Customer_Age3 + -1.83494882792742 * G_Customer_Age4 + 0.07542541730265 * G_Customer_Age5 +
1.3274294957122 * G_Customer_Age6 + -0.19652227566702 * G_Customer_Age7 + 1.17416887757193 *
G_Customer_Age8 + -0.67757642607906 * G_Customer_Age9 + -0.23841243791319 *
G_Months_Inactive_12_mon0 + 0.17419249230621 * G_Months_Inactive_12_mon1 + -1.32654545796903 *
G_Months_Inactive_12_mon2 + -0.17840288252074 * G_Months_Inactive_12_mon3 + -1.3435001500078 *
G_Months_on_book0 + -1.71551288230779 * G_Months_on_book1 + -0.45437716209274 *
G_Months_on_book2 + 0.20533045705777 * G_Months_on_book3 + 0.35509066616616 *
G_Months_on_book4 + -0.57998503526656 * G_Months_on_book5 + 1.05551310369074 *
G_Months_on_book6 + -1.65575396359379 * G_Months_on_book7 + 0.39647475519458 *
G_Total_Relationship_Count0 + 0.73363930002586 * G_Total_Relationship_Count1 +
0.93243970501905 * G_Total_Trans_Ct0 + -0.05888635699865 * G_Total_Trans_Ct1 +
0.76141941519989 * G_Total_Trans_Ct2 + 0.27602418707378 * G_Total_Trans_Ct3 + 0.313462073547 *
G_Total_Trans_Ct4 + 1.64625003255342 * G_Total_Trans_Ct5 + 2.07977868728295 *
G_Total_Trans_Ct6 ;
375227    +   H1x2_1  =     0.44894143904256 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.44894143904256 + H1x2_1 ;
375228    +   H1x2_2  =    -1.17791753007224 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.17791753007224 + H1x2_2 ;
375229    +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
375230    +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
375231    +END;
MPRINT(EM_DIAGRAM):   END;
375232    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375233    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
375234    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
375235    +END;
MPRINT(EM_DIAGRAM):   END;
375236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375237    +*** Writing the Node Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Attrition_Flag ;
375238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375239    +
375240    +*** Generate dummy variables for Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Attrition_Flag ;
375241    +drop Attrition_Flag1 Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   drop Attrition_Flag1 Attrition_Flag0 ;
375242    +label F_Attrition_Flag = 'From: Attrition_Flag' ;
MPRINT(EM_DIAGRAM):   label F_Attrition_Flag = 'From: Attrition_Flag' ;
375243    +length F_Attrition_Flag $ 17;
MPRINT(EM_DIAGRAM):   length F_Attrition_Flag $ 17;
375244    +F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
MPRINT(EM_DIAGRAM):   F_Attrition_Flag = put( Attrition_Flag , $CHAR17. );
375245    +%DMNORMIP( F_Attrition_Flag )
MPRINT(DMNORMIP):   call dmnorm(F_Attrition_Flag,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375246    +if missing( Attrition_Flag ) then do;
MPRINT(EM_DIAGRAM):   if missing( Attrition_Flag ) then do;
375247    +   Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
375248    +   Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
375249    +end;
MPRINT(EM_DIAGRAM):   end;
375250    +else do;
MPRINT(EM_DIAGRAM):   else do;
375251    +   if F_Attrition_Flag = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_Attrition_Flag = '0' then do;
375252    +      Attrition_Flag1 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 0;
375253    +      Attrition_Flag0 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 1;
375254    +   end;
MPRINT(EM_DIAGRAM):   end;
375255    +   else if F_Attrition_Flag = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_Attrition_Flag = '1' then do;
375256    +      Attrition_Flag1 = 1;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = 1;
375257    +      Attrition_Flag0 = 0;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = 0;
375258    +   end;
MPRINT(EM_DIAGRAM):   end;
375259    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375260    +      Attrition_Flag1 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag1 = .;
375261    +      Attrition_Flag0 = .;
MPRINT(EM_DIAGRAM):   Attrition_Flag0 = .;
375262    +   end;
MPRINT(EM_DIAGRAM):   end;
375263    +end;
MPRINT(EM_DIAGRAM):   end;
375264    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375265    +   P_Attrition_Flag1  =     2.66059139553414 * H1x1_1
375266    +          +    -4.72406220462279 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 2.66059139553414 * H1x1_1 + -4.72406220462279 *
H1x1_2 ;
375267    +   P_Attrition_Flag1  = P_Attrition_Flag1  +     0.01783303872814 * H1x2_1
375268    +          +     -0.0072448325809 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 + 0.01783303872814 * H1x2_1 +
-0.0072448325809 * H1x2_2 ;
375269    +   P_Attrition_Flag1  =     1.65896234349997 + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 1.65896234349997 + P_Attrition_Flag1 ;
375270    +   P_Attrition_Flag0  = 0;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0;
375271    +   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Attrition_Flag1 , P_Attrition_Flag0 );
375272    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
375273    +   P_Attrition_Flag1  = EXP(P_Attrition_Flag1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = EXP(P_Attrition_Flag1 - _MAX_);
375274    +   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag1 ;
375275    +   P_Attrition_Flag0  = EXP(P_Attrition_Flag0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = EXP(P_Attrition_Flag0 - _MAX_);
375276    +   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Attrition_Flag0 ;
375277    +   P_Attrition_Flag1  = P_Attrition_Flag1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = P_Attrition_Flag1 / _SUM_;
375278    +   P_Attrition_Flag0  = P_Attrition_Flag0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = P_Attrition_Flag0 / _SUM_;
375279    +END;
MPRINT(EM_DIAGRAM):   END;
375280    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375281    +   P_Attrition_Flag1  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = .;
375282    +   P_Attrition_Flag0  = .;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = .;
375283    +END;
MPRINT(EM_DIAGRAM):   END;
375284    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
375285    +   P_Attrition_Flag1  =      0.1606941309255;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag1 = 0.1606941309255;
375286    +   P_Attrition_Flag0  =     0.83930586907449;
MPRINT(EM_DIAGRAM):   P_Attrition_Flag0 = 0.83930586907449;
375287    +END;
MPRINT(EM_DIAGRAM):   END;
375288    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
375289    +*** Writing the Residuals  of the Node Attrition_Flag ;
The SAS System
 
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Attrition_Flag ;
375290    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
375291    +IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag1 ) THEN R_Attrition_Flag1 = . ;
375292    +ELSE R_Attrition_Flag1  = Attrition_Flag1  - P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag1 = Attrition_Flag1 - P_Attrition_Flag1 ;
375293    +IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Attrition_Flag0 ) THEN R_Attrition_Flag0 = . ;
375294    +ELSE R_Attrition_Flag0  = Attrition_Flag0  - P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Attrition_Flag0 = Attrition_Flag0 - P_Attrition_Flag0 ;
375295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375296    +*** Writing the I_Attrition_Flag  AND U_Attrition_Flag ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Attrition_Flag AND U_Attrition_Flag ;
375297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375298    +_MAXP_ = P_Attrition_Flag1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag1 ;
375299    +I_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "1                " ;
375300    +U_Attrition_Flag  = "1                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "1                " ;
375301    +IF( _MAXP_ LT P_Attrition_Flag0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Attrition_Flag0 ) THEN DO;
375302    +   _MAXP_ = P_Attrition_Flag0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Attrition_Flag0 ;
375303    +   I_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   I_Attrition_Flag = "0                " ;
375304    +   U_Attrition_Flag  = "0                " ;
MPRINT(EM_DIAGRAM):   U_Attrition_Flag = "0                " ;
375305    +END;
MPRINT(EM_DIAGRAM):   END;
375306    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
375307    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
375308    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
375309    +drop
375310    +S_RANGE_LOG_Total_Trans_Amt
375311    +S_RANGE_SQRT_Avg_Utilization_Rat
375312    +S_RANGE_SQRT_Total_Amt_Chng_Q4_Q
375313    +S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1
375314    +S_RANGE_Total_Revolving_Bal
375315    +H1x1_1
375316    +H1x1_2
375317    +H1x2_1
375318    +H1x2_2
375319    +;
MPRINT(EM_DIAGRAM):   drop S_RANGE_LOG_Total_Trans_Amt S_RANGE_SQRT_Avg_Utilization_Rat
S_RANGE_SQRT_Total_Amt_Chng_Q4_Q S_RANGE_SQRT_Total_Ct_Chng_Q4_Q1 S_RANGE_Total_Revolving_Bal
H1x1_1 H1x1_2 H1x2_1 H1x2_2 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
375320     run;
 
NOTE: DATA STEP view saved on file EMWS1.AUTONEURAL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
375321     quit;
375322     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
375323     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
375324     * AutoNeural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural: Computing metadata for TRAIN data;
375325     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.AUTONEURAL_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.AutoNeural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.AutoNeural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.AutoNeural_TRAIN out=WORK.M303JT66
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M303JT66;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M303JT66(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M303JT66;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M303JT66;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M24EQG73 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2N04B5X(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   set WORK.M24EQG73;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG1") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("R_ATTRITION_FLAG1") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("P_ATTRITION_FLAG0") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("R_ATTRITION_FLAG0") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("F_ATTRITION_FLAG") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("I_ATTRITION_FLAG") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("U_ATTRITION_FLAG") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural";
MPRINT(EM_DIAGRAM):   when("ATTRITION_FLAG") model = "AutoNeural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
375678     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
375679     set EMWS1.AutoNeural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMINFO;
375680     where DATA='AutoNeural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
375681     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.AUTONEURAL_EMINFO.
      WHERE (DATA='AutoNeural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375682     data EMWS1.AutoNeural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_EMINFO;
375683     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
375684     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
375685     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.AUTONEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
375689     run;
375690     data EMWS1.AutoNeural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMINFO;
375691     set EMWS1.AutoNeural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMINFO WORK.MODELTEMP_INFO;
375692     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.AUTONEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375693     proc sort data = EMWS1.AutoNeural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.AutoNeural_EMINFO NOTHREADS;
375694     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
375695     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL_EMINFO.
NOTE: The data set EMWS1.AUTONEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375696     proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
375697     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
375698     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375699     proc sort data = EMWS1.AutoNeural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.AutoNeural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
375700     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
375701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.AUTONEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
375702     data EMWS1.AutoNeural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMINFO;
375703     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
375704     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
375705     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.AUTONEURAL_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375706     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
375707     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
375708     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
375709     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.AUTONEURAL_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
NOTE: View EMWS1.AUTONEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: View EMWS1.AUTONEURAL_TEST.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 09, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:14:26" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                April 09, 2022
Time:                15:14:26
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0HR_5XI
"D:\478\project\CreditCard_ChurnRate\Workspaces\EMWS1\AutoNeural\EMREPORT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0HR_5XI new;
MPRINT(EM_DIAGRAM):   run;
375733     proc sort data=EMWS1.AutoNeural_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.AutoNeural_OUTFIT nodupkey;
375734     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
375735     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.AUTONEURAL_OUTFIT has 2 observations and 51 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375736     data EMWS1.AutoNeural_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMOUTFIT(rename=(_NAME_=TARGET));
375737     set EMWS1.AutoNeural_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_OUTFIT(where=(_NAME_ eq 'OVERALL'));
375738     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
375739     if _NAME_='OVERALL' then _NAME_='Attrition_Flag';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='Attrition_Flag';
375740     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
375741     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS1.AUTONEURAL_EMOUTFIT has 1 observations and 50 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
375742     data EMWS1.AutoNeural_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_EMOUTFIT;
375743     set EMWS1.AutoNeural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMOUTFIT;
375744     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
375745     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
375745   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
375746     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_EMOUTFIT.
NOTE: The data set EMWS1.AUTONEURAL_EMOUTFIT has 1 observations and 51 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375747     proc sort data=EMWS1.AutoNeural_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.AutoNeural_EMREPORTFIT nothreads;
375748     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
375749     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.AUTONEURAL_EMREPORTFIT.
NOTE: The data set EMWS1.AUTONEURAL_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375750     %let _EMwarndup = 0;
375751     %let _EMtargetdup =;
375752     %let _EMASEtargetdup =;
375753     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
375754     set EMWS1.AutoNeural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMOUTFIT;
375755     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
375756     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
375757     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
375758     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
375759     end;
MPRINT(EM_DIAGRAM):   end;
375760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.AUTONEURAL_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375761     proc sort data=EMWS1.Part2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Part2_CMeta_TRAIN out=WORK.SUBSETINMETA;
375762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375763     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.PART2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
375764     proc sort data=EMWS1.AutoNeural_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.AutoNeural_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
375765     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.AUTONEURAL_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 12 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
375767     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
375768     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
375769     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 12 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
375771     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
375772     set EMWS1.AutoNeural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_CMeta_TRAIN;
375773     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
375773   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
375774     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
375775     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
375776     set EMWS1.AutoNeural_TRAIN(keep=
375777     F_Attrition_Flag
375778     I_Attrition_Flag
375779     P_Attrition_Flag0
375780     P_Attrition_Flag1
375781     R_Attrition_Flag0
375782     R_Attrition_Flag1
375783     U_Attrition_Flag
375784     _WARN_
375785     Attrition_Flag
375786     );
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_TRAIN(keep= F_Attrition_Flag I_Attrition_Flag
P_Attrition_Flag0 P_Attrition_Flag1 R_Attrition_Flag0 R_Attrition_Flag1 U_Attrition_Flag
_WARN_ Attrition_Flag );
375787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.AUTONEURAL_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 7088 observations read from the data set EMWS1.PART2_TRAIN.
NOTE: There were 7088 observations read from the data set EMWS1.AUTONEURAL_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 7088 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_Attrition_Flag*F_Attrition_Flag / out = WORK.AutoNeural_0T6GLBZ
nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural_0T6GLBZ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural_0T6GLBZ(rename=(F_Attrition_Flag=FROM
I_Attrition_Flag=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "Attrition_Flag";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural_0T6GLBZ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural_0T6GLBZ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Attrition_Flag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_Attrition_Flag ;
 
MPRINT(EM_ASSESS):   VAR P_Attrition_Flag1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Attrition_Flag1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_Attrition_Flag P_Attrition_Flag1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_Attrition_Flag ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_Attrition_Flag1 NTARGET _tmpfreqvar_
WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_Attrition_Flag1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1606941309 _NEVENTS
1139 _NNONEVENTS 5949 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 7088));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_Attrition_Flag1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_Attrition_Flag1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_Attrition_Flag1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_Attrition_Flag1 *
_FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0031715419 OVLMAX 0.9998837714 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 7088 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(7088/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 7088)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 7088/20) ) / (
AVGNUMRESP / (7088/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 7088 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 7088 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 7088/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 7088/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 7088;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
380068     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
380069     set EMWS1.AutoNeural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_CMeta_TRAIN;
380070     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
380070   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
380071     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
380072     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
380073     set EMWS1.AutoNeural_VALIDATE(keep=
380074     F_Attrition_Flag
380075     I_Attrition_Flag
380076     P_Attrition_Flag0
380077     P_Attrition_Flag1
380078     R_Attrition_Flag0
380079     R_Attrition_Flag1
380080     U_Attrition_Flag
380081     _WARN_
380082     Attrition_Flag
380083     );
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_VALIDATE(keep= F_Attrition_Flag I_Attrition_Flag
P_Attrition_Flag0 P_Attrition_Flag1 R_Attrition_Flag0 R_Attrition_Flag1 U_Attrition_Flag
_WARN_ Attrition_Flag );
380084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.AUTONEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: There were 2025 observations read from the data set EMWS1.PART2_VALIDATE.
NOTE: There were 2025 observations read from the data set EMWS1.AUTONEURAL_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2025 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_Attrition_Flag*F_Attrition_Flag / out = WORK.AutoNeural_3M_B0Q4
nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural_3M_B0Q4;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural_3M_B0Q4(rename=(F_Attrition_Flag=FROM
I_Attrition_Flag=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "Attrition_Flag";
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMCLASSIFICATION WORK.AutoNeural_3M_B0Q4;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural_3M_B0Q4;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.AutoNeural_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Attrition_Flag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_Attrition_Flag ;
 
MPRINT(EM_ASSESS):   VAR P_Attrition_Flag1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_Attrition_Flag") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Attrition_Flag1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_Attrition_Flag P_Attrition_Flag1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_Attrition_Flag ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_Attrition_Flag1 NTARGET _tmpfreqvar_
WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_Attrition_Flag1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1604938272 _NEVENTS
325 _NNONEVENTS 1700 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2025));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_Attrition_Flag1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_Attrition_Flag1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_Attrition_Flag1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_Attrition_Flag1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_Attrition_Flag1 *
_FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_Attrition_Flag1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0031709262 OVLMAX 0.9998833339 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2025 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2025/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2025)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2025/20) ) / (
AVGNUMRESP / (2025/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2025 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2025 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2025/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2025/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2025;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Attrition_Flag";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
384374     %let _cn = %sysfunc(getoption(CENTER));
384375     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
384376     proc print data=EMWS1.AutoNeural_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_EMREPORTFIT noobs label;
384377     var STAT LABEL TRAIN
384378     VALIDATE
384379     TEST
384380     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE TEST ;
384381     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
384382     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
384383     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
384384     run;
 
NOTE: There were 21 observations read from the data set EMWS1.AUTONEURAL_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 219.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
384385     title10;
MPRINT(EM_DIAGRAM):   title10;
384386     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
384387     proc sort data=EMWS1.AutoNeural_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.AutoNeural_EMCLASSIFICATION nothreads;
384388     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
384389     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL_EMCLASSIFICATION.
NOTE: The data set EMWS1.AUTONEURAL_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
384390     %let _cn = %sysfunc(getoption(CENTER));
384391     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
384392     proc print data=EMWS1.AutoNeural_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_EMCLASSIFICATION noobs label;
384393     var from into pct_row pct_col count percent
384394     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
384395     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
384396     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
384397     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
384398     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
384399     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
384400     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
384401     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
384402     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
384403     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
384404     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
384405     run;
 
NOTE: There were 8 observations read from the data set EMWS1.AUTONEURAL_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 220.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
384406     title9;
MPRINT(EM_DIAGRAM):   title9;
384407     title10;
MPRINT(EM_DIAGRAM):   title10;
384408     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
384409     %let _cn = %sysfunc(getoption(CENTER));
384410     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
384411     data EMWS1.AutoNeural_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS1.AutoNeural_EMEVENTREPORT;
384412     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
384412   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
384413     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
384413   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
384413   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
384413   ! FALSEEVENT
384414     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
384414   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
384414   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
384415        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
384416     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
384417     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
384418     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
384419     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
384420     set EMWS1.AutoNeural_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.AutoNeural_EMEVENTREPORT;
384421     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL_EMEVENTREPORT.
NOTE: The data set EMWS1.AUTONEURAL_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
384422     proc print data=EMWS1.AutoNeural_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_EMEVENTREPORT noobs label;
384423     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
384424     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
384425     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
384426     run;
 
NOTE: There were 2 observations read from the data set EMWS1.AUTONEURAL_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 221.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
384427     title10;
MPRINT(EM_DIAGRAM):   title10;
384428     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
384429     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
384430     modify AutoNeural_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
384431     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
384432     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
384432   ! ;
MPRINT(EM_DIAGRAM):   run;
384433     run;
 
NOTE: MODIFY was successful for EMWS1.AUTONEURAL_EMRANK.DATA.
384434     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
384435     %let _cn = %sysfunc(getoption(CENTER));
384436     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
384437     proc print data=EMWS1.AutoNeural_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_EMRANK label noobs;
384438     var
384439     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
384440     by
384441     notsorted DATAROLE
384442     notsorted TARGET
384443     notsorted TARGETLABEL
384444     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
384445     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
384446     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
384447     run;
 
NOTE: There were 40 observations read from the data set EMWS1.AUTONEURAL_EMRANK.
NOTE: The PROCEDURE PRINT printed page 222.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
384448     title10;
MPRINT(EM_DIAGRAM):   title10;
384449     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
384450     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
384451     modify AutoNeural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
384452     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
384452   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
384453     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
384453   ! ;
MPRINT(EM_DIAGRAM):   run;
384454     run;
 
NOTE: MODIFY was successful for EMWS1.AUTONEURAL_EMSCOREDIST.DATA.
384455     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.AutoNeural_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Attrition_Flag" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
